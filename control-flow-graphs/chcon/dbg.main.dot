digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00002af0" [URL="dbg.main/0x00002af0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x38d8\l3458: int dbg.main (int argc, char **argv);\l; var char *file_context @ rbp-0x40\l; var uint32_t var_8h @ rsp+0x18\l; var uint32_t var_ch @ rsp+0x1c\l; var uint32_t var_10h @ rsp+0x20\l; var int64_t var_18h @ rsp+0x28\l; var int64_t var_20h @ rsp+0x30\l; var int64_t var_28h @ rsp+0x38\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x00002af0      endbr64                                                ; int main(int argc,char ** argv);\l0x00002af4      push r15\l0x00002af6      xor r15d, r15d\l0x00002af9      push r14\l0x00002afb      lea r14, obj.long_options                              ; 0x12900\l0x00002b02      push r13\l0x00002b04      lea r13, str.HLPRhvu:r:t:l:                            ; 0xd0e0 ; \"HLPRhvu:r:t:l:\"\l0x00002b0b      push r12\l0x00002b0d      movsxd r12, edi                                        ; argc\l0x00002b10      push rbp\l0x00002b11      lea rbp, [0x0000d084]                                  ; \"coreutils\"\l0x00002b18      push rbx\l0x00002b19      mov rbx, rsi                                           ; argv\l0x00002b1c      sub rsp, 0x38\l0x00002b20      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x00002b23      mov rax, qword fs:[0x28]\l0x00002b2c      mov qword [var_28h], rax\l0x00002b31      xor eax, eax\l0x00002b33      call dbg.set_program_name\l0x00002b38      lea rsi, [0x0000e2a1]                                  ; const char *locale\l0x00002b3f      mov edi, 6                                             ; int category\l0x00002b44      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x00002b49      lea rsi, str._usr_local_share_locale                   ; 0xd0ad ; \"/usr/local/share/locale\" ; char *dirname\l0x00002b50      mov rdi, rbp                                           ; char *domainname\l0x00002b53      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x00002b58      mov rdi, rbp                                           ; char *domainname\l0x00002b5b      lea rbp, [0x0000dcf8]\l0x00002b62      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x00002b67      lea rdi, [dbg.close_stdout]                            ; 0x3e40 ; func function\l0x00002b6e      call sym.atexit                                        ; int atexit(func function)\l0x00002b73      mov byte [rsp], 0\l0x00002b77      mov qword [var_10h], 0\l0x00002b80      mov dword [var_ch], 0xffffffff                         ; [0xffffffff:4]=0 ; -1\l0x00002b88      mov dword [var_8h], 0x10                               ; [0x10:4]=39\l"]
	"0x00002b90" [URL="dbg.main/0x00002b90", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 102:                                                          ; from 0x00002bd5\l; XREFS: CODE 0x00002bd5  CODE 0x00002bec  CODE 0x00002bf4  \l; XREFS: CODE 0x00002c04  CODE 0x00002c18  CODE 0x00002c27  \l; XREFS: CODE 0x00002c44  CODE 0x00002c64  CODE 0x00002c84  \l; XREFS: CODE 0x00002ca4  CODE 0x00002cb8  CODE 0x00002cc7  \l; XREFS: CODE 0x00002cd8  CODE 0x00002d42  CODE 0x00002dd2  \l0x00002b90      xor r8d, r8d\l0x00002b93      mov rcx, r14\l0x00002b96      mov rdx, r13\l0x00002b99      mov rsi, rbx\l0x00002b9c      mov edi, r12d\l0x00002b9f      call sym.imp.getopt_long\l0x00002ba4      cmp eax, 0xffffffff\l0x00002ba7      je 0x2d47\l"]
	"0x00002bad" [URL="dbg.main/0x00002bad", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002bad      cmp eax, 0x83\l0x00002bb2      jg case.0x2bd5.73\l"]
	"0x00002bb8" [URL="dbg.main/0x00002bb8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002bb8      cmp eax, 0x47\l0x00002bbb      jle 0x2ce0\l"]
	"0x00002bc1" [URL="dbg.main/0x00002bc1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002bc1      sub eax, 0x48\l0x00002bc4      cmp eax, 0x3b\l0x00002bc7      ja case.0x2bd5.73\l"]
	"0x00002bcd" [URL="dbg.main/0x00002bcd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002bcd      movsxd rax, dword [rbp + rax*4]\l0x00002bd2      add rax, rbp\l;-- switch\l0x00002bd5      jmp rax                                                ; switch table (60 cases) at 0xdcf8\l"]
	"0x00002be0" [URL="dbg.main/0x00002be0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 131:                                                          ; from 0x00002bd5\l; CODE XREF from dbg.main @ 0x2bd5\l0x00002be0      mov rax, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x130a0:8]=0\l0x00002be7      mov qword [var_10h], rax\l0x00002bec      jmp case.0x2bd5.102\l"]
	"0x00002bf0" [URL="dbg.main/0x00002bf0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 130:                                                          ; from 0x00002bd5\l; CODE XREF from dbg.main @ 0x2bd5\l0x00002bf0      mov byte [rsp], 1\l0x00002bf4      jmp case.0x2bd5.102\l"]
	"0x00002c00" [URL="dbg.main/0x00002c00", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 129:                                                          ; from 0x00002bd5\l; CODE XREF from dbg.main @ 0x2bd5\l0x00002c00      mov byte [rsp], 0\l0x00002c04      jmp case.0x2bd5.102\l"]
	"0x00002c10" [URL="dbg.main/0x00002c10", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 128:                                                          ; from 0x00002bd5\l; CODE XREF from dbg.main @ 0x2bd5\l0x00002c10      mov dword [var_ch], 1\l0x00002c18      jmp case.0x2bd5.102\l"]
	"0x00002c20" [URL="dbg.main/0x00002c20", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 118:                                                          ; from 0x00002bd5\l; CODE XREF from dbg.main @ 0x2bd5\l0x00002c20      mov byte [obj.verbose], 1                              ; [0x13110:1]=1\l0x00002c27      jmp case.0x2bd5.102\l"]
	"0x00002c30" [URL="dbg.main/0x00002c30", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 117:                                                          ; from 0x00002bd5\l; CODE XREF from dbg.main @ 0x2bd5\l; DATA XREF from dbg.chdir_long @ 0xba38\l0x00002c30      mov rax, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x130a0:8]=0\l0x00002c37      mov r15d, 1\l0x00002c3d      mov qword [obj.specified_user], rax                    ; [0x130f8:8]=0\l0x00002c44      jmp case.0x2bd5.102\l"]
	"0x00002c50" [URL="dbg.main/0x00002c50", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 116:                                                          ; from 0x00002bd5\l; CODE XREF from dbg.main @ 0x2bd5\l0x00002c50      mov rax, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x130a0:8]=0\l0x00002c57      mov r15d, 1\l0x00002c5d      mov qword [obj.specified_type], rax                    ; [0x130e0:8]=0\l0x00002c64      jmp case.0x2bd5.102\l"]
	"0x00002c70" [URL="dbg.main/0x00002c70", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 114:                                                          ; from 0x00002bd5\l; CODE XREF from dbg.main @ 0x2bd5\l0x00002c70      mov rax, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x130a0:8]=0\l0x00002c77      mov r15d, 1\l0x00002c7d      mov qword [obj.specified_role], rax                    ; [0x130f0:8]=0\l0x00002c84      jmp case.0x2bd5.102\l"]
	"0x00002c90" [URL="dbg.main/0x00002c90", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 108:                                                          ; from 0x00002bd5\l; CODE XREF from dbg.main @ 0x2bd5\l0x00002c90      mov rax, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x130a0:8]=0\l0x00002c97      mov r15d, 1\l0x00002c9d      mov qword [obj.specified_range], rax                   ; [0x130e8:8]=0\l0x00002ca4      jmp case.0x2bd5.102\l"]
	"0x00002cb0" [URL="dbg.main/0x00002cb0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 104:                                                          ; from 0x00002bd5\l; CODE XREF from dbg.main @ 0x2bd5\l0x00002cb0      mov dword [var_ch], 0\l0x00002cb8      jmp case.0x2bd5.102\l"]
	"0x00002cc0" [URL="dbg.main/0x00002cc0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 82:                                                           ; from 0x00002bd5\l; CODE XREF from dbg.main @ 0x2bd5\l0x00002cc0      mov byte [obj.recurse], 1                              ; [0x13111:1]=1\l0x00002cc7      jmp case.0x2bd5.102\l"]
	"0x00002cd0" [URL="dbg.main/0x00002cd0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 80:                                                           ; from 0x00002bd5\l; CODE XREF from dbg.main @ 0x2bd5\l0x00002cd0      mov dword [var_8h], 0x10                               ; [0x10:4]=39\l0x00002cd8      jmp case.0x2bd5.102\l"]
	"0x00002ce0" [URL="dbg.main/0x00002ce0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2bbb\l0x00002ce0      cmp eax, 0xffffff7d                                    ; 4294967165\l0x00002ce5      jne 0x2d28\l"]
	"0x00002ce7" [URL="dbg.main/0x00002ce7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002ce7      sub rsp, 8\l0x00002ceb      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0x13088:8]=0 ; func main\l0x00002cf2      xor eax, eax\l0x00002cf4      mov rcx, qword [obj.Version]                           ; [0x13010:8]=0xde14 \"9.0\" ; func init\l0x00002cfb      push 0\l0x00002cfd      lea r9, str.Jim_Meyering                               ; 0xd0c5 ; \"Jim Meyering\" ; int64_t arg_c0h\l0x00002d04      lea r8, str.Russell_Coker                              ; 0xd0d2 ; \"Russell Coker\" ; int64_t arg6\l0x00002d0b      lea rdx, str.GNU_coreutils                             ; 0xd080 ; \"GNU coreutils\" ; int64_t arg3\l0x00002d12      lea rsi, [global_program]                              ; 0xd004 ; \"chcon\" ; int64_t arg2\l0x00002d19      call dbg.version_etc\l0x00002d1e      xor edi, edi                                           ; int status\l0x00002d20      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x00002d28" [URL="dbg.main/0x00002d28", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2ce5\l0x00002d28      cmp eax, 0xffffff7e                                    ; 4294967166\l0x00002d2d      jne case.0x2bd5.73\l"]
	"0x00002d33" [URL="dbg.main/0x00002d33", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002d33      xor edi, edi                                           ; int64_t arg1\l0x00002d35      call dbg.usage\l"]
	"0x00002d3a" [URL="dbg.main/0x00002d3a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 76:                                                           ; from 0x00002bd5\l; CODE XREF from dbg.main @ 0x2bd5\l0x00002d3a      mov dword [var_8h], 2\l0x00002d42      jmp case.0x2bd5.102\l"]
	"0x00002d47" [URL="dbg.main/0x00002d47", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2ba7\l0x00002d47      movzx eax, byte [obj.recurse]                          ; [0x13111:1]=1\l0x00002d4e      test al, al\l0x00002d50      jne 0x2dd7\l"]
	"0x00002d56" [URL="dbg.main/0x00002d56", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002d56      mov dword [var_8h], 0x10                               ; [0x10:4]=39\l0x00002d5e      cmp dword [var_ch], 0\l0x00002d63      setne al\l"]
	"0x00002d66" [URL="dbg.main/0x00002d66", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2de7, 0x34fd\l0x00002d66      mov byte [obj.affect_symlink_referent], al             ; [0x13112:1]=0\l0x00002d6c      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x13090:4]=1\l0x00002d73      mov edx, r12d\l0x00002d76      sub edx, eax\l0x00002d78      cmp qword [var_10h], 0\l0x00002d7e      jne 0x2e11\l"]
	"0x00002d84" [URL="dbg.main/0x00002d84", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002d84      test r15b, r15b\l0x00002d87      jne 0x2e11\l"]
	"0x00002d8d" [URL="dbg.main/0x00002d8d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002d8d      sub edx, 1\l0x00002d90      jg 0x3635\l"]
	"0x00002d96" [URL="dbg.main/0x00002d96", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2e13\l0x00002d96      cmp eax, r12d\l0x00002d99      jl 0x3830\l"]
	"0x00002d9f" [URL="dbg.main/0x00002d9f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002d9f      mov edx, 5\l0x00002da4      lea rsi, str.missing_operand                           ; 0xd101 ; \"missing operand\"\l"]
	"0x00002dab" [URL="dbg.main/0x00002dab", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3872\l0x00002dab      xor edi, edi\l0x00002dad      call sym.imp.dcgettext\l0x00002db2      xor esi, esi                                           ; int errname\l0x00002db4      xor edi, edi                                           ; int status\l0x00002db6      mov rdx, rax                                           ; char *format\l0x00002db9      xor eax, eax\l0x00002dbb      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002dc0" [URL="dbg.main/0x00002dc0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 73...75:                                                      ; from 0x00002bd5\l;-- case 77:                                                           ; from 0x00002bd5\l;-- case 78...79:                                                      ; from 0x00002bd5\l;-- case 81:                                                           ; from 0x00002bd5\l;-- case 83...101:                                                     ; from 0x00002bd5\l;-- case 103:                                                          ; from 0x00002bd5\l;-- case 105...107:                                                    ; from 0x00002bd5\l;-- case 109:                                                          ; from 0x00002bd5\l;-- case 110...113:                                                    ; from 0x00002bd5\l;-- case 115:                                                          ; from 0x00002bd5\l;-- default:                                                           ; from 0x2bd5\l; CODE XREFS from dbg.main @ 0x2bb2, 0x2bc7, 0x2bd5, 0x2d2d, 0x3861\l0x00002dc0      mov edi, 1                                             ; int64_t arg1\l0x00002dc5      call dbg.usage\l"]
	"0x00002dca" [URL="dbg.main/0x00002dca", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 72:                                                           ; from 0x00002bd5\l; CODE XREF from dbg.main @ 0x2bd5\l0x00002dca      mov dword [var_8h], 0x11                               ; [0x11:4]=0\l0x00002dd2      jmp case.0x2bd5.102\l"]
	"0x00002dd7" [URL="dbg.main/0x00002dd7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2d50\l0x00002dd7      cmp dword [var_8h], 0x10\l0x00002ddc      je 0x34f6\l"]
	"0x00002de2" [URL="dbg.main/0x00002de2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002de2      cmp dword [var_ch], 0\l0x00002de7      jne 0x2d66\l"]
	"0x00002ded" [URL="dbg.main/0x00002ded", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; DATA XREF from dbg.save_cwd @ 0xb7f7\l0x00002ded      mov edx, 5\l0x00002df2      lea rsi, str._R__h_requires__P                         ; 0xd0ef ; \"-R -h requires -P\"\l0x00002df9      xor edi, edi\l0x00002dfb      call sym.imp.dcgettext\l; DATA XREF from sym.fts_stat.isra.0 @ 0x7fab\l0x00002e00      xor esi, esi                                           ; int errname\l0x00002e02      mov edi, 1                                             ; int status\l0x00002e07      mov rdx, rax                                           ; char *format\l0x00002e0a      xor eax, eax\l0x00002e0c      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002e11" [URL="dbg.main/0x00002e11", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2d7e, 0x2d87\l0x00002e11      test edx, edx\l; DATA XREF from sym.cdb_free.part.0 @ 0xb9c5\l0x00002e13      jle 0x2d96\l"]
	"0x00002e15" [URL="dbg.main/0x00002e15", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002e15      mov rdi, qword [var_10h]\l0x00002e1a      test rdi, rdi\l0x00002e1d      je 0x3437\l"]
	"0x00002e23" [URL="dbg.main/0x00002e23", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002e23      mov qword [var_20h], 0\l0x00002e2c      lea rsi, [var_20h]\l0x00002e31      call dbg.rpl_getfilecon\l0x00002e36      test eax, eax\l0x00002e38      js 0x3877\l"]
	"0x00002e3e" [URL="dbg.main/0x00002e3e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002e3e      mov rax, qword [var_20h]\l0x00002e43      mov qword [obj.specified_context], rax                 ; [0x13100:8]=22\l0x00002e4a      test r15b, r15b\l0x00002e4d      jne 0x3866\l"]
	"0x00002e53" [URL="dbg.main/0x00002e53", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3442, 0x3650, 0x3664\l0x00002e53      call sym.imp.__errno_location\l0x00002e58      movzx ebp, byte [rsp]\l0x00002e5c      and bpl, byte [obj.recurse]                            ; [0x13111:1]=1\l0x00002e63      mov qword [rsp], rax\l0x00002e67      test bpl, bpl\l0x00002e6a      jne 0x3527\l"]
	"0x00002e70" [URL="dbg.main/0x00002e70", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002e70      mov qword [obj.root_dev_ino], 0                        ; [0x13108:8]=0\l"]
	"0x00002e7b" [URL="dbg.main/0x00002e7b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x353d\l0x00002e7b      mov esi, dword [var_8h]\l0x00002e7f      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x13090:4]=1\l0x00002e86      xor edx, edx\l0x00002e88      lea rdi, [rbx + rax*8]                                 ; int64_t arg2\l0x00002e8c      or esi, 8\l0x00002e8f      mov ebx, 1\l0x00002e94      call dbg.xfts_open\l0x00002e99      mov rbp, rax\l0x00002e9c      mov rdi, rbp                                           ; int64_t arg1\l0x00002e9f      call sym.rpl_fts_read\l0x00002ea4      mov r13, rax\l0x00002ea7      test rax, rax\l0x00002eaa      je 0x2f94\l"]
	"0x00002eb0" [URL="dbg.main/0x00002eb0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2f8e\l0x00002eb0      cmp word [rax + 0x68], 0xa\l0x00002eb5      mov r15, qword [rax + 0x38]\l0x00002eb9      mov r12, qword [rax + 0x30]\l0x00002ebd      ja case.0x2ed1.0\l"]
	"0x00002ebf" [URL="dbg.main/0x00002ebf", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002ebf      movzx eax, word [rax + 0x68]\l0x00002ec3      lea rdx, [0x0000dde8]                                  ; \" Q\\xff\\xff\\xffR\\xff\\xff\\xaeR\\xff\\xff Q\\xff\\xff\\x8dR\\xff\\xff Q\\xff\\xff\\xecP\\xff\\xff_R\\xff\\xff Q\\xff\\xff Q\\xff\\xff\\xf2Q\\xff\\xff9.0\"\l0x00002eca      movsxd rax, dword [rdx + rax*4]\l0x00002ece      add rax, rdx\l;-- switch\l0x00002ed1      jmp rax                                                ; switch table (11 cases) at 0xdde8\l"]
	"0x00002ed4" [URL="dbg.main/0x00002ed4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 6:                                                            ; from 0x00002ed1\l; CODE XREF from dbg.main @ 0x2ed1\l0x00002ed4      cmp byte [obj.recurse], 0                              ; [0x13111:1]=1\l0x00002edb      je 0x337d\l"]
	"0x00002ee1" [URL="dbg.main/0x00002ee1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002ee1      mov rax, qword [obj.root_dev_ino]                      ; [0x13108:8]=0\l0x00002ee8      test rax, rax\l0x00002eeb      je case.0x2ed1.0\l"]
	"0x00002eed" [URL="dbg.main/0x00002eed", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002eed      mov rcx, qword [rax]\l0x00002ef0      cmp qword [r13 + 0x78], rcx\l0x00002ef4      jne case.0x2ed1.0\l"]
	"0x00002ef6" [URL="dbg.main/0x00002ef6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002ef6      mov rax, qword [rax + 8]\l0x00002efa      cmp qword [r13 + 0x70], rax\l0x00002efe      je 0x3582\l"]
	"0x00002f04" [URL="dbg.main/0x00002f04", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002f04      nop dword [rax]\l"]
	"0x00002f08" [URL="dbg.main/0x00002f08", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 0:                                                            ; from 0x00002ed1\l;-- case 5:                                                            ; from 0x00002ed1\l;-- default:                                                           ; from 0x2ed1\l; XREFS: CODE 0x00002ebd  CODE 0x00002ed1  CODE 0x00002eeb  \l; XREFS: CODE 0x00002ef4  CODE 0x000030a3  CODE 0x000030f2  \l0x00002f08      cmp byte [obj.verbose], 0                              ; [0x13110:1]=1\l0x00002f0f      jne 0x31b2\l"]
	"0x00002f15" [URL="dbg.main/0x00002f15", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x31e7\l0x00002f15      mov r15, qword [obj.specified_context]                 ; [0x13100:8]=22\l0x00002f1c      mov r14d, dword [rbp + 0x2c]\l0x00002f20      mov qword [var_20h], 0\l0x00002f29      movzx eax, byte [obj.affect_symlink_referent]          ; [0x13112:1]=0\l0x00002f30      test r15, r15\l0x00002f33      je 0x31ec\l"]
	"0x00002f39" [URL="dbg.main/0x00002f39", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x32cc, 0x32e2\l0x00002f39      cmp byte [obj.affect_symlink_referent], 0              ; [0x13112:1]=0\l0x00002f40      mov rdx, r15\l0x00002f43      mov rsi, r12\l0x00002f46      mov edi, r14d\l0x00002f49      je 0x32e7\l"]
	"0x00002f4f" [URL="dbg.main/0x00002f4f", fillcolor="white",color="#767676", fontname="Courier",label="0x00002f4f      call dbg.setfileconat\l"]
	"0x00002f54" [URL="dbg.main/0x00002f54", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x32ec\l0x00002f54      test eax, eax\l0x00002f56      jne 0x32f1\l"]
	"0x00002f5c" [URL="dbg.main/0x00002f5c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x32dc\l0x00002f5c      cmp qword [obj.specified_context], 0                   ; [0x13100:8]=22\l0x00002f64      je 0x3734\l"]
	"0x00002f6a" [URL="dbg.main/0x00002f6a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3748\l0x00002f6a      mov r14d, 1\l"]
	"0x00002f70" [URL="dbg.main/0x00002f70", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3070, 0x33da, 0x35f4, 0x3630\l0x00002f70      cmp byte [obj.recurse], 0                              ; [0x13111:1]=1\l0x00002f77      je 0x3032\l"]
	"0x00002f7d" [URL="dbg.main/0x00002f7d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x0000302c  CODE 0x00003042  CODE 0x000030e2  \l; XREFS: CODE 0x00003102  CODE 0x0000310f  CODE 0x0000311d  \l; XREFS: CODE 0x000031ad  CODE 0x00003383  \l0x00002f7d      mov rdi, rbp                                           ; int64_t arg1\l0x00002f80      and ebx, r14d\l0x00002f83      call sym.rpl_fts_read\l0x00002f88      mov r13, rax\l0x00002f8b      test rax, rax\l0x00002f8e      jne 0x2eb0\l"]
	"0x00002f94" [URL="dbg.main/0x00002f94", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2eaa\l0x00002f94      mov rax, qword [rsp]\l0x00002f98      cmp dword [rax], 0\l0x00002f9b      jne 0x340b\l"]
	"0x00002fa1" [URL="dbg.main/0x00002fa1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3432\l0x00002fa1      mov rdi, rbp                                           ; int64_t arg1\l0x00002fa4      call dbg.rpl_fts_close\l0x00002fa9      test eax, eax\l0x00002fab      jne 0x33df\l"]
	"0x00002fb1" [URL="dbg.main/0x00002fb1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3406\l0x00002fb1      xor ebx, 1\l0x00002fb4      movzx eax, bl\l0x00002fb7      mov rdx, qword [var_28h]\l0x00002fbc      sub rdx, qword fs:[0x28]\l0x00002fc5      jne 0x382b\l"]
	"0x00002fcb" [URL="dbg.main/0x00002fcb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002fcb      add rsp, 0x38\l0x00002fcf      pop rbx\l0x00002fd0      pop rbp\l0x00002fd1      pop r12\l0x00002fd3      pop r13\l0x00002fd5      pop r14\l0x00002fd7      pop r15\l0x00002fd9      ret\l"]
	"0x00002fda" [URL="dbg.main/0x00002fda", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 10:                                                           ; from 0x00002ed1\l; CODE XREF from dbg.main @ 0x2ed1\l0x00002fda      cmp qword [r13 + 0x58], 0\l0x00002fdf      jne 0x2fec\l"]
	"0x00002fe1" [URL="dbg.main/0x00002fe1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002fe1      cmp qword [r13 + 0x20], 0\l0x00002fe6      je 0x3365\l"]
	"0x00002fec" [URL="dbg.main/0x00002fec", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2fdf\l0x00002fec      mov rsi, r15                                           ; int64_t arg2\l0x00002fef      mov edi, 4                                             ; int64_t arg1\l0x00002ff4      call sym.quotearg_style\l0x00002ff9      mov edx, 5\l0x00002ffe      lea rsi, str.cannot_access__s                          ; 0xd14e ; \"cannot access %s\"\l0x00003005      mov r12, rax\l"]
	"0x00003008" [URL="dbg.main/0x00003008", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3091\l0x00003008      xor edi, edi\l0x0000300a      call sym.imp.dcgettext\l0x0000300f      mov esi, dword [r13 + 0x40]                            ; int errname\l0x00003013      mov rcx, r12\l0x00003016      xor edi, edi                                           ; int status\l0x00003018      mov rdx, rax                                           ; char *format\l0x0000301b      xor eax, eax\l0x0000301d      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00003022" [URL="dbg.main/0x00003022", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3346, 0x3360, 0x34f1, 0x3780\l0x00003022      xor r14d, r14d\l0x00003025      cmp byte [obj.recurse], 0                              ; [0x13111:1]=1\l0x0000302c      jne 0x2f7d\l"]
	"0x00003032" [URL="dbg.main/0x00003032", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2f77\l0x00003032      mov edx, 4\l0x00003037      mov rsi, r13                                           ; uint32_t arg3\l0x0000303a      mov rdi, rbp                                           ; int64_t arg2\l0x0000303d      call dbg.rpl_fts_set\l0x00003042      jmp 0x2f7d\l"]
	"0x00003047" [URL="dbg.main/0x00003047", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 7:                                                            ; from 0x00002ed1\l; CODE XREF from dbg.main @ 0x2ed1\l0x00003047      mov rdx, r15                                           ; int64_t arg3\l0x0000304a      mov esi, 3                                             ; int64_t arg2\l0x0000304f      xor edi, edi                                           ; int64_t arg1\l0x00003051      xor r14d, r14d\l0x00003054      call sym.quotearg_n_style_colon\l0x00003059      mov esi, dword [r13 + 0x40]                            ; int errname\l0x0000305d      lea rdx, [0x0000de28]                                  ; \"%s\" ; char *format\l0x00003064      xor edi, edi                                           ; int status\l0x00003066      mov rcx, rax\l0x00003069      xor eax, eax\l0x0000306b      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00003070      jmp 0x2f70\l"]
	"0x00003075" [URL="dbg.main/0x00003075", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 4:                                                            ; from 0x00002ed1\l; CODE XREF from dbg.main @ 0x2ed1\l0x00003075      mov rsi, r15                                           ; int64_t arg2\l0x00003078      mov edi, 4                                             ; int64_t arg1\l0x0000307d      call sym.quotearg_style\l0x00003082      mov edx, 5\l0x00003087      lea rsi, str.cannot_read_directory__s                  ; 0xd15f ; \"cannot read directory %s\"\l0x0000308e      mov r12, rax\l0x00003091      jmp 0x3008\l"]
	"0x00003096" [URL="dbg.main/0x00003096", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 2:                                                            ; from 0x00002ed1\l; CODE XREF from dbg.main @ 0x2ed1\l0x00003096      mov rsi, r13                                           ; uint32_t arg2\l0x00003099      mov rdi, rbp                                           ; int64_t arg1\l0x0000309c      call dbg.cycle_warning_required\l0x000030a1      test al, al\l0x000030a3      je case.0x2ed1.0\l"]
	"0x000030a9" [URL="dbg.main/0x000030a9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000030a9      mov rdx, r15                                           ; int64_t arg3\l0x000030ac      mov esi, 3                                             ; int64_t arg2\l0x000030b1      xor edi, edi                                           ; int64_t arg1\l0x000030b3      xor r14d, r14d\l0x000030b6      call sym.quotearg_n_style_colon\l0x000030bb      mov edx, 5\l0x000030c0      lea rsi, str.WARNING:_Circular_directory_structure._nThis_almost_certainly_means_that_you_have_a_corrupted_file_system._nNOTIFY_YOUR_SYSTEM_MANAGER._nThe_following_directory_is_part_of_the_cycle:_n___s_n ; 0xdb50 ; \"WARNING: Circular directory structure.\\nThis almost certainly means that you have a corrupted file system.\\nNOTIFY YOUR SYSTEM MANAGER.\\nThe following directory is part of the cycle:\\n  %s\\n\"\l0x000030c7      xor edi, edi\l0x000030c9      mov r12, rax\l0x000030cc      call sym.imp.dcgettext\l0x000030d1      mov rcx, r12\l0x000030d4      xor esi, esi                                           ; int errname\l0x000030d6      xor edi, edi                                           ; int status\l0x000030d8      mov rdx, rax                                           ; char *format\l0x000030db      xor eax, eax\l; DATA XREF from dbg.openat_save_fail @ 0xb68c\l0x000030dd      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x000030e2      jmp 0x2f7d\l"]
	"0x000030e7" [URL="dbg.main/0x000030e7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 1:                                                            ; from 0x00002ed1\l; CODE XREF from dbg.main @ 0x2ed1\l0x000030e7      movzx r14d, byte [obj.recurse]                         ; [0x13111:1]=1\l0x000030ef      test r14b, r14b\l0x000030f2      je case.0x2ed1.0\l"]
	"0x000030f8" [URL="dbg.main/0x000030f8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000030f8      mov rax, qword [obj.root_dev_ino]                      ; [0x13108:8]=0\l0x000030ff      test rax, rax\l0x00003102      je 0x2f7d\l"]
	"0x00003108" [URL="dbg.main/0x00003108", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003108      mov rcx, qword [rax]\l0x0000310b      cmp qword [r13 + 0x78], rcx\l0x0000310f      jne 0x2f7d\l"]
	"0x00003115" [URL="dbg.main/0x00003115", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003115      mov rax, qword [rax + 8]\l0x00003119      cmp qword [r13 + 0x70], rax\l0x0000311d      jne 0x2f7d\l"]
	"0x00003123" [URL="dbg.main/0x00003123", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003123      lea r12, [0x0000e66f]                                  ; \"/\"\l0x0000312a      mov rdi, r15                                           ; const char *s1\l0x0000312d      mov rsi, r12                                           ; const char *s2\l0x00003130      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x00003135      test eax, eax\l0x00003137      jne 0x37d8\l"]
	"0x0000313d" [URL="dbg.main/0x0000313d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000313d      mov rsi, r15                                           ; int64_t arg2\l0x00003140      mov edi, 4                                             ; int64_t arg1\l0x00003145      call sym.quotearg_style\l0x0000314a      mov edx, 5\l0x0000314f      lea rsi, str.it_is_dangerous_to_operate_recursively_on__s ; 0xdaa8 ; \"it is dangerous to operate recursively on %s\"\l0x00003156      xor edi, edi\l0x00003158      mov r12, rax\l0x0000315b      call sym.imp.dcgettext\l0x00003160      mov rcx, r12\l0x00003163      xor esi, esi                                           ; int errname\l0x00003165      xor edi, edi                                           ; int status\l0x00003167      mov rdx, rax                                           ; char *format\l0x0000316a      xor eax, eax\l0x0000316c      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00003171" [URL="dbg.main/0x00003171", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3826\l0x00003171      mov edx, 5\l0x00003176      lea rsi, str.use___no_preserve_root_to_override_this_failsafe ; 0xdb18 ; \"use --no-preserve-root to override this failsafe\"\l0x0000317d      xor edi, edi\l0x0000317f      xor r14d, r14d\l0x00003182      call sym.imp.dcgettext\l0x00003187      xor esi, esi                                           ; int errname\l0x00003189      xor edi, edi                                           ; int status\l0x0000318b      mov rdx, rax                                           ; char *format\l0x0000318e      xor eax, eax\l0x00003190      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00003195      mov edx, 4\l0x0000319a      mov rsi, r13                                           ; uint32_t arg3\l0x0000319d      mov rdi, rbp                                           ; int64_t arg2\l0x000031a0      call dbg.rpl_fts_set\l0x000031a5      mov rdi, rbp                                           ; int64_t arg1\l0x000031a8      call sym.rpl_fts_read\l0x000031ad      jmp 0x2f7d\l"]
	"0x000031b2" [URL="dbg.main/0x000031b2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2f0f\l0x000031b2      mov rsi, r15                                           ; int64_t arg2\l0x000031b5      mov edi, 4                                             ; int64_t arg1\l0x000031ba      call sym.quotearg_style\l0x000031bf      xor edi, edi\l0x000031c1      mov edx, 5\l0x000031c6      lea rsi, str.changing_security_context_of__s_n         ; 0xdc10 ; \"changing security context of %s\\n\"\l0x000031cd      mov r14, rax\l0x000031d0      call sym.imp.dcgettext\l0x000031d5      mov rdx, r14\l0x000031d8      mov edi, 1\l0x000031dd      mov rsi, rax\l0x000031e0      xor eax, eax\l0x000031e2      call sym.imp.__printf_chk\l0x000031e7      jmp 0x2f15\l"]
	"0x000031ec" [URL="dbg.main/0x000031ec", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2f33\l0x000031ec      lea rdx, [var_20h]\l0x000031f1      mov rsi, r12\l0x000031f4      mov edi, r14d\l0x000031f7      test al, al\l0x000031f9      je 0x3388\l"]
	"0x000031ff" [URL="dbg.main/0x000031ff", fillcolor="white",color="#767676", fontname="Courier",label="0x000031ff      call dbg.getfileconat\l"]
	"0x00003204" [URL="dbg.main/0x00003204", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x338d\l0x00003204      test eax, eax\l0x00003206      js 0x3392\l"]
	"0x0000320c" [URL="dbg.main/0x0000320c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3399\l0x0000320c      mov r15, qword [var_20h]\l0x00003211      test r15, r15\l0x00003214      je 0x35f9\l"]
	"0x0000321a" [URL="dbg.main/0x0000321a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000321a      mov rdi, r15\l0x0000321d      call sym.imp.context_new\l0x00003222      mov qword [var_18h], rax\l0x00003227      test rax, rax\l0x0000322a      je 0x374d\l"]
	"0x00003230" [URL="dbg.main/0x00003230", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003230      mov rsi, qword [obj.specified_user]                    ; [0x130f8:8]=0\l0x00003237      test rsi, rsi\l0x0000323a      je 0x324e\l"]
	"0x0000323c" [URL="dbg.main/0x0000323c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000323c      mov rdi, qword [var_18h]\l0x00003241      call sym.imp.context_user_set\l0x00003246      test eax, eax\l0x00003248      jne 0x36ee\l"]
	"0x0000324e" [URL="dbg.main/0x0000324e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x323a\l0x0000324e      mov r15d, 1\l"]
	"0x00003254" [URL="dbg.main/0x00003254", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x372f\l0x00003254      mov rsi, qword [obj.specified_range]                   ; [0x130e8:8]=0\l0x0000325b      test rsi, rsi\l0x0000325e      je 0x3272\l"]
	"0x00003260" [URL="dbg.main/0x00003260", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003260      mov rdi, qword [var_18h]\l0x00003265      call sym.imp.context_range_set\l0x0000326a      test eax, eax\l0x0000326c      jne 0x36a8\l"]
	"0x00003272" [URL="dbg.main/0x00003272", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x325e, 0x36e9\l0x00003272      mov rsi, qword [obj.specified_role]                    ; [0x130f0:8]=0\l0x00003279      test rsi, rsi\l0x0000327c      je 0x3290\l"]
	"0x0000327e" [URL="dbg.main/0x0000327e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000327e      mov rdi, qword [var_18h]\l0x00003283      call sym.imp.context_role_set\l0x00003288      test eax, eax\l0x0000328a      jne 0x3447\l"]
	"0x00003290" [URL="dbg.main/0x00003290", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x327c\l0x00003290      mov rsi, qword [obj.specified_type]                    ; [0x130e0:8]=0\l0x00003297      test rsi, rsi\l0x0000329a      je 0x32ae\l"]
	"0x0000329c" [URL="dbg.main/0x0000329c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000329c      mov rdi, qword [var_18h]\l0x000032a1      call sym.imp.context_type_set\l0x000032a6      test eax, eax\l0x000032a8      jne 0x349f\l"]
	"0x000032ae" [URL="dbg.main/0x000032ae", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x329a\l0x000032ae      test r15b, r15b\l0x000032b1      je 0x34dd\l"]
	"0x000032b7" [URL="dbg.main/0x000032b7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000032b7      mov rdi, qword [var_18h]\l0x000032bc      call sym.imp.context_str\l0x000032c1      mov rsi, qword [var_20h]\l0x000032c6      mov r15, rax\l0x000032c9      test rsi, rsi\l0x000032cc      je 0x2f39\l"]
	"0x000032d2" [URL="dbg.main/0x000032d2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000032d2      mov rdi, rax                                           ; const char *s1\l0x000032d5      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x000032da      test eax, eax\l0x000032dc      je 0x2f5c\l"]
	"0x000032e2" [URL="dbg.main/0x000032e2", fillcolor="white",color="#767676", fontname="Courier",label="0x000032e2      jmp 0x2f39\l"]
	"0x000032e7" [URL="dbg.main/0x000032e7", fillcolor="white",color="#767676", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2f49\l0x000032e7      call dbg.lsetfileconat\l0x000032ec      jmp 0x2f54\l"]
	"0x000032f1" [URL="dbg.main/0x000032f1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2f56\l0x000032f1      mov rsi, r15                                           ; int64_t arg2\l0x000032f4      mov edi, 1                                             ; int64_t arg1\l0x000032f9      call sym.quote_n\l0x000032fe      mov rdx, r12                                           ; int64_t arg3\l0x00003301      xor edi, edi                                           ; int64_t arg1\l0x00003303      mov esi, 4                                             ; int64_t arg2\l0x00003308      mov r14, rax\l0x0000330b      call sym.quotearg_n_style\l0x00003310      xor edi, edi\l0x00003312      mov edx, 5\l0x00003317      lea rsi, str.failed_to_change_context_of__s_to__s      ; 0xdcd0 ; \"failed to change context of %s to %s\"\l0x0000331e      mov r12, rax\l0x00003321      call sym.imp.dcgettext\l0x00003326      xor edi, edi                                           ; int status\l0x00003328      mov r8, r14\l0x0000332b      mov rcx, r12\l0x0000332e      mov rdx, rax                                           ; char *format\l0x00003331      mov rax, qword [rsp]\l0x00003335      mov esi, dword [rax]                                   ; int errname\l0x00003337      xor eax, eax\l0x00003339      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x0000333e      cmp qword [obj.specified_context], 0                   ; [0x13100:8]=22\l0x00003346      jne 0x3022\l"]
	"0x0000334c" [URL="dbg.main/0x0000334c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000334c      mov rdi, qword [var_18h]\l0x00003351      call sym.imp.context_free\l0x00003356      mov rdi, qword [var_20h]\l0x0000335b      call sym.imp.freecon\l0x00003360      jmp 0x3022\l"]
	"0x00003365" [URL="dbg.main/0x00003365", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2fe6\l0x00003365      mov qword [r13 + 0x20], 1\l0x0000336d      mov edx, 1\l0x00003372      mov rsi, r13                                           ; uint32_t arg3\l0x00003375      mov rdi, rbp                                           ; int64_t arg2\l0x00003378      call dbg.rpl_fts_set\l"]
	"0x0000337d" [URL="dbg.main/0x0000337d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2edb\l0x0000337d      mov r14d, 1\l0x00003383      jmp 0x2f7d\l"]
	"0x00003388" [URL="dbg.main/0x00003388", fillcolor="white",color="#767676", fontname="Courier",label="; CODE XREF from dbg.main @ 0x31f9\l0x00003388      call dbg.lgetfileconat\l0x0000338d      jmp 0x3204\l"]
	"0x00003392" [URL="dbg.main/0x00003392", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3206\l0x00003392      mov rax, qword [rsp]\l0x00003396      cmp dword [rax], 0x3d\l0x00003399      je 0x320c\l"]
	"0x0000339f" [URL="dbg.main/0x0000339f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000339f      mov rsi, r12                                           ; int64_t arg2\l0x000033a2      mov edi, 4                                             ; int64_t arg1\l0x000033a7      xor r14d, r14d\l0x000033aa      call sym.quotearg_style\l0x000033af      mov edx, 5\l0x000033b4      lea rsi, str.failed_to_get_security_context_of__s      ; 0xda30 ; \"failed to get security context of %s\"\l0x000033bb      xor edi, edi\l0x000033bd      mov r12, rax\l0x000033c0      call sym.imp.dcgettext\l0x000033c5      mov rcx, r12\l0x000033c8      xor edi, edi                                           ; int status\l0x000033ca      mov rdx, rax                                           ; char *format\l0x000033cd      mov rax, qword [rsp]\l0x000033d1      mov esi, dword [rax]                                   ; int errname\l0x000033d3      xor eax, eax\l0x000033d5      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x000033da      jmp 0x2f70\l"]
	"0x000033df" [URL="dbg.main/0x000033df", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2fab\l0x000033df      mov edx, 5\l0x000033e4      lea rsi, str.fts_close_failed                          ; 0xd18d ; \"fts_close failed\"\l0x000033eb      xor edi, edi\l0x000033ed      xor ebx, ebx\l0x000033ef      call sym.imp.dcgettext\l0x000033f4      xor edi, edi                                           ; int status\l0x000033f6      mov rdx, rax                                           ; char *format\l0x000033f9      mov rax, qword [rsp]\l0x000033fd      mov esi, dword [rax]                                   ; int errname\l0x000033ff      xor eax, eax\l0x00003401      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00003406      jmp 0x2fb1\l"]
	"0x0000340b" [URL="dbg.main/0x0000340b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2f9b\l0x0000340b      mov edx, 5\l0x00003410      lea rsi, str.fts_read_failed                           ; 0xd13e ; \"fts_read failed\"\l0x00003417      xor edi, edi\l0x00003419      xor ebx, ebx\l0x0000341b      call sym.imp.dcgettext\l0x00003420      xor edi, edi                                           ; int status\l0x00003422      mov rdx, rax                                           ; char *format\l0x00003425      mov rax, qword [rsp]\l0x00003429      mov esi, dword [rax]                                   ; int errname\l0x0000342b      xor eax, eax\l0x0000342d      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00003432      jmp 0x2fa1\l"]
	"0x00003437" [URL="dbg.main/0x00003437", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2e1d\l0x00003437      mov qword [obj.specified_context], 0                   ; [0x13100:8]=22\l0x00003442      jmp 0x2e53\l"]
	"0x00003447" [URL="dbg.main/0x00003447", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x328a\l0x00003447      mov rdi, qword [obj.specified_role]                    ; [0x130f0:8]=0 ; int64_t arg1\l0x0000344e      call dbg.quote\l0x00003453      mov edx, 5\l0x00003458      lea rsi, str.failed_to_set__s_security_context_component_to__s ; 0xdc98 ; \"failed to set %s security context component to %s\"\l0x0000345f      xor edi, edi\l0x00003461      mov r12, rax\l0x00003464      call sym.imp.dcgettext\l0x00003469      mov r8, r12\l0x0000346c      lea rcx, str.role                                      ; 0xd183 ; \"role\"\l0x00003473      xor edi, edi                                           ; int status\l0x00003475      mov rdx, rax                                           ; char *format\l0x00003478      mov rax, qword [rsp]\l0x0000347c      mov esi, dword [rax]                                   ; int errname\l0x0000347e      xor eax, eax\l0x00003480      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00003485      mov rsi, qword [obj.specified_type]                    ; [0x130e0:8]=0\l0x0000348c      test rsi, rsi\l0x0000348f      je 0x34dd\l"]
	"0x00003491" [URL="dbg.main/0x00003491", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003491      mov rdi, qword [var_18h]\l0x00003496      call sym.imp.context_type_set\l0x0000349b      test eax, eax\l0x0000349d      je 0x34dd\l"]
	"0x0000349f" [URL="dbg.main/0x0000349f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x32a8\l0x0000349f      mov rdi, qword [obj.specified_type]                    ; [0x130e0:8]=0 ; int64_t arg1\l0x000034a6      call dbg.quote\l0x000034ab      mov edx, 5\l0x000034b0      lea rsi, str.failed_to_set__s_security_context_component_to__s ; 0xdc98 ; \"failed to set %s security context component to %s\"\l0x000034b7      xor edi, edi\l0x000034b9      mov r12, rax\l0x000034bc      call sym.imp.dcgettext\l0x000034c1      mov r8, r12\l0x000034c4      lea rcx, str.type                                      ; 0xd188 ; \"type\"\l0x000034cb      xor edi, edi                                           ; int status\l0x000034cd      mov rdx, rax                                           ; char *format\l0x000034d0      mov rax, qword [rsp]\l0x000034d4      mov esi, dword [rax]                                   ; int errname\l0x000034d6      xor eax, eax\l0x000034d8      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x000034dd" [URL="dbg.main/0x000034dd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x32b1, 0x348f, 0x349d\l0x000034dd      mov r15, qword [rsp]\l0x000034e1      mov rdi, qword [var_18h]\l0x000034e6      mov r12d, dword [r15]\l0x000034e9      call sym.imp.context_free\l0x000034ee      mov dword [r15], r12d\l0x000034f1      jmp 0x3022\l"]
	"0x000034f6" [URL="dbg.main/0x000034f6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2ddc\l0x000034f6      xor eax, eax\l0x000034f8      cmp dword [var_ch], 1\l0x000034fd      jne 0x2d66\l"]
	"0x00003503" [URL="dbg.main/0x00003503", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003503      mov edx, 5\l0x00003508      lea rsi, str._R___dereference_requires_either__H_or__L ; 0xda00 ; \"-R --dereference requires either -H or -L\"\l0x0000350f      xor edi, edi\l0x00003511      call sym.imp.dcgettext\l0x00003516      xor esi, esi                                           ; int errname\l0x00003518      mov edi, 1                                             ; int status\l0x0000351d      mov rdx, rax                                           ; char *format\l0x00003520      xor eax, eax\l0x00003522      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00003527" [URL="dbg.main/0x00003527", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2e6a\l0x00003527      lea rdi, [global_dev_ino_buf]                          ; 0x130d0 ; int64_t arg1\l0x0000352e      call dbg.get_root_dev_ino\l0x00003533      mov qword [obj.root_dev_ino], rax                      ; [0x13108:8]=0\l0x0000353a      test rax, rax\l0x0000353d      jne 0x2e7b\l"]
	"0x00003543" [URL="dbg.main/0x00003543", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003543      lea rsi, [0x0000e66f]                                  ; \"/\" ; int64_t arg2\l0x0000354a      mov edi, 4                                             ; int64_t arg1\l0x0000354f      call sym.quotearg_style\l0x00003554      mov edx, 5\l0x00003559      lea rsi, str.failed_to_get_attributes_of__s            ; 0xda88 ; \"failed to get attributes of %s\"\l0x00003560      xor edi, edi\l0x00003562      mov r12, rax\l0x00003565      call sym.imp.dcgettext\l0x0000356a      mov rcx, r12\l0x0000356d      mov edi, 1                                             ; int status\l0x00003572      mov rdx, rax                                           ; char *format\l0x00003575      mov rax, qword [rsp]\l0x00003579      mov esi, dword [rax]                                   ; int errname\l0x0000357b      xor eax, eax\l0x0000357d      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00003582" [URL="dbg.main/0x00003582", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2efe\l0x00003582      lea r12, [0x0000e66f]                                  ; \"/\"\l0x00003589      mov rdi, r15                                           ; const char *s1\l0x0000358c      mov rsi, r12                                           ; const char *s2\l0x0000358f      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x00003594      test eax, eax\l0x00003596      jne 0x3785\l"]
	"0x0000359c" [URL="dbg.main/0x0000359c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000359c      mov rsi, r15                                           ; int64_t arg2\l0x0000359f      mov edi, 4                                             ; int64_t arg1\l0x000035a4      call sym.quotearg_style\l0x000035a9      mov edx, 5\l0x000035ae      lea rsi, str.it_is_dangerous_to_operate_recursively_on__s ; 0xdaa8 ; \"it is dangerous to operate recursively on %s\"\l0x000035b5      xor edi, edi\l0x000035b7      mov r12, rax\l0x000035ba      call sym.imp.dcgettext\l0x000035bf      mov rcx, r12\l0x000035c2      xor esi, esi                                           ; int errname\l0x000035c4      xor edi, edi                                           ; int status\l0x000035c6      mov rdx, rax                                           ; char *format\l0x000035c9      xor eax, eax\l0x000035cb      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x000035d0" [URL="dbg.main/0x000035d0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x37d3\l0x000035d0      mov edx, 5\l0x000035d5      lea rsi, str.use___no_preserve_root_to_override_this_failsafe ; 0xdb18 ; \"use --no-preserve-root to override this failsafe\"\l0x000035dc      xor edi, edi\l0x000035de      xor r14d, r14d\l0x000035e1      call sym.imp.dcgettext\l0x000035e6      xor esi, esi                                           ; int errname\l0x000035e8      xor edi, edi                                           ; int status\l0x000035ea      mov rdx, rax                                           ; char *format\l0x000035ed      xor eax, eax\l0x000035ef      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x000035f4      jmp 0x2f70\l"]
	"0x000035f9" [URL="dbg.main/0x000035f9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3214\l0x000035f9      mov rsi, r12                                           ; int64_t arg2\l0x000035fc      mov edi, 4                                             ; int64_t arg1\l0x00003601      xor r14d, r14d\l0x00003604      call sym.quotearg_style\l0x00003609      mov edx, 5\l0x0000360e      lea rsi, str.cant_apply_partial_context_to_unlabeled_file__s ; 0xdc38 ; \"can't apply partial context to unlabeled file %s\"\l0x00003615      xor edi, edi\l0x00003617      mov r12, rax\l0x0000361a      call sym.imp.dcgettext\l0x0000361f      mov rcx, r12\l0x00003622      xor esi, esi                                           ; int errname\l0x00003624      xor edi, edi                                           ; int status\l0x00003626      mov rdx, rax                                           ; char *format\l0x00003629      xor eax, eax\l0x0000362b      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00003630      jmp 0x2f70\l"]
	"0x00003635" [URL="dbg.main/0x00003635", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2d90\l0x00003635      lea edx, [rax + 1]\l0x00003638      mov rax, qword [rbx + rax*8]\l0x0000363c      mov dword [obj.optind], edx                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x13090:4]=1\l0x00003642      mov qword [obj.specified_context], rax                 ; [0x13100:8]=22\l0x00003649      call sym.imp.is_selinux_enabled\l0x0000364e      test eax, eax\l0x00003650      jle 0x2e53\l"]
	"0x00003656" [URL="dbg.main/0x00003656", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003656      mov rdi, qword [obj.specified_context]                 ; [0x13100:8]=22\l0x0000365d      call sym.imp.security_check_context\l0x00003662      test eax, eax\l0x00003664      jns 0x2e53\l"]
	"0x0000366a" [URL="dbg.main/0x0000366a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000366a      mov rdi, qword [obj.specified_context]                 ; [0x13100:8]=22 ; int64_t arg1\l0x00003671      call dbg.quote\l0x00003676      mov edx, 5\l0x0000367b      lea rsi, str.invalid_context:__s                       ; 0xd12a ; \"invalid context: %s\"\l0x00003682      xor edi, edi\l0x00003684      mov r13, rax\l0x00003687      call sym.imp.dcgettext\l0x0000368c      mov r12, rax\l0x0000368f      call sym.imp.__errno_location\l0x00003694      mov rcx, r13\l0x00003697      mov rdx, r12                                           ; char *format\l0x0000369a      mov edi, 1                                             ; int status\l0x0000369f      mov esi, dword [rax]                                   ; int errname\l0x000036a1      xor eax, eax\l0x000036a3      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x000036a8" [URL="dbg.main/0x000036a8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x326c\l0x000036a8      mov rdi, qword [obj.specified_range]                   ; [0x130e8:8]=0 ; int64_t arg1\l0x000036af      call dbg.quote\l0x000036b4      mov edx, 5\l0x000036b9      lea rsi, str.failed_to_set__s_security_context_component_to__s ; 0xdc98 ; \"failed to set %s security context component to %s\"\l0x000036c0      xor edi, edi\l0x000036c2      mov r15, rax\l0x000036c5      call sym.imp.dcgettext\l0x000036ca      mov r8, r15\l0x000036cd      lea rcx, str.range                                     ; 0xd17d ; \"range\"\l0x000036d4      xor edi, edi                                           ; int status\l0x000036d6      mov rdx, rax                                           ; char *format\l0x000036d9      mov rax, qword [rsp]\l0x000036dd      xor r15d, r15d\l0x000036e0      mov esi, dword [rax]                                   ; int errname\l0x000036e2      xor eax, eax\l0x000036e4      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x000036e9      jmp 0x3272\l"]
	"0x000036ee" [URL="dbg.main/0x000036ee", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3248\l0x000036ee      mov rdi, qword [obj.specified_user]                    ; [0x130f8:8]=0 ; int64_t arg1\l0x000036f5      call dbg.quote\l0x000036fa      mov edx, 5\l0x000036ff      lea rsi, str.failed_to_set__s_security_context_component_to__s ; 0xdc98 ; \"failed to set %s security context component to %s\"\l0x00003706      xor edi, edi\l0x00003708      mov r15, rax\l0x0000370b      call sym.imp.dcgettext\l0x00003710      mov r8, r15\l0x00003713      lea rcx, str.user                                      ; 0xd178 ; \"user\"\l0x0000371a      xor edi, edi                                           ; int status\l0x0000371c      mov rdx, rax                                           ; char *format\l0x0000371f      mov rax, qword [rsp]\l0x00003723      xor r15d, r15d\l0x00003726      mov esi, dword [rax]                                   ; int errname\l0x00003728      xor eax, eax\l0x0000372a      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x0000372f      jmp 0x3254\l"]
	"0x00003734" [URL="dbg.main/0x00003734", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2f64\l0x00003734      mov rdi, qword [var_18h]\l0x00003739      call sym.imp.context_free\l0x0000373e      mov rdi, qword [var_20h]\l0x00003743      call sym.imp.freecon\l0x00003748      jmp 0x2f6a\l"]
	"0x0000374d" [URL="dbg.main/0x0000374d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x322a\l0x0000374d      mov rdi, r15                                           ; int64_t arg1\l0x00003750      call dbg.quote\l0x00003755      xor edi, edi\l0x00003757      mov edx, 5\l0x0000375c      lea rsi, str.failed_to_create_security_context:__s     ; 0xdc70 ; \"failed to create security context: %s\"\l0x00003763      mov r12, rax\l0x00003766      call sym.imp.dcgettext\l0x0000376b      mov rcx, r12\l0x0000376e      xor edi, edi                                           ; int status\l0x00003770      mov rdx, rax                                           ; char *format\l0x00003773      mov rax, qword [rsp]\l0x00003777      mov esi, dword [rax]                                   ; int errname\l0x00003779      xor eax, eax\l0x0000377b      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00003780      jmp 0x3022\l"]
	"0x00003785" [URL="dbg.main/0x00003785", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3596\l0x00003785      mov rdx, r12                                           ; int64_t arg3\l0x00003788      mov esi, 4                                             ; int64_t arg2\l0x0000378d      mov edi, 1                                             ; int64_t arg1\l0x00003792      call sym.quotearg_n_style\l0x00003797      mov rdx, r15                                           ; int64_t arg3\l0x0000379a      xor edi, edi                                           ; int64_t arg1\l0x0000379c      mov esi, 4                                             ; int64_t arg2\l0x000037a1      mov r14, rax\l0x000037a4      call sym.quotearg_n_style\l0x000037a9      xor edi, edi\l0x000037ab      mov edx, 5\l0x000037b0      lea rsi, str.it_is_dangerous_to_operate_recursively_on__s__same_as__s_ ; 0xdad8 ; \"it is dangerous to operate recursively on %s (same as %s)\"\l0x000037b7      mov r12, rax\l0x000037ba      call sym.imp.dcgettext\l0x000037bf      mov r8, r14\l0x000037c2      mov rcx, r12\l0x000037c5      xor esi, esi                                           ; int errname\l0x000037c7      mov rdx, rax                                           ; char *format\l0x000037ca      xor edi, edi                                           ; int status\l0x000037cc      xor eax, eax\l0x000037ce      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x000037d3      jmp 0x35d0\l"]
	"0x000037d8" [URL="dbg.main/0x000037d8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3137\l0x000037d8      mov rdx, r12                                           ; int64_t arg3\l0x000037db      mov esi, 4                                             ; int64_t arg2\l0x000037e0      mov edi, 1                                             ; int64_t arg1\l0x000037e5      call sym.quotearg_n_style\l0x000037ea      mov rdx, r15                                           ; int64_t arg3\l0x000037ed      xor edi, edi                                           ; int64_t arg1\l0x000037ef      mov esi, 4                                             ; int64_t arg2\l0x000037f4      mov r14, rax\l0x000037f7      call sym.quotearg_n_style\l0x000037fc      xor edi, edi\l0x000037fe      mov edx, 5\l0x00003803      lea rsi, str.it_is_dangerous_to_operate_recursively_on__s__same_as__s_ ; 0xdad8 ; \"it is dangerous to operate recursively on %s (same as %s)\"\l0x0000380a      mov r12, rax\l0x0000380d      call sym.imp.dcgettext\l0x00003812      mov r8, r14\l0x00003815      mov rcx, r12\l0x00003818      xor esi, esi                                           ; int errname\l0x0000381a      mov rdx, rax                                           ; char *format\l0x0000381d      xor edi, edi                                           ; int status\l0x0000381f      xor eax, eax\l0x00003821      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00003826      jmp 0x3171\l"]
	"0x0000382b" [URL="dbg.main/0x0000382b", fillcolor="white",color="#767676", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2fc5\l0x0000382b      call sym.imp.__stack_chk_fail                          ; void __stack_chk_fail(void)\l"]
	"0x00003830" [URL="dbg.main/0x00003830", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2d99\l0x00003830      mov rdi, qword [rbx + r12*8 - 8]                       ; int64_t arg1\l0x00003835      call dbg.quote\l0x0000383a      xor edi, edi\l0x0000383c      mov edx, 5\l0x00003841      lea rsi, str.missing_operand_after__s                  ; 0xd111 ; \"missing operand after %s\"\l0x00003848      mov r12, rax\l0x0000384b      call sym.imp.dcgettext\l0x00003850      mov rcx, r12\l0x00003853      xor esi, esi                                           ; int errname\l0x00003855      xor edi, edi                                           ; int status\l0x00003857      mov rdx, rax                                           ; char *format\l0x0000385a      xor eax, eax\l0x0000385c      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00003861      jmp case.0x2bd5.73\l"]
	"0x00003866" [URL="dbg.main/0x00003866", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2e4d\l0x00003866      mov edx, 5\l0x0000386b      lea rsi, str.conflicting_security_context_specifiers_given ; 0xda58 ; \"conflicting security context specifiers given\"\l0x00003872      jmp 0x2dab\l"]
	"0x00003877" [URL="dbg.main/0x00003877", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2e38\l0x00003877      mov rsi, qword [var_10h]                               ; int64_t arg2\l0x0000387c      mov edi, 4                                             ; int64_t arg1\l0x00003881      call sym.quotearg_style\l0x00003886      mov edx, 5\l0x0000388b      lea rsi, str.failed_to_get_security_context_of__s      ; 0xda30 ; \"failed to get security context of %s\"\l0x00003892      xor edi, edi\l0x00003894      mov r13, rax\l0x00003897      call sym.imp.dcgettext\l0x0000389c      mov r12, rax\l0x0000389f      call sym.imp.__errno_location\l0x000038a4      mov rcx, r13\l0x000038a7      mov rdx, r12                                           ; char *format\l0x000038aa      mov edi, 1                                             ; int status\l0x000038af      mov esi, dword [rax]                                   ; int errname\l0x000038b1      xor eax, eax\l0x000038b3      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x000038b8      nop dword [rax + rax]\l"]
        "0x00002af0" -> "0x00002b90" [color="#3a96dd"];
        "0x00002b90" -> "0x00002d47" [color="#13a10e"];
        "0x00002b90" -> "0x00002bad" [color="#c50f1f"];
        "0x00002bad" -> "0x00002dc0" [color="#13a10e"];
        "0x00002bad" -> "0x00002bb8" [color="#c50f1f"];
        "0x00002bb8" -> "0x00002ce0" [color="#13a10e"];
        "0x00002bb8" -> "0x00002bc1" [color="#c50f1f"];
        "0x00002bc1" -> "0x00002dc0" [color="#13a10e"];
        "0x00002bc1" -> "0x00002bcd" [color="#c50f1f"];
        "0x00002bcd" -> "0x00002dca" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002d3a" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002cd0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002cc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002b90" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002cb0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002c90" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002c70" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002c50" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002c30" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002c20" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002c10" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002c00" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002bf0" [color="#3a96dd"];
        "0x00002bcd" -> "0x00002be0" [color="#3a96dd"];
        "0x00002be0" -> "0x00002b90" [color="#3a96dd"];
        "0x00002bf0" -> "0x00002b90" [color="#3a96dd"];
        "0x00002c00" -> "0x00002b90" [color="#3a96dd"];
        "0x00002c10" -> "0x00002b90" [color="#3a96dd"];
        "0x00002c20" -> "0x00002b90" [color="#3a96dd"];
        "0x00002c30" -> "0x00002b90" [color="#3a96dd"];
        "0x00002c50" -> "0x00002b90" [color="#3a96dd"];
        "0x00002c70" -> "0x00002b90" [color="#3a96dd"];
        "0x00002c90" -> "0x00002b90" [color="#3a96dd"];
        "0x00002cb0" -> "0x00002b90" [color="#3a96dd"];
        "0x00002cc0" -> "0x00002b90" [color="#3a96dd"];
        "0x00002cd0" -> "0x00002b90" [color="#3a96dd"];
        "0x00002ce0" -> "0x00002d28" [color="#13a10e"];
        "0x00002ce0" -> "0x00002ce7" [color="#c50f1f"];
        "0x00002d28" -> "0x00002dc0" [color="#13a10e"];
        "0x00002d28" -> "0x00002d33" [color="#c50f1f"];
        "0x00002d33" -> "0x00002d3a" [color="#3a96dd"];
        "0x00002d3a" -> "0x00002b90" [color="#3a96dd"];
        "0x00002d47" -> "0x00002dd7" [color="#13a10e"];
        "0x00002d47" -> "0x00002d56" [color="#c50f1f"];
        "0x00002d56" -> "0x00002d66" [color="#3a96dd"];
        "0x00002d66" -> "0x00002e11" [color="#13a10e"];
        "0x00002d66" -> "0x00002d84" [color="#c50f1f"];
        "0x00002d84" -> "0x00002e11" [color="#13a10e"];
        "0x00002d84" -> "0x00002d8d" [color="#c50f1f"];
        "0x00002d8d" -> "0x00003635" [color="#13a10e"];
        "0x00002d8d" -> "0x00002d96" [color="#c50f1f"];
        "0x00002d96" -> "0x00003830" [color="#13a10e"];
        "0x00002d96" -> "0x00002d9f" [color="#c50f1f"];
        "0x00002d9f" -> "0x00002dab" [color="#3a96dd"];
        "0x00002dab" -> "0x00002dc0" [color="#3a96dd"];
        "0x00002dc0" -> "0x00002dca" [color="#3a96dd"];
        "0x00002dca" -> "0x00002b90" [color="#3a96dd"];
        "0x00002dd7" -> "0x000034f6" [color="#13a10e"];
        "0x00002dd7" -> "0x00002de2" [color="#c50f1f"];
        "0x00002de2" -> "0x00002d66" [color="#13a10e"];
        "0x00002de2" -> "0x00002ded" [color="#c50f1f"];
        "0x00002ded" -> "0x00002e11" [color="#3a96dd"];
        "0x00002e11" -> "0x00002d96" [color="#13a10e"];
        "0x00002e11" -> "0x00002e15" [color="#c50f1f"];
        "0x00002e15" -> "0x00003437" [color="#13a10e"];
        "0x00002e15" -> "0x00002e23" [color="#c50f1f"];
        "0x00002e23" -> "0x00003877" [color="#13a10e"];
        "0x00002e23" -> "0x00002e3e" [color="#c50f1f"];
        "0x00002e3e" -> "0x00003866" [color="#13a10e"];
        "0x00002e3e" -> "0x00002e53" [color="#c50f1f"];
        "0x00002e53" -> "0x00003527" [color="#13a10e"];
        "0x00002e53" -> "0x00002e70" [color="#c50f1f"];
        "0x00002e70" -> "0x00002e7b" [color="#3a96dd"];
        "0x00002e7b" -> "0x00002f94" [color="#13a10e"];
        "0x00002e7b" -> "0x00002eb0" [color="#c50f1f"];
        "0x00002eb0" -> "0x00002f08" [color="#13a10e"];
        "0x00002eb0" -> "0x00002ebf" [color="#c50f1f"];
        "0x00002ebf" -> "0x00002f08" [color="#3a96dd"];
        "0x00002ebf" -> "0x000030e7" [color="#3a96dd"];
        "0x00002ebf" -> "0x00003096" [color="#3a96dd"];
        "0x00002ebf" -> "0x00002f08" [color="#3a96dd"];
        "0x00002ebf" -> "0x00003075" [color="#3a96dd"];
        "0x00002ebf" -> "0x00002f08" [color="#3a96dd"];
        "0x00002ebf" -> "0x00002ed4" [color="#3a96dd"];
        "0x00002ebf" -> "0x00003047" [color="#3a96dd"];
        "0x00002ebf" -> "0x00002f08" [color="#3a96dd"];
        "0x00002ebf" -> "0x00002f08" [color="#3a96dd"];
        "0x00002ebf" -> "0x00002fda" [color="#3a96dd"];
        "0x00002ed4" -> "0x0000337d" [color="#13a10e"];
        "0x00002ed4" -> "0x00002ee1" [color="#c50f1f"];
        "0x00002ee1" -> "0x00002f08" [color="#13a10e"];
        "0x00002ee1" -> "0x00002eed" [color="#c50f1f"];
        "0x00002eed" -> "0x00002f08" [color="#13a10e"];
        "0x00002eed" -> "0x00002ef6" [color="#c50f1f"];
        "0x00002ef6" -> "0x00003582" [color="#13a10e"];
        "0x00002ef6" -> "0x00002f04" [color="#c50f1f"];
        "0x00002f04" -> "0x00002f08" [color="#3a96dd"];
        "0x00002f08" -> "0x000031b2" [color="#13a10e"];
        "0x00002f08" -> "0x00002f15" [color="#c50f1f"];
        "0x00002f15" -> "0x000031ec" [color="#13a10e"];
        "0x00002f15" -> "0x00002f39" [color="#c50f1f"];
        "0x00002f39" -> "0x000032e7" [color="#13a10e"];
        "0x00002f39" -> "0x00002f4f" [color="#c50f1f"];
        "0x00002f4f" -> "0x00002f54" [color="#3a96dd"];
        "0x00002f54" -> "0x000032f1" [color="#13a10e"];
        "0x00002f54" -> "0x00002f5c" [color="#c50f1f"];
        "0x00002f5c" -> "0x00003734" [color="#13a10e"];
        "0x00002f5c" -> "0x00002f6a" [color="#c50f1f"];
        "0x00002f6a" -> "0x00002f70" [color="#3a96dd"];
        "0x00002f70" -> "0x00003032" [color="#13a10e"];
        "0x00002f70" -> "0x00002f7d" [color="#c50f1f"];
        "0x00002f7d" -> "0x00002eb0" [color="#13a10e"];
        "0x00002f7d" -> "0x00002f94" [color="#c50f1f"];
        "0x00002f94" -> "0x0000340b" [color="#13a10e"];
        "0x00002f94" -> "0x00002fa1" [color="#c50f1f"];
        "0x00002fa1" -> "0x000033df" [color="#13a10e"];
        "0x00002fa1" -> "0x00002fb1" [color="#c50f1f"];
        "0x00002fb1" -> "0x0000382b" [color="#13a10e"];
        "0x00002fb1" -> "0x00002fcb" [color="#c50f1f"];
        "0x00002fda" -> "0x00002fec" [color="#13a10e"];
        "0x00002fda" -> "0x00002fe1" [color="#c50f1f"];
        "0x00002fe1" -> "0x00003365" [color="#13a10e"];
        "0x00002fe1" -> "0x00002fec" [color="#c50f1f"];
        "0x00002fec" -> "0x00003008" [color="#3a96dd"];
        "0x00003008" -> "0x00003022" [color="#3a96dd"];
        "0x00003022" -> "0x00002f7d" [color="#13a10e"];
        "0x00003022" -> "0x00003032" [color="#c50f1f"];
        "0x00003032" -> "0x00002f7d" [color="#3a96dd"];
        "0x00003047" -> "0x00002f70" [color="#3a96dd"];
        "0x00003075" -> "0x00003008" [color="#3a96dd"];
        "0x00003096" -> "0x00002f08" [color="#13a10e"];
        "0x00003096" -> "0x000030a9" [color="#c50f1f"];
        "0x000030a9" -> "0x00002f7d" [color="#3a96dd"];
        "0x000030e7" -> "0x00002f08" [color="#13a10e"];
        "0x000030e7" -> "0x000030f8" [color="#c50f1f"];
        "0x000030f8" -> "0x00002f7d" [color="#13a10e"];
        "0x000030f8" -> "0x00003108" [color="#c50f1f"];
        "0x00003108" -> "0x00002f7d" [color="#13a10e"];
        "0x00003108" -> "0x00003115" [color="#c50f1f"];
        "0x00003115" -> "0x00002f7d" [color="#13a10e"];
        "0x00003115" -> "0x00003123" [color="#c50f1f"];
        "0x00003123" -> "0x000037d8" [color="#13a10e"];
        "0x00003123" -> "0x0000313d" [color="#c50f1f"];
        "0x0000313d" -> "0x00003171" [color="#3a96dd"];
        "0x00003171" -> "0x00002f7d" [color="#3a96dd"];
        "0x000031b2" -> "0x00002f15" [color="#3a96dd"];
        "0x000031ec" -> "0x00003388" [color="#13a10e"];
        "0x000031ec" -> "0x000031ff" [color="#c50f1f"];
        "0x000031ff" -> "0x00003204" [color="#3a96dd"];
        "0x00003204" -> "0x00003392" [color="#13a10e"];
        "0x00003204" -> "0x0000320c" [color="#c50f1f"];
        "0x0000320c" -> "0x000035f9" [color="#13a10e"];
        "0x0000320c" -> "0x0000321a" [color="#c50f1f"];
        "0x0000321a" -> "0x0000374d" [color="#13a10e"];
        "0x0000321a" -> "0x00003230" [color="#c50f1f"];
        "0x00003230" -> "0x0000324e" [color="#13a10e"];
        "0x00003230" -> "0x0000323c" [color="#c50f1f"];
        "0x0000323c" -> "0x000036ee" [color="#13a10e"];
        "0x0000323c" -> "0x0000324e" [color="#c50f1f"];
        "0x0000324e" -> "0x00003254" [color="#3a96dd"];
        "0x00003254" -> "0x00003272" [color="#13a10e"];
        "0x00003254" -> "0x00003260" [color="#c50f1f"];
        "0x00003260" -> "0x000036a8" [color="#13a10e"];
        "0x00003260" -> "0x00003272" [color="#c50f1f"];
        "0x00003272" -> "0x00003290" [color="#13a10e"];
        "0x00003272" -> "0x0000327e" [color="#c50f1f"];
        "0x0000327e" -> "0x00003447" [color="#13a10e"];
        "0x0000327e" -> "0x00003290" [color="#c50f1f"];
        "0x00003290" -> "0x000032ae" [color="#13a10e"];
        "0x00003290" -> "0x0000329c" [color="#c50f1f"];
        "0x0000329c" -> "0x0000349f" [color="#13a10e"];
        "0x0000329c" -> "0x000032ae" [color="#c50f1f"];
        "0x000032ae" -> "0x000034dd" [color="#13a10e"];
        "0x000032ae" -> "0x000032b7" [color="#c50f1f"];
        "0x000032b7" -> "0x00002f39" [color="#13a10e"];
        "0x000032b7" -> "0x000032d2" [color="#c50f1f"];
        "0x000032d2" -> "0x00002f5c" [color="#13a10e"];
        "0x000032d2" -> "0x000032e2" [color="#c50f1f"];
        "0x000032e2" -> "0x00002f39" [color="#3a96dd"];
        "0x000032e7" -> "0x00002f54" [color="#3a96dd"];
        "0x000032f1" -> "0x00003022" [color="#13a10e"];
        "0x000032f1" -> "0x0000334c" [color="#c50f1f"];
        "0x0000334c" -> "0x00003022" [color="#3a96dd"];
        "0x00003365" -> "0x0000337d" [color="#3a96dd"];
        "0x0000337d" -> "0x00002f7d" [color="#3a96dd"];
        "0x00003388" -> "0x00003204" [color="#3a96dd"];
        "0x00003392" -> "0x0000320c" [color="#13a10e"];
        "0x00003392" -> "0x0000339f" [color="#c50f1f"];
        "0x0000339f" -> "0x00002f70" [color="#3a96dd"];
        "0x000033df" -> "0x00002fb1" [color="#3a96dd"];
        "0x0000340b" -> "0x00002fa1" [color="#3a96dd"];
        "0x00003437" -> "0x00002e53" [color="#3a96dd"];
        "0x00003447" -> "0x000034dd" [color="#13a10e"];
        "0x00003447" -> "0x00003491" [color="#c50f1f"];
        "0x00003491" -> "0x000034dd" [color="#13a10e"];
        "0x00003491" -> "0x0000349f" [color="#c50f1f"];
        "0x0000349f" -> "0x000034dd" [color="#3a96dd"];
        "0x000034dd" -> "0x00003022" [color="#3a96dd"];
        "0x000034f6" -> "0x00002d66" [color="#13a10e"];
        "0x000034f6" -> "0x00003503" [color="#c50f1f"];
        "0x00003503" -> "0x00003527" [color="#3a96dd"];
        "0x00003527" -> "0x00002e7b" [color="#13a10e"];
        "0x00003527" -> "0x00003543" [color="#c50f1f"];
        "0x00003543" -> "0x00003582" [color="#3a96dd"];
        "0x00003582" -> "0x00003785" [color="#13a10e"];
        "0x00003582" -> "0x0000359c" [color="#c50f1f"];
        "0x0000359c" -> "0x000035d0" [color="#3a96dd"];
        "0x000035d0" -> "0x00002f70" [color="#3a96dd"];
        "0x000035f9" -> "0x00002f70" [color="#3a96dd"];
        "0x00003635" -> "0x00002e53" [color="#13a10e"];
        "0x00003635" -> "0x00003656" [color="#c50f1f"];
        "0x00003656" -> "0x00002e53" [color="#13a10e"];
        "0x00003656" -> "0x0000366a" [color="#c50f1f"];
        "0x0000366a" -> "0x000036a8" [color="#3a96dd"];
        "0x000036a8" -> "0x00003272" [color="#3a96dd"];
        "0x000036ee" -> "0x00003254" [color="#3a96dd"];
        "0x00003734" -> "0x00002f6a" [color="#3a96dd"];
        "0x0000374d" -> "0x00003022" [color="#3a96dd"];
        "0x00003785" -> "0x000035d0" [color="#3a96dd"];
        "0x000037d8" -> "0x00003171" [color="#3a96dd"];
        "0x00003830" -> "0x00002dc0" [color="#3a96dd"];
        "0x00003866" -> "0x00002dab" [color="#3a96dd"];
        "0x00003877" -> "0x000038c0" [color="#3a96dd"];
}
