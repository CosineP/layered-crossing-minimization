digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00002700" [URL="dbg.main/0x00002700", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x29a8\l632: int dbg.main (int argc, char **argv);\l; var char[2] optargbuf @ rbp-0x3a\l; var int64_t var_6h @ rsp+0x6\l; var int64_t var_7h @ rsp+0x7\l; var int64_t var_8h @ rsp+0x8\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x00002700      endbr64                                                ; int main(int argc,char ** argv);\l0x00002704      push r15\l0x00002706      lea r15, [0x000078a1]\l0x0000270d      push r14\l0x0000270f      lea r14, obj.longopts                                  ; 0xab00\l0x00002716      push r13\l0x00002718      lea r13, obj.shortopts                                 ; 0x73e0 ; \"bsw:0::1::2::3::4::5::6::7::8::9::\"\l0x0000271f      push r12\l0x00002721      lea r12, [0x00007083]                                  ; \"coreutils\"\l0x00002728      push rbp\l0x00002729      mov ebp, edi                                           ; argc\l0x0000272b      push rbx\l0x0000272c      mov rbx, rsi                                           ; argv\l0x0000272f      sub rsp, 0x18\l0x00002733      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x00002736      mov rax, qword fs:[0x28]\l0x0000273f      mov qword [var_8h], rax\l0x00002744      xor eax, eax\l0x00002746      call dbg.set_program_name\l0x0000274b      mov rsi, r15                                           ; const char *locale\l0x0000274e      mov edi, 6                                             ; int category\l0x00002753      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x00002758      lea rsi, str._usr_local_share_locale                   ; 0x70ac ; \"/usr/local/share/locale\" ; char *dirname\l0x0000275f      mov rdi, r12                                           ; char *domainname\l0x00002762      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x00002767      mov rdi, r12                                           ; char *domainname\l0x0000276a      mov r12d, 0x50                                         ; 'P'\l0x00002770      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x00002775      lea rdi, [dbg.close_stdout]                            ; 0x3350 ; func function\l0x0000277c      call sym.atexit                                        ; int atexit(func function)\l0x00002781      mov byte [obj.have_read_stdin], 0                      ; [0xb0e0:1]=1\l0x00002788      mov byte [obj.count_bytes], 0                          ; [0xb0e1:1]=1\l0x0000278f      mov byte [obj.break_spaces], 0                         ; [0xb0e2:1]=1\l"]
	"0x00002796" [URL="dbg.main/0x00002796", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x281c, 0x2887, 0x28a7\l0x00002796      xor r8d, r8d\l0x00002799      mov rcx, r14\l0x0000279c      mov rdx, r13\l0x0000279f      mov rsi, rbx\l0x000027a2      mov edi, ebp\l0x000027a4      call sym.imp.getopt_long\l0x000027a9      cmp eax, 0xffffffff\l0x000027ac      je 0x28c3\l"]
	"0x000027b2" [URL="dbg.main/0x000027b2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027b2      cmp eax, 0x62\l0x000027b5      je 0x28a0\l"]
	"0x000027bb" [URL="dbg.main/0x000027bb", fillcolor="white",color="#767676", fontname="Courier",label="0x000027bb      jg 0x2810\l"]
	"0x000027bd" [URL="dbg.main/0x000027bd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027bd      cmp eax, 0xffffff7e                                    ; 4294967166\l0x000027c2      je 0x297a\l"]
	"0x000027c8" [URL="dbg.main/0x000027c8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027c8      cmp eax, 0xffffff7f                                    ; 4294967167\l0x000027cd      jge 0x2828\l"]
	"0x000027cf" [URL="dbg.main/0x000027cf", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027cf      cmp eax, 0xffffff7d                                    ; 4294967165\l0x000027d4      jne 0x2895\l"]
	"0x000027da" [URL="dbg.main/0x000027da", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027da      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0xb088:8]=0 ; int64_t arg1\l0x000027e1      mov rcx, qword [obj.Version]                           ; [0xb010:8]=0x7403 \"9.0\" ; int64_t arg5\l0x000027e8      xor eax, eax\l0x000027ea      xor r9d, r9d                                           ; int64_t arg_c0h\l0x000027ed      lea r8, str.David_MacKenzie                            ; 0x70de ; \"David MacKenzie\" ; int64_t arg6\l0x000027f4      lea rdx, str.GNU_coreutils                             ; 0x707f ; \"GNU coreutils\" ; int64_t arg3\l0x000027fb      lea rsi, str.fold                                      ; 0x7004 ; \"fold\" ; int64_t arg2\l0x00002802      call dbg.version_etc\l0x00002807      xor edi, edi                                           ; int status\l0x00002809      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x00002810" [URL="dbg.main/0x00002810", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27bb\l0x00002810      cmp eax, 0x73\l0x00002813      jne 0x2890\l"]
	"0x00002815" [URL="dbg.main/0x00002815", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002815      mov byte [obj.break_spaces], 1                         ; [0xb0e2:1]=1\l0x0000281c      jmp 0x2796\l"]
	"0x00002828" [URL="dbg.main/0x00002828", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27cd\l0x00002828      lea edx, [rax - 0x30]\l0x0000282b      cmp edx, 9\l0x0000282e      ja 0x2895\l"]
	"0x00002830" [URL="dbg.main/0x00002830", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002830      mov rdx, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0xb0a0:8]=0x177fbe\l0x00002837      test rdx, rdx\l0x0000283a      je 0x28ac\l"]
	"0x0000283c" [URL="dbg.main/0x0000283c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000283c      sub rdx, 1\l0x00002840      mov qword [obj.optarg], rdx                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0xb0a0:8]=0x177fbe\l0x00002847      nop word [rax + rax]\l"]
	"0x00002850" [URL="dbg.main/0x00002850", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2893, 0x28c1\l0x00002850      mov edx, 5\l0x00002855      lea rsi, str.invalid_number_of_columns                 ; 0x70c4 ; \"invalid number of columns\"\l0x0000285c      xor edi, edi\l0x0000285e      call sym.imp.dcgettext\l0x00002863      xor r9d, r9d\l0x00002866      mov rcx, r15                                           ; int64_t arg5\l0x00002869      mov esi, 1                                             ; int64_t arg3\l0x0000286e      mov rdi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0xb0a0:8]=0x177fbe ; int64_t arg2\l0x00002875      mov r8, rax                                            ; int64_t arg6\l0x00002878      mov rdx, 0xfffffffffffffff6                            ; int64_t arg4\l0x0000287f      call dbg.xdectoumax\l0x00002884      mov r12, rax\l0x00002887      jmp 0x2796\l"]
	"0x00002890" [URL="dbg.main/0x00002890", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2813\l0x00002890      cmp eax, 0x77\l0x00002893      je 0x2850\l"]
	"0x00002895" [URL="dbg.main/0x00002895", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x27d4, 0x282e\l0x00002895      mov edi, 1                                             ; int64_t arg1\l0x0000289a      call dbg.usage\l"]
	"0x000028a0" [URL="dbg.main/0x000028a0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27b5\l0x000028a0      mov byte [obj.count_bytes], 1                          ; [0xb0e1:1]=1\l0x000028a7      jmp 0x2796\l"]
	"0x000028ac" [URL="dbg.main/0x000028ac", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x283a\l0x000028ac      mov byte [var_6h], al\l0x000028b0      lea rax, [var_6h]\l0x000028b5      mov byte [var_7h], 0\l0x000028ba      mov qword [obj.optarg], rax                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0xb0a0:8]=0x177fbe\l0x000028c1      jmp 0x2850\l"]
	"0x000028c3" [URL="dbg.main/0x000028c3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27ac\l0x000028c3      mov eax, dword [obj.optind]                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb098:4]=0\l0x000028c9      cmp eax, ebp\l0x000028cb      je 0x2960\l"]
	"0x000028d1" [URL="dbg.main/0x000028d1", fillcolor="white",color="#767676", fontname="Courier",label="0x000028d1      jge 0x2973\l"]
	"0x000028d7" [URL="dbg.main/0x000028d7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000028d7      sub ebp, eax\l0x000028d9      movsxd rdx, eax\l0x000028dc      lea eax, [rbp - 1]\l0x000028df      lea r13, [rbx + rdx*8]\l0x000028e3      add rax, rdx\l0x000028e6      lea rbp, [rbx + rax*8 + 8]\l0x000028eb      mov ebx, 1\l"]
	"0x000028f0" [URL="dbg.main/0x000028f0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2905\l0x000028f0      mov rdi, qword [r13]                                   ; int64_t arg1\l0x000028f4      mov rsi, r12                                           ; int64_t arg2\l0x000028f7      add r13, 8\l0x000028fb      call dbg.fold_file\l0x00002900      and ebx, eax\l0x00002902      cmp r13, rbp\l0x00002905      jne 0x28f0\l"]
	"0x00002907" [URL="dbg.main/0x00002907", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2971, 0x2978\l0x00002907      cmp byte [obj.have_read_stdin], 0                      ; [0xb0e0:1]=1\l0x0000290e      jne 0x2935\l"]
	"0x00002910" [URL="dbg.main/0x00002910", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2944\l0x00002910      xor ebx, 1\l0x00002913      movzx eax, bl\l0x00002916      mov rdx, qword [var_8h]\l0x0000291b      sub rdx, qword fs:[0x28]\l0x00002924      jne 0x2981\l"]
	"0x00002926" [URL="dbg.main/0x00002926", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002926      add rsp, 0x18\l0x0000292a      pop rbx\l0x0000292b      pop rbp\l0x0000292c      pop r12\l0x0000292e      pop r13\l0x00002930      pop r14\l0x00002932      pop r15\l0x00002934      ret\l"]
	"0x00002935" [URL="dbg.main/0x00002935", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x290e\l0x00002935      mov rdi, qword [obj.stdin]                             ; obj.stdin_GLIBC_2.2.5\l                                                                       ; [0xb090:8]=0 ; int64_t arg1\l0x0000293c      call dbg.rpl_fclose\l0x00002941      add eax, 1\l0x00002944      jne 0x2910\l"]
	"0x00002946" [URL="dbg.main/0x00002946", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002946      call sym.imp.__errno_location\l0x0000294b      lea rdx, [0x000070ee]                                  ; \"-\" ; char *format\l0x00002952      mov edi, 1                                             ; int status\l0x00002957      mov esi, dword [rax]                                   ; int errname\l0x00002959      xor eax, eax\l0x0000295b      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002960" [URL="dbg.main/0x00002960", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x28cb\l0x00002960      mov rsi, r12                                           ; int64_t arg2\l0x00002963      lea rdi, [0x000070ee]                                  ; \"-\" ; int64_t arg1\l0x0000296a      call dbg.fold_file\l0x0000296f      mov ebx, eax\l0x00002971      jmp 0x2907\l"]
	"0x00002973" [URL="dbg.main/0x00002973", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x28d1\l0x00002973      mov ebx, 1\l0x00002978      jmp 0x2907\l"]
	"0x0000297a" [URL="dbg.main/0x0000297a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27c2\l0x0000297a      xor edi, edi                                           ; int64_t arg1\l0x0000297c      call dbg.usage\l"]
	"0x00002981" [URL="dbg.main/0x00002981", fillcolor="white",color="#767676", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2924\l0x00002981      call sym.imp.__stack_chk_fail                          ; void __stack_chk_fail(void)\l"]
        "0x00002700" -> "0x00002796" [color="#3a96dd"];
        "0x00002796" -> "0x000028c3" [color="#13a10e"];
        "0x00002796" -> "0x000027b2" [color="#c50f1f"];
        "0x000027b2" -> "0x000028a0" [color="#13a10e"];
        "0x000027b2" -> "0x000027bb" [color="#c50f1f"];
        "0x000027bb" -> "0x00002810" [color="#13a10e"];
        "0x000027bb" -> "0x000027bd" [color="#c50f1f"];
        "0x000027bd" -> "0x0000297a" [color="#13a10e"];
        "0x000027bd" -> "0x000027c8" [color="#c50f1f"];
        "0x000027c8" -> "0x00002828" [color="#13a10e"];
        "0x000027c8" -> "0x000027cf" [color="#c50f1f"];
        "0x000027cf" -> "0x00002895" [color="#13a10e"];
        "0x000027cf" -> "0x000027da" [color="#c50f1f"];
        "0x00002810" -> "0x00002890" [color="#13a10e"];
        "0x00002810" -> "0x00002815" [color="#c50f1f"];
        "0x00002815" -> "0x00002796" [color="#3a96dd"];
        "0x00002828" -> "0x00002895" [color="#13a10e"];
        "0x00002828" -> "0x00002830" [color="#c50f1f"];
        "0x00002830" -> "0x000028ac" [color="#13a10e"];
        "0x00002830" -> "0x0000283c" [color="#c50f1f"];
        "0x0000283c" -> "0x00002850" [color="#3a96dd"];
        "0x00002850" -> "0x00002796" [color="#3a96dd"];
        "0x00002890" -> "0x00002850" [color="#13a10e"];
        "0x00002890" -> "0x00002895" [color="#c50f1f"];
        "0x000028a0" -> "0x00002796" [color="#3a96dd"];
        "0x000028ac" -> "0x00002850" [color="#3a96dd"];
        "0x000028c3" -> "0x00002960" [color="#13a10e"];
        "0x000028c3" -> "0x000028d1" [color="#c50f1f"];
        "0x000028d1" -> "0x00002973" [color="#13a10e"];
        "0x000028d1" -> "0x000028d7" [color="#c50f1f"];
        "0x000028d7" -> "0x000028f0" [color="#3a96dd"];
        "0x000028f0" -> "0x000028f0" [color="#13a10e"];
        "0x000028f0" -> "0x00002907" [color="#c50f1f"];
        "0x00002907" -> "0x00002935" [color="#13a10e"];
        "0x00002907" -> "0x00002910" [color="#c50f1f"];
        "0x00002910" -> "0x00002981" [color="#13a10e"];
        "0x00002910" -> "0x00002926" [color="#c50f1f"];
        "0x00002935" -> "0x00002910" [color="#13a10e"];
        "0x00002935" -> "0x00002946" [color="#c50f1f"];
        "0x00002946" -> "0x00002960" [color="#3a96dd"];
        "0x00002960" -> "0x00002907" [color="#3a96dd"];
        "0x00002973" -> "0x00002907" [color="#3a96dd"];
        "0x0000297a" -> "0x00002981" [color="#3a96dd"];
}
