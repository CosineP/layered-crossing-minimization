digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x000028f0" [URL="dbg.main/0x000028f0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x2f48\l1525: int dbg.main (int argc, char **argv);\l; var int64_t var_8h @ rsp+0x18\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x000028f0      endbr64                                                ; int main(int argc,char ** argv);\l0x000028f4      push r15\l0x000028f6      lea r15, obj.longopts                                  ; 0x1b9a0 ; \"Na\\x01\"\l0x000028fd      push r14\l0x000028ff      lea r14, str.h:b:f:v:i:pl:s:w:n:d:                     ; 0x16136 ; \"h:b:f:v:i:pl:s:w:n:d:\"\l0x00002906      push r13\l0x00002908      mov r13d, edi                                          ; argc\l0x0000290b      push r12\l0x0000290d      mov r12, rsi                                           ; argv\l0x00002910      push rbp\l0x00002911      lea rbp, [0x00016096]                                  ; \"coreutils\"\l0x00002918      push rbx\l0x00002919      mov ebx, 1\l0x0000291e      sub rsp, 0x18\l0x00002922      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x00002925      call dbg.set_program_name\l0x0000292a      lea rsi, [0x0001620c]                                  ; const char *locale\l0x00002931      mov edi, 6                                             ; int category\l0x00002936      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x0000293b      lea rsi, str._usr_local_share_locale                   ; 0x160bf ; \"/usr/local/share/locale\" ; char *dirname\l0x00002942      mov rdi, rbp                                           ; char *domainname\l0x00002945      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x0000294a      mov rdi, rbp                                           ; char *domainname\l0x0000294d      lea rbp, [0x00016b20]                                  ; \"(\\xc1\\xfe\\xff\\x90\\xbe\\xfe\\xff\\xf0\\xc0\\xfe\\xff\\x90\\xbe\\xfe\\xff\\xa8\\xc0\\xfe\\xff\\x90\\xbe\\xfe\\xff`\\xc0\\xfe\\xff\\x10\\xc0\\xfe\\xff\\x90\\xbe\\xfe\\xff\\x90\\xbe\\xfe\\xff\\u003f\\xfe\\xff\\x90\\xbe\\xfe\\xffX\\xbf\\xfe\\xff\\x90\\xbe\\xfe\\xffH\\xbf\\xfe\\xff\\x90\\xbe\\xfe\\xff\\x90\\xbe\\xfe\\xff0\\xbf\\xfe\\xff\\x90\\xbe\\xfe\\xff\\x90\\xbe\\xfe\\xff\\xe0\\xbe\\xfe\\xff\\x98\\xbe\\xfe\\xff%-*ld%s\"\l0x00002954      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x00002959      lea rdi, [dbg.close_stdout]                            ; 0x3a20 ; func function\l0x00002960      call sym.atexit                                        ; int atexit(func function)\l0x00002965      mov byte [obj.have_read_stdin], 0                      ; [0x1c148:1]=1\l0x0000296c      nop dword [rax]\l"]
	"0x00002970" [URL="dbg.main/0x00002970", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x000029b2  CODE 0x000029f4  CODE 0x00002a47  \l; XREFS: CODE 0x00002a5e  CODE 0x00002a6f  CODE 0x00002ad2  \l; XREFS: CODE 0x00002b22  CODE 0x00002b77  CODE 0x00002b9c  \l; XREFS: CODE 0x00002be4  CODE 0x00002c3e  CODE 0x00002c64  \l; XREFS: CODE 0x00002c9f  CODE 0x00002cf7  CODE 0x00002d26  \l; XREFS: CODE 0x00002e8d  CODE 0x00002ec7  CODE 0x00002ef1  \l0x00002970      xor r8d, r8d\l0x00002973      mov rcx, r15\l0x00002976      mov rdx, r14\l0x00002979      mov rsi, r12\l0x0000297c      mov edi, r13d\l0x0000297f      call sym.imp.getopt_long\l0x00002984      cmp eax, 0xffffffff\l0x00002987      je 0x2d2b\l"]
	"0x0000298d" [URL="dbg.main/0x0000298d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000298d      cmp eax, 0x77\l0x00002990      jg case.0x29ab.99\l"]
	"0x00002992" [URL="dbg.main/0x00002992", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002992      cmp eax, 0x61\l0x00002995      jle 0x2ca8\l"]
	"0x0000299b" [URL="dbg.main/0x0000299b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000299b      sub eax, 0x62\l0x0000299e      cmp eax, 0x15\l0x000029a1      ja case.0x29ab.99\l"]
	"0x000029a3" [URL="dbg.main/0x000029a3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000029a3      movsxd rax, dword [rbp + rax*4]\l0x000029a8      add rax, rbp\l;-- switch\l0x000029ab      jmp rax                                                ; switch table (22 cases) at 0x16b20\l"]
	"0x000029b0" [URL="dbg.main/0x000029b0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 99:                                                           ; from 0x000029ab\l;-- case 103:                                                          ; from 0x000029ab\l;-- case 107:                                                          ; from 0x000029ab\l;-- case 111:                                                          ; from 0x000029ab\l;-- case 114:                                                          ; from 0x000029ab\l;-- default:                                                           ; from 0x29ab\l; CODE XREFS from dbg.main @ 0x2990, 0x29a1, 0x29ab\l0x000029b0      xor ebx, ebx\l0x000029b2      jmp 0x2970\l"]
	"0x000029b8" [URL="dbg.main/0x000029b8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 119:                                                          ; from 0x000029ab\l; CODE XREF from dbg.main @ 0x29ab\l0x000029b8      mov edx, 5\l0x000029bd      lea rsi, str.invalid_line_number_field_width           ; 0x16ad8 ; \"invalid line number field width\"\l0x000029c4      xor edi, edi\l0x000029c6      call sym.imp.dcgettext\l0x000029cb      mov rdi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x1c100:8]=0x1614e str.header_numbering ; \"Na\\x01\" ; int64_t arg2\l0x000029d2      xor r9d, r9d\l0x000029d5      lea rcx, [0x0001620c]                                  ; int64_t arg5\l0x000029dc      mov r8, rax                                            ; int64_t arg6\l0x000029df      mov edx, 0x7fffffff                                    ; int64_t arg4\l0x000029e4      mov esi, 1                                             ; int64_t arg3\l0x000029e9      call dbg.xdectoimax\l0x000029ee      mov dword [obj.lineno_width], eax                      ; [0x1c010:4]=0x16b1f\l0x000029f4      jmp 0x2970\l"]
	"0x00002a00" [URL="dbg.main/0x00002a00", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 118:                                                          ; from 0x000029ab\l; CODE XREF from dbg.main @ 0x29ab\l0x00002a00      mov edx, 5\l0x00002a05      lea rsi, str.invalid_starting_line_number              ; 0x160d7 ; \"invalid starting line number\"\l0x00002a0c      xor edi, edi\l0x00002a0e      call sym.imp.dcgettext\l0x00002a13      mov rdi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x1c100:8]=0x1614e str.header_numbering ; \"Na\\x01\" ; int64_t arg2\l0x00002a1a      xor r9d, r9d\l0x00002a1d      lea rcx, [0x0001620c]                                  ; int64_t arg5\l0x00002a24      movabs rdx, 0x7fffffffffffffff                         ; 9223372036854775807 ; int64_t arg4\l0x00002a2e      mov r8, rax                                            ; int64_t arg6\l0x00002a31      movabs rsi, 0x8000000000000000                         ; int64_t arg3\l0x00002a3b      call dbg.xdectoimax\l0x00002a40      mov qword [obj.starting_line_number], rax              ; [0x1c030:8]=0x16b1f\l0x00002a47      jmp 0x2970\l"]
	"0x00002a50" [URL="dbg.main/0x00002a50", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 115:                                                          ; from 0x000029ab\l; CODE XREF from dbg.main @ 0x29ab\l0x00002a50      mov rax, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x1c100:8]=0x1614e str.header_numbering ; \"Na\\x01\"\l0x00002a57      mov qword [obj.separator_str], rax                     ; [0x1c050:8]=0\l0x00002a5e      jmp 0x2970\l"]
	"0x00002a68" [URL="dbg.main/0x00002a68", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 112:                                                          ; from 0x000029ab\l; CODE XREF from dbg.main @ 0x29ab\l0x00002a68      mov byte [obj.reset_numbers], 0                        ; [0x1c020:1]=0\l0x00002a6f      jmp 0x2970\l"]
	"0x00002a78" [URL="dbg.main/0x00002a78", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 110:                                                          ; from 0x000029ab\l; CODE XREF from dbg.main @ 0x29ab\l0x00002a78      mov rdi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x1c100:8]=0x1614e str.header_numbering ; \"Na\\x01\"\l0x00002a7f      cmp byte [rdi], 0x6c\l0x00002a82      je 0x2d04\l"]
	"0x00002a88" [URL="dbg.main/0x00002a88", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2d08, 0x2d12\l0x00002a88      lea rsi, [0x00016112]                                  ; \"rn\" ; const char *s2\l0x00002a8f      mov qword [var_8h], rdi\l0x00002a94      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x00002a99      mov rdi, qword [var_8h]\l0x00002a9e      test eax, eax\l0x00002aa0      je 0x2e7f\l"]
	"0x00002aa6" [URL="dbg.main/0x00002aa6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002aa6      lea rsi, [0x00016115]                                  ; \"rz\" ; const char *s2\l0x00002aad      mov qword [var_8h], rdi\l0x00002ab2      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x00002ab7      mov rdi, qword [var_8h]\l0x00002abc      test eax, eax\l0x00002abe      jne 0x2ef6\l"]
	"0x00002ac4" [URL="dbg.main/0x00002ac4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002ac4      lea rax, obj.FORMAT_RIGHT_LZ                           ; 0x16b80 ; \"%0*ld%s\"\l0x00002acb      mov qword [obj.lineno_format], rax                     ; [0x1c040:8]=0x16b88 obj.FORMAT_RIGHT_NOLZ\l0x00002ad2      jmp 0x2970\l"]
	"0x00002ae0" [URL="dbg.main/0x00002ae0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 108:                                                          ; from 0x000029ab\l; CODE XREF from dbg.main @ 0x29ab\l0x00002ae0      mov edx, 5\l0x00002ae5      lea rsi, str.invalid_line_number_of_blank_lines        ; 0x16ab0 ; \"invalid line number of blank lines\"\l0x00002aec      xor edi, edi\l0x00002aee      call sym.imp.dcgettext\l0x00002af3      mov rdi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x1c100:8]=0x1614e str.header_numbering ; \"Na\\x01\" ; int64_t arg2\l0x00002afa      xor r9d, r9d\l0x00002afd      lea rcx, [0x0001620c]                                  ; int64_t arg5\l0x00002b04      mov r8, rax                                            ; int64_t arg6\l0x00002b07      mov esi, 1                                             ; int64_t arg3\l0x00002b0c      movabs rdx, 0x7fffffffffffffff                         ; 9223372036854775807 ; int64_t arg4\l0x00002b16      call dbg.xdectoimax\l0x00002b1b      mov qword [obj.blank_join], rax                        ; [0x1c018:8]=0x16b80 obj.FORMAT_RIGHT_LZ\l0x00002b22      jmp 0x2970\l"]
	"0x00002b30" [URL="dbg.main/0x00002b30", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 105:                                                          ; from 0x000029ab\l; CODE XREF from dbg.main @ 0x29ab\l0x00002b30      mov edx, 5\l0x00002b35      lea rsi, str.invalid_line_number_increment             ; 0x160f4 ; \"invalid line number increment\"\l0x00002b3c      xor edi, edi\l0x00002b3e      call sym.imp.dcgettext\l0x00002b43      mov rdi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x1c100:8]=0x1614e str.header_numbering ; \"Na\\x01\" ; int64_t arg2\l0x00002b4a      xor r9d, r9d\l0x00002b4d      lea rcx, [0x0001620c]                                  ; int64_t arg5\l0x00002b54      movabs rdx, 0x7fffffffffffffff                         ; 9223372036854775807 ; int64_t arg4\l0x00002b5e      mov r8, rax                                            ; int64_t arg6\l0x00002b61      movabs rsi, 0x8000000000000000                         ; int64_t arg3\l0x00002b6b      call dbg.xdectoimax\l0x00002b70      mov qword [obj.page_incr], rax                         ; [0x1c028:8]=0x16b80 obj.FORMAT_RIGHT_LZ\l0x00002b77      jmp 0x2970\l"]
	"0x00002b80" [URL="dbg.main/0x00002b80", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 104:                                                          ; from 0x000029ab\l; CODE XREF from dbg.main @ 0x29ab\l0x00002b80      lea rdx, obj.header_fastmap                            ; 0x1c2c0 ; int64_t arg3\l0x00002b87      lea rsi, obj.header_regex                              ; 0x1c500 ; int64_t arg2\l0x00002b8e      lea rdi, obj.header_type                               ; 0x1c060 ; \"\\tb\\x01\" ; int64_t arg1\l0x00002b95      call dbg.build_type_arg\l0x00002b9a      test al, al\l0x00002b9c      jne 0x2970\l"]
	"0x00002ba2" [URL="dbg.main/0x00002ba2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002ba2      mov rdi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x1c100:8]=0x1614e str.header_numbering ; \"Na\\x01\" ; int64_t arg1\l0x00002ba9      call dbg.quote\l0x00002bae      mov edx, 5\l0x00002bb3      lea rsi, str.invalid_header_numbering_style:__s        ; 0x16a38 ; \"invalid header numbering style: %s\"\l0x00002bba      mov rbx, rax\l0x00002bbd      jmp 0x2c85\l"]
	"0x00002bc8" [URL="dbg.main/0x00002bc8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 102:                                                          ; from 0x000029ab\l; CODE XREF from dbg.main @ 0x29ab\l0x00002bc8      lea rdx, obj.footer_fastmap                            ; 0x1c1c0 ; int64_t arg3\l0x00002bcf      lea rsi, obj.footer_regex                              ; 0x1c4c0 ; int64_t arg2\l0x00002bd6      lea rdi, obj.footer_type                               ; 0x1c058 ; \"\\tb\\x01\" ; int64_t arg1\l0x00002bdd      call dbg.build_type_arg\l0x00002be2      test al, al\l0x00002be4      jne 0x2970\l"]
	"0x00002bea" [URL="dbg.main/0x00002bea", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002bea      mov rdi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x1c100:8]=0x1614e str.header_numbering ; \"Na\\x01\" ; int64_t arg1\l0x00002bf1      call dbg.quote\l0x00002bf6      mov edx, 5\l0x00002bfb      lea rsi, str.invalid_footer_numbering_style:__s        ; 0x16a88 ; \"invalid footer numbering style: %s\"\l0x00002c02      mov rbx, rax\l0x00002c05      jmp 0x2c85\l"]
	"0x00002c10" [URL="dbg.main/0x00002c10", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 100:                                                          ; from 0x000029ab\l; CODE XREF from dbg.main @ 0x29ab\l0x00002c10      mov rdx, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x1c100:8]=0x1614e str.header_numbering ; \"Na\\x01\"\l0x00002c17      mov rdi, rdx                                           ; const char *s\l0x00002c1a      mov qword [var_8h], rdx\l0x00002c1f      call sym.imp.strlen                                    ; size_t strlen(const char *s)\l0x00002c24      mov rdx, qword [var_8h]\l0x00002c29      sub rax, 1\l0x00002c2d      cmp rax, 1                                             ; \"\\\"\\\"?\"\l0x00002c31      jbe 0x2ebd\l"]
	"0x00002c37" [URL="dbg.main/0x00002c37", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002c37      mov qword [obj.section_del], rdx                       ; [0x1c048:8]=0\l0x00002c3e      jmp 0x2970\l"]
	"0x00002c48" [URL="dbg.main/0x00002c48", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 98:                                                           ; from 0x000029ab\l; CODE XREF from dbg.main @ 0x29ab\l0x00002c48      lea rdx, obj.body_fastmap                              ; 0x1c3c0 ; int64_t arg3\l0x00002c4f      lea rsi, obj.body_regex                                ; 0x1c540 ; int64_t arg2\l0x00002c56      lea rdi, obj.body_type                                 ; 0x1c068 ; int64_t arg1\l0x00002c5d      call dbg.build_type_arg\l0x00002c62      test al, al\l0x00002c64      jne 0x2970\l"]
	"0x00002c6a" [URL="dbg.main/0x00002c6a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002c6a      mov rdi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x1c100:8]=0x1614e str.header_numbering ; \"Na\\x01\" ; int64_t arg1\l0x00002c71      call dbg.quote\l0x00002c76      mov edx, 5\l0x00002c7b      lea rsi, str.invalid_body_numbering_style:__s          ; 0x16a60 ; \"invalid body numbering style: %s\"\l0x00002c82      mov rbx, rax\l"]
	"0x00002c85" [URL="dbg.main/0x00002c85", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2bbd, 0x2c05, 0x2f0a\l0x00002c85      xor edi, edi\l0x00002c87      call sym.imp.dcgettext\l0x00002c8c      mov rcx, rbx\l0x00002c8f      xor esi, esi                                           ; int errname\l0x00002c91      xor edi, edi                                           ; int status\l0x00002c93      mov rdx, rax                                           ; char *format\l0x00002c96      xor eax, eax\l0x00002c98      xor ebx, ebx\l0x00002c9a      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00002c9f      jmp 0x2970\l"]
	"0x00002ca8" [URL="dbg.main/0x00002ca8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2995\l0x00002ca8      cmp eax, 0xffffff7d                                    ; 4294967165\l0x00002cad      jne 0x2cf0\l"]
	"0x00002caf" [URL="dbg.main/0x00002caf", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002caf      sub rsp, 8\l0x00002cb3      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0x1c0e8:8]=0 ; func main\l0x00002cba      xor eax, eax\l0x00002cbc      mov rcx, qword [obj.Version]                           ; [0x1c070:8]=0x16b8f \"9.0\" ; func init\l0x00002cc3      push 0\l0x00002cc5      lea r9, str.David_MacKenzie                            ; 0x16118 ; \"David MacKenzie\" ; int64_t arg_c0h\l0x00002ccc      lea r8, str.Scott_Bartram                              ; 0x16128 ; \"Scott Bartram\" ; int64_t arg6\l0x00002cd3      lea rdx, str.GNU_coreutils                             ; 0x16092 ; \"GNU coreutils\" ; int64_t arg3\l0x00002cda      lea rsi, [0x00016019]                                  ; \"nl\" ; int64_t arg2\l0x00002ce1      call dbg.version_etc\l0x00002ce6      xor edi, edi                                           ; int status\l0x00002ce8      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x00002cf0" [URL="dbg.main/0x00002cf0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2cad\l0x00002cf0      xor ebx, ebx\l0x00002cf2      cmp eax, 0xffffff7e                                    ; 4294967166\l0x00002cf7      jne 0x2970\l"]
	"0x00002cfd" [URL="dbg.main/0x00002cfd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002cfd      xor edi, edi                                           ; int64_t arg1\l0x00002cff      call dbg.usage\l"]
	"0x00002d04" [URL="dbg.main/0x00002d04", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2a82\l0x00002d04      cmp byte [rdi + 1], 0x6e\l0x00002d08      jne 0x2a88\l"]
	"0x00002d0e" [URL="dbg.main/0x00002d0e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002d0e      cmp byte [rdi + 2], 0\l0x00002d12      jne 0x2a88\l"]
	"0x00002d18" [URL="dbg.main/0x00002d18", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002d18      lea rax, obj.FORMAT_LEFT                               ; 0x16b78 ; \"%-*ld%s\"\l0x00002d1f      mov qword [obj.lineno_format], rax                     ; [0x1c040:8]=0x16b88 obj.FORMAT_RIGHT_NOLZ\l0x00002d26      jmp 0x2970\l"]
	"0x00002d2b" [URL="dbg.main/0x00002d2b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2987\l0x00002d2b      test bl, bl\l0x00002d2d      je 0x2f22\l"]
	"0x00002d33" [URL="dbg.main/0x00002d33", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002d33      mov rdi, qword [obj.section_del]                       ; [0x1c048:8]=0 ; const char *s\l0x00002d3a      call sym.imp.strlen                                    ; size_t strlen(const char *s)\l0x00002d3f      lea rdi, [rax + rax*2]\l0x00002d43      mov r14, rax\l0x00002d46      mov qword [obj.header_del_len], rdi                    ; [0x1c198:8]=0x44268 ; \"hB\\x04\"\l0x00002d4d      add rdi, 1                                             ; size_t size\l0x00002d51      call sym.xmalloc                                       ;  void *xmalloc(size_t size)\l0x00002d56      mov r15, qword [obj.section_del]                       ; [0x1c048:8]=0\l0x00002d5d      mov rdi, rax\l0x00002d60      mov rbp, rax\l0x00002d63      mov qword [obj.header_del], rax                        ; [0x1c1a0:8]=0x16b78 obj.FORMAT_LEFT ; \"xk\\x01\"\l0x00002d6a      mov rsi, r15\l0x00002d6d      add rbp, r14\l0x00002d70      call sym.imp.stpcpy\l0x00002d75      mov rsi, r15\l0x00002d78      mov rdi, rax\l0x00002d7b      call sym.imp.stpcpy\l0x00002d80      mov rsi, r15                                           ; const char *src\l0x00002d83      mov rdi, rax                                           ; char *dest\l0x00002d86      call sym.imp.strcpy                                    ; char *strcpy(char *dest, const char *src)\l0x00002d8b      lea rax, [r14 + r14]\l0x00002d8f      mov qword [obj.body_del], rbp                          ; [0x1c190:8]=0x2d6f0\l0x00002d96      add rbp, r14\l0x00002d99      lea rdi, obj.line_buf                                  ; 0x1c160 ; int64_t arg1\l0x00002da0      mov qword [obj.body_del_len], rax                      ; [0x1c188:8]=0x2d6f0\l0x00002da7      mov qword [obj.footer_del_len], r14                    ; [0x1c178:8]=0x16b78 obj.FORMAT_LEFT ; \"xk\\x01\"\l0x00002dae      mov qword [obj.footer_del], rbp                        ; [0x1c180:8]=0x44268 ; \"hB\\x04\"\l0x00002db5      call dbg.initbuffer\l0x00002dba      mov rdi, qword [obj.separator_str]                     ; [0x1c050:8]=0 ; const char *s\l0x00002dc1      call sym.imp.strlen                                    ; size_t strlen(const char *s)\l0x00002dc6      mov r14, rax\l0x00002dc9      movsxd rax, dword [obj.lineno_width]                   ; [0x1c010:4]=0x16b1f\l0x00002dd0      lea rdi, [r14 + rax + 1]                               ; size_t size\l0x00002dd5      call sym.xmalloc                                       ;  void *xmalloc(size_t size)\l0x00002dda      movsxd rbp, dword [obj.lineno_width]                   ; [0x1c010:4]=0x16b1f\l0x00002de1      mov esi, 0x20                                          ; int c\l0x00002de6      mov rdi, rax                                           ; void *s\l0x00002de9      mov qword [obj.print_no_line_fmt], rax                 ; [0x1c158:8]=0x16b1f\l0x00002df0      add rbp, r14\l0x00002df3      mov rdx, rbp                                           ; size_t n\l0x00002df6      call sym.imp.memset                                    ; void *memset(void *s, int c, size_t n)\l0x00002dfb      mov byte [rax + rbp], 0\l0x00002dff      mov rax, qword [obj.starting_line_number]              ; [0x1c030:8]=0x16b1f\l0x00002e06      mov qword [obj.line_no], rax                           ; [0x1c150:8]=0x2d69f\l0x00002e0d      mov rax, qword [obj.body_type]                         ; [0x1c068:8]=0x161ea \"t\"\l0x00002e14      mov qword [obj.current_type], rax                      ; [0x1c580:8]=0x16209 \"n\" ; \"\\tb\\x01\"\l0x00002e1b      lea rax, obj.body_regex                                ; 0x1c540\l0x00002e22      mov qword [obj.current_regex], rax                     ; [0x1c1a8:8]=0x1c4c0 obj.footer_regex\l0x00002e29      mov eax, dword [obj.optind]                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x1c0f8:4]=1\l0x00002e2f      cmp eax, r13d\l0x00002e32      je 0x2f0f\l"]
	"0x00002e38" [URL="dbg.main/0x00002e38", fillcolor="white",color="#767676", fontname="Courier",label="0x00002e38      jge 0x2e61\l"]
	"0x00002e3a" [URL="dbg.main/0x00002e3a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002e3a      nop word [rax + rax]\l"]
	"0x00002e40" [URL="dbg.main/0x00002e40", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2e5f\l0x00002e40      cdqe\l0x00002e42      mov rdi, qword [r12 + rax*8]                           ; int64_t arg1\l0x00002e46      call dbg.nl_file\l0x00002e4b      and ebx, eax\l0x00002e4d      mov eax, dword [obj.optind]                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x1c0f8:4]=1\l0x00002e53      add eax, 1\l0x00002e56      mov dword [obj.optind], eax                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x1c0f8:4]=1\l0x00002e5c      cmp eax, r13d\l0x00002e5f      jl 0x2e40\l"]
	"0x00002e61" [URL="dbg.main/0x00002e61", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2e38, 0x2f1d\l0x00002e61      cmp byte [obj.have_read_stdin], 0                      ; [0x1c148:1]=1\l0x00002e68      jne 0x2e92\l"]
	"0x00002e6a" [URL="dbg.main/0x00002e6a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2ea1\l0x00002e6a      add rsp, 0x18\l0x00002e6e      xor ebx, 1\l0x00002e71      movzx eax, bl\l0x00002e74      pop rbx\l0x00002e75      pop rbp\l0x00002e76      pop r12\l0x00002e78      pop r13\l0x00002e7a      pop r14\l0x00002e7c      pop r15\l0x00002e7e      ret\l"]
	"0x00002e7f" [URL="dbg.main/0x00002e7f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2aa0\l0x00002e7f      lea rax, obj.FORMAT_RIGHT_NOLZ                         ; 0x16b88 ; \"%*ld%s\"\l0x00002e86      mov qword [obj.lineno_format], rax                     ; [0x1c040:8]=0x16b88 obj.FORMAT_RIGHT_NOLZ\l0x00002e8d      jmp 0x2970\l"]
	"0x00002e92" [URL="dbg.main/0x00002e92", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2e68\l0x00002e92      mov rdi, qword [obj.stdin]                             ; obj.stdin_GLIBC_2.2.5\l                                                                       ; [0x1c0f0:8]=0 ; int64_t arg1\l0x00002e99      call dbg.rpl_fclose\l0x00002e9e      add eax, 1\l0x00002ea1      jne 0x2e6a\l"]
	"0x00002ea3" [URL="dbg.main/0x00002ea3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002ea3      call sym.imp.__errno_location\l0x00002ea8      lea rdx, [0x0001614c]                                  ; \"-\" ; char *format\l0x00002eaf      mov edi, 1                                             ; int status\l0x00002eb4      mov esi, dword [rax]                                   ; int errname\l0x00002eb6      xor eax, eax\l0x00002eb8      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002ebd" [URL="dbg.main/0x00002ebd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2c31\l0x00002ebd      cmp byte [rdx], 0\l0x00002ec0      mov rax, qword [obj.section_del]                       ; [0x1c048:8]=0\l0x00002ec7      je 0x2970\l"]
	"0x00002ecd" [URL="dbg.main/0x00002ecd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002ecd      nop dword [rax]\l"]
	"0x00002ed0" [URL="dbg.main/0x00002ed0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2eef\l0x00002ed0      lea rcx, [rdx + 1]\l0x00002ed4      add rax, 1\l0x00002ed8      mov qword [obj.optarg], rcx                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x1c100:8]=0x1614e str.header_numbering ; \"Na\\x01\"\l0x00002edf      movzx edx, byte [rdx]\l0x00002ee2      mov byte [rax - 1], dl\l0x00002ee5      mov rdx, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x1c100:8]=0x1614e str.header_numbering ; \"Na\\x01\"\l0x00002eec      cmp byte [rdx], 0\l0x00002eef      jne 0x2ed0\l"]
	"0x00002ef1" [URL="dbg.main/0x00002ef1", fillcolor="white",color="#767676", fontname="Courier",label="0x00002ef1      jmp 0x2970\l"]
	"0x00002ef6" [URL="dbg.main/0x00002ef6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2abe\l0x00002ef6      call dbg.quote\l0x00002efb      mov edx, 5\l0x00002f00      lea rsi, str.invalid_line_numbering_format:__s         ; 0x16af8 ; \"invalid line numbering format: %s\"\l0x00002f07      mov rbx, rax\l0x00002f0a      jmp 0x2c85\l"]
	"0x00002f0f" [URL="dbg.main/0x00002f0f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2e32\l0x00002f0f      lea rdi, [0x0001614c]                                  ; \"-\" ; int64_t arg1\l0x00002f16      call dbg.nl_file\l0x00002f1b      mov ebx, eax\l0x00002f1d      jmp 0x2e61\l"]
	"0x00002f22" [URL="dbg.main/0x00002f22", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2d2d\l0x00002f22      mov edi, 1                                             ; int64_t arg1\l0x00002f27      call dbg.usage\l0x00002f2c      nop dword [rax]\l"]
        "0x000028f0" -> "0x00002970" [color="#3a96dd"];
        "0x00002970" -> "0x00002d2b" [color="#13a10e"];
        "0x00002970" -> "0x0000298d" [color="#c50f1f"];
        "0x0000298d" -> "0x000029b0" [color="#13a10e"];
        "0x0000298d" -> "0x00002992" [color="#c50f1f"];
        "0x00002992" -> "0x00002ca8" [color="#13a10e"];
        "0x00002992" -> "0x0000299b" [color="#c50f1f"];
        "0x0000299b" -> "0x000029b0" [color="#13a10e"];
        "0x0000299b" -> "0x000029a3" [color="#c50f1f"];
        "0x000029a3" -> "0x00002c48" [color="#3a96dd"];
        "0x000029a3" -> "0x000029b0" [color="#3a96dd"];
        "0x000029a3" -> "0x00002c10" [color="#3a96dd"];
        "0x000029a3" -> "0x000029b0" [color="#3a96dd"];
        "0x000029a3" -> "0x00002bc8" [color="#3a96dd"];
        "0x000029a3" -> "0x000029b0" [color="#3a96dd"];
        "0x000029a3" -> "0x00002b80" [color="#3a96dd"];
        "0x000029a3" -> "0x00002b30" [color="#3a96dd"];
        "0x000029a3" -> "0x000029b0" [color="#3a96dd"];
        "0x000029a3" -> "0x000029b0" [color="#3a96dd"];
        "0x000029a3" -> "0x00002ae0" [color="#3a96dd"];
        "0x000029a3" -> "0x000029b0" [color="#3a96dd"];
        "0x000029a3" -> "0x00002a78" [color="#3a96dd"];
        "0x000029a3" -> "0x000029b0" [color="#3a96dd"];
        "0x000029a3" -> "0x00002a68" [color="#3a96dd"];
        "0x000029a3" -> "0x000029b0" [color="#3a96dd"];
        "0x000029a3" -> "0x000029b0" [color="#3a96dd"];
        "0x000029a3" -> "0x00002a50" [color="#3a96dd"];
        "0x000029a3" -> "0x000029b0" [color="#3a96dd"];
        "0x000029a3" -> "0x000029b0" [color="#3a96dd"];
        "0x000029a3" -> "0x00002a00" [color="#3a96dd"];
        "0x000029a3" -> "0x000029b8" [color="#3a96dd"];
        "0x000029b0" -> "0x00002970" [color="#3a96dd"];
        "0x000029b8" -> "0x00002970" [color="#3a96dd"];
        "0x00002a00" -> "0x00002970" [color="#3a96dd"];
        "0x00002a50" -> "0x00002970" [color="#3a96dd"];
        "0x00002a68" -> "0x00002970" [color="#3a96dd"];
        "0x00002a78" -> "0x00002d04" [color="#13a10e"];
        "0x00002a78" -> "0x00002a88" [color="#c50f1f"];
        "0x00002a88" -> "0x00002e7f" [color="#13a10e"];
        "0x00002a88" -> "0x00002aa6" [color="#c50f1f"];
        "0x00002aa6" -> "0x00002ef6" [color="#13a10e"];
        "0x00002aa6" -> "0x00002ac4" [color="#c50f1f"];
        "0x00002ac4" -> "0x00002970" [color="#3a96dd"];
        "0x00002ae0" -> "0x00002970" [color="#3a96dd"];
        "0x00002b30" -> "0x00002970" [color="#3a96dd"];
        "0x00002b80" -> "0x00002970" [color="#13a10e"];
        "0x00002b80" -> "0x00002ba2" [color="#c50f1f"];
        "0x00002ba2" -> "0x00002c85" [color="#3a96dd"];
        "0x00002bc8" -> "0x00002970" [color="#13a10e"];
        "0x00002bc8" -> "0x00002bea" [color="#c50f1f"];
        "0x00002bea" -> "0x00002c85" [color="#3a96dd"];
        "0x00002c10" -> "0x00002ebd" [color="#13a10e"];
        "0x00002c10" -> "0x00002c37" [color="#c50f1f"];
        "0x00002c37" -> "0x00002970" [color="#3a96dd"];
        "0x00002c48" -> "0x00002970" [color="#13a10e"];
        "0x00002c48" -> "0x00002c6a" [color="#c50f1f"];
        "0x00002c6a" -> "0x00002c85" [color="#3a96dd"];
        "0x00002c85" -> "0x00002970" [color="#3a96dd"];
        "0x00002ca8" -> "0x00002cf0" [color="#13a10e"];
        "0x00002ca8" -> "0x00002caf" [color="#c50f1f"];
        "0x00002cf0" -> "0x00002970" [color="#13a10e"];
        "0x00002cf0" -> "0x00002cfd" [color="#c50f1f"];
        "0x00002cfd" -> "0x00002d04" [color="#3a96dd"];
        "0x00002d04" -> "0x00002a88" [color="#13a10e"];
        "0x00002d04" -> "0x00002d0e" [color="#c50f1f"];
        "0x00002d0e" -> "0x00002a88" [color="#13a10e"];
        "0x00002d0e" -> "0x00002d18" [color="#c50f1f"];
        "0x00002d18" -> "0x00002970" [color="#3a96dd"];
        "0x00002d2b" -> "0x00002f22" [color="#13a10e"];
        "0x00002d2b" -> "0x00002d33" [color="#c50f1f"];
        "0x00002d33" -> "0x00002f0f" [color="#13a10e"];
        "0x00002d33" -> "0x00002e38" [color="#c50f1f"];
        "0x00002e38" -> "0x00002e61" [color="#13a10e"];
        "0x00002e38" -> "0x00002e3a" [color="#c50f1f"];
        "0x00002e3a" -> "0x00002e40" [color="#3a96dd"];
        "0x00002e40" -> "0x00002e40" [color="#13a10e"];
        "0x00002e40" -> "0x00002e61" [color="#c50f1f"];
        "0x00002e61" -> "0x00002e92" [color="#13a10e"];
        "0x00002e61" -> "0x00002e6a" [color="#c50f1f"];
        "0x00002e7f" -> "0x00002970" [color="#3a96dd"];
        "0x00002e92" -> "0x00002e6a" [color="#13a10e"];
        "0x00002e92" -> "0x00002ea3" [color="#c50f1f"];
        "0x00002ea3" -> "0x00002ebd" [color="#3a96dd"];
        "0x00002ebd" -> "0x00002970" [color="#13a10e"];
        "0x00002ebd" -> "0x00002ecd" [color="#c50f1f"];
        "0x00002ecd" -> "0x00002ed0" [color="#3a96dd"];
        "0x00002ed0" -> "0x00002ed0" [color="#13a10e"];
        "0x00002ed0" -> "0x00002ef1" [color="#c50f1f"];
        "0x00002ef1" -> "0x00002970" [color="#3a96dd"];
        "0x00002ef6" -> "0x00002c85" [color="#3a96dd"];
        "0x00002f0f" -> "0x00002e61" [color="#3a96dd"];
        "0x00002f22" -> "0x00002f30" [color="#3a96dd"];
}
