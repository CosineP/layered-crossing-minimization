digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00002970" [URL="dbg.main/0x00002970", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x2e88\l1225: int dbg.main (int argc, char **argv);\l; var uintmax_t tmp @ rbp-0x108\l; var Chown_option chopt @ rbp-0x100\l; var stat ref_stats @ rbp-0xd0\l; var uint32_t var_4h @ rsp+0x14\l; var uint32_t var_8h @ rsp+0x18\l; var uint32_t var_fh @ rsp+0x1f\l; var int64_t var_18h @ rsp+0x28\l; var int64_t var_20h @ rsp+0x30\l; var uint32_t var_24h @ rsp+0x34\l; var int64_t var_28h @ rsp+0x38\l; var int64_t var_30h @ rsp+0x40\l; var int64_t var_31h @ rsp+0x41\l; var int64_t var_40h @ rsp+0x50\l; var int64_t var_50h @ rsp+0x60\l; var int64_t var_70h @ rsp+0x80\l; var int64_t var_e8h @ rsp+0xf8\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x00002970      endbr64                                                ; int main(int argc,char ** argv);\l0x00002974      push r15\l0x00002976      push r14\l0x00002978      lea r14, obj.long_options                              ; 0x119a0 ; \"&\\xc1\"\l0x0000297f      push r13\l0x00002981      lea r13, str.HLPRcfhv                                  ; 0xc0e2 ; \"HLPRcfhv\"\l0x00002988      push r12\l0x0000298a      lea r12, [0x0000c084]                                  ; \"coreutils\"\l0x00002991      push rbp\l0x00002992      movsxd rbp, edi                                        ; argc\l0x00002995      push rbx\l0x00002996      mov rbx, rsi                                           ; argv\l0x00002999      sub rsp, 0xf8\l0x000029a0      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x000029a3      mov rax, qword fs:[0x28]\l0x000029ac      mov qword [var_e8h], rax\l0x000029b4      xor eax, eax\l0x000029b6      lea r15, [var_20h]\l0x000029bb      call dbg.set_program_name\l0x000029c0      lea rsi, [0x0000d321]                                  ; const char *locale\l0x000029c7      mov edi, 6                                             ; int category\l0x000029cc      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x000029d1      lea rsi, str._usr_local_share_locale                   ; 0xc0ad ; \"/usr/local/share/locale\" ; char *dirname\l0x000029d8      mov rdi, r12                                           ; char *domainname\l0x000029db      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x000029e0      mov rdi, r12                                           ; char *domainname\l0x000029e3      lea r12, [0x0000c998]\l0x000029ea      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x000029ef      lea rdi, [dbg.close_stdout]                            ; 0x4400 ; func function\l0x000029f6      call sym.atexit                                        ; int atexit(func function)\l0x000029fb      mov rdi, r15                                           ; int64_t arg1\l0x000029fe      call dbg.chopt_init\l0x00002a03      mov dword [var_4h], 0xffffffff                         ; [0xffffffff:4]=0 ; -1\l0x00002a0b      mov dword [var_8h], 0x10                               ; [0x10:4]=39\l0x00002a13      mov byte [var_fh], 0\l0x00002a18      nop dword [rax + rax]\l"]
	"0x00002a20" [URL="dbg.main/0x00002a20", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x00002a7e  CODE 0x00002a85  CODE 0x00002a95  \l; XREFS: CODE 0x00002aa8  CODE 0x00002ab8  CODE 0x00002ac8  \l; XREFS: CODE 0x00002ad5  CODE 0x00002ae8  CODE 0x00002af5  \l; XREFS: CODE 0x00002b08  CODE 0x00002b6f  CODE 0x00002c51  \l0x00002a20      xor r8d, r8d\l0x00002a23      mov rcx, r14\l0x00002a26      mov rdx, r13\l0x00002a29      mov rsi, rbx\l0x00002a2c      mov edi, ebp\l0x00002a2e      call sym.imp.getopt_long\l0x00002a33      cmp eax, 0xffffffff\l0x00002a36      je 0x2b74\l"]
	"0x00002a3c" [URL="dbg.main/0x00002a3c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002a3c      cmp eax, 0x83\l0x00002a41      jg case.0x2a63.73\l"]
	"0x00002a47" [URL="dbg.main/0x00002a47", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002a47      cmp eax, 0x47\l0x00002a4a      jle 0x2b10\l"]
	"0x00002a50" [URL="dbg.main/0x00002a50", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002a50      sub eax, 0x48\l0x00002a53      cmp eax, 0x3b\l0x00002a56      ja case.0x2a63.73\l"]
	"0x00002a5c" [URL="dbg.main/0x00002a5c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002a5c      movsxd rax, dword [r12 + rax*4]\l0x00002a60      add rax, r12\l;-- switch\l0x00002a63      jmp rax                                                ; switch table (60 cases) at 0xc998\l"]
	"0x00002a70" [URL="dbg.main/0x00002a70", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 131:                                                          ; from 0x00002a63\l; CODE XREF from dbg.main @ 0x2a63\l0x00002a70      mov rax, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x120a0:8]=0\l0x00002a77      mov qword [obj.reference_file], rax                    ; [0x120e0:8]=0\l0x00002a7e      jmp 0x2a20\l"]
	"0x00002a80" [URL="dbg.main/0x00002a80", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 130:                                                          ; from 0x00002a63\l; CODE XREF from dbg.main @ 0x2a63\l0x00002a80      mov byte [var_fh], 1\l0x00002a85      jmp 0x2a20\l"]
	"0x00002a90" [URL="dbg.main/0x00002a90", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 129:                                                          ; from 0x00002a63\l; CODE XREF from dbg.main @ 0x2a63\l0x00002a90      mov byte [var_fh], 0\l0x00002a95      jmp 0x2a20\l"]
	"0x00002aa0" [URL="dbg.main/0x00002aa0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 128:                                                          ; from 0x00002a63\l; CODE XREF from dbg.main @ 0x2a63\l0x00002aa0      mov dword [var_4h], 1\l0x00002aa8      jmp 0x2a20\l"]
	"0x00002ab0" [URL="dbg.main/0x00002ab0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 118:                                                          ; from 0x00002a63\l; CODE XREF from dbg.main @ 0x2a63\l0x00002ab0      mov dword [var_20h], 0\l0x00002ab8      jmp 0x2a20\l"]
	"0x00002ac0" [URL="dbg.main/0x00002ac0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 104:                                                          ; from 0x00002a63\l; CODE XREF from dbg.main @ 0x2a63\l0x00002ac0      mov dword [var_4h], 0\l0x00002ac8      jmp 0x2a20\l"]
	"0x00002ad0" [URL="dbg.main/0x00002ad0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 102:                                                          ; from 0x00002a63\l; CODE XREF from dbg.main @ 0x2a63\l0x00002ad0      mov byte [var_31h], 1\l0x00002ad5      jmp 0x2a20\l"]
	"0x00002ae0" [URL="dbg.main/0x00002ae0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 99:                                                           ; from 0x00002a63\l; CODE XREF from dbg.main @ 0x2a63\l0x00002ae0      mov dword [var_20h], 1\l0x00002ae8      jmp 0x2a20\l"]
	"0x00002af0" [URL="dbg.main/0x00002af0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 82:                                                           ; from 0x00002a63\l; CODE XREF from dbg.main @ 0x2a63\l0x00002af0      mov byte [var_24h], 1\l0x00002af5      jmp 0x2a20\l"]
	"0x00002b00" [URL="dbg.main/0x00002b00", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 72:                                                           ; from 0x00002a63\l; CODE XREF from dbg.main @ 0x2a63\l0x00002b00      mov dword [var_8h], 0x11                               ; [0x11:4]=0\l0x00002b08      jmp 0x2a20\l"]
	"0x00002b10" [URL="dbg.main/0x00002b10", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2a4a\l0x00002b10      cmp eax, 0xffffff7d                                    ; 4294967165\l0x00002b15      jne 0x2b55\l"]
	"0x00002b17" [URL="dbg.main/0x00002b17", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002b17      sub rsp, 8\l0x00002b1b      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0x12088:8]=0 ; func main\l0x00002b22      xor eax, eax\l0x00002b24      mov rcx, qword [obj.Version]                           ; [0x12010:8]=0xce84 \"9.0\" ; func init\l0x00002b2b      push 0\l0x00002b2d      lea r9, str.Jim_Meyering                               ; 0xc0c5 ; \"Jim Meyering\" ; int64_t arg_c0h\l0x00002b34      lea r8, str.David_MacKenzie                            ; 0xc0d2 ; \"David MacKenzie\" ; int64_t arg6\l0x00002b3b      lea rdx, str.GNU_coreutils                             ; 0xc080 ; \"GNU coreutils\" ; int64_t arg3\l0x00002b42      lea rsi, [global_program]                              ; 0xc004 ; \"chgrp\" ; int64_t arg2\l0x00002b49      call dbg.version_etc\l0x00002b4e      xor edi, edi                                           ; int status\l0x00002b50      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x00002b55" [URL="dbg.main/0x00002b55", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2b15\l0x00002b55      cmp eax, 0xffffff7e                                    ; 4294967166\l0x00002b5a      jne case.0x2a63.73\l"]
	"0x00002b60" [URL="dbg.main/0x00002b60", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002b60      xor edi, edi                                           ; int64_t arg1\l0x00002b62      call dbg.usage\l"]
	"0x00002b67" [URL="dbg.main/0x00002b67", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 80:                                                           ; from 0x00002a63\l; CODE XREF from dbg.main @ 0x2a63\l0x00002b67      mov dword [var_8h], 0x10                               ; [0x10:4]=39\l0x00002b6f      jmp 0x2a20\l"]
	"0x00002b74" [URL="dbg.main/0x00002b74", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2a36\l0x00002b74      cmp byte [var_24h], 0\l0x00002b79      jne 0x2c56\l"]
	"0x00002b7f" [URL="dbg.main/0x00002b7f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002b7f      mov dword [var_8h], 0x10                               ; [0x10:4]=39\l"]
	"0x00002b87" [URL="dbg.main/0x00002b87", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2c5b, 0x2c74\l0x00002b87      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x12090:4]=2\l0x00002b8e      mov r12, qword [obj.reference_file]                    ; [0x120e0:8]=0\l0x00002b95      mov edx, ebp\l0x00002b97      cmp dword [var_4h], 0\l0x00002b9c      setne byte [var_30h]\l0x00002ba1      sub edx, eax\l0x00002ba3      test r12, r12\l0x00002ba6      je 0x2c79\l"]
	"0x00002bac" [URL="dbg.main/0x00002bac", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002bac      test edx, edx\l0x00002bae      jle 0x2d28\l"]
	"0x00002bb4" [URL="dbg.main/0x00002bb4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002bb4      lea rsi, [var_50h]\l0x00002bb9      mov rdi, r12\l0x00002bbc      call sym.imp.stat\l0x00002bc1      test eax, eax\l0x00002bc3      jne 0x2dfb\l"]
	"0x00002bc9" [URL="dbg.main/0x00002bc9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002bc9      mov r12d, dword [var_70h]\l0x00002bce      mov edi, r12d                                          ; int64_t arg1\l0x00002bd1      call sym.gid_to_name\l0x00002bd6      mov qword [var_40h], rax\l"]
	"0x00002bdb" [URL="dbg.main/0x00002bdb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2ca6, 0x2cc6\l0x00002bdb      cmp byte [var_24h], 0\l0x00002be0      je 0x2bed\l"]
	"0x00002be2" [URL="dbg.main/0x00002be2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002be2      cmp byte [var_fh], 0\l0x00002be7      jne 0x2ccb\l"]
	"0x00002bed" [URL="dbg.main/0x00002bed", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2be0, 0x2cdf\l0x00002bed      mov esi, dword [var_8h]                                ; int64_t arg3\l0x00002bf1      mov ecx, r12d                                          ; int64_t arg5\l0x00002bf4      or edx, 0xffffffff                                     ; -1\l0x00002bf7      or r9d, 0xffffffff                                     ; -1\l0x00002bfb      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x12090:4]=2\l0x00002c02      or r8d, 0xffffffff                                     ; -1\l0x00002c06      or esi, section..dynsym                                ; 0x400\l0x00002c0c      lea rdi, [rbx + rax*8]                                 ; int64_t arg2\l0x00002c10      push rax\l0x00002c11      push r15\l0x00002c13      call sym.chown_files\l0x00002c18      pop rdx\l0x00002c19      pop rcx\l0x00002c1a      xor eax, 1\l0x00002c1d      movzx eax, al\l0x00002c20      mov rdx, qword [var_e8h]\l0x00002c28      sub rdx, qword fs:[0x28]\l0x00002c31      jne 0x2dd2\l"]
	"0x00002c37" [URL="dbg.main/0x00002c37", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002c37      add rsp, 0xf8\l0x00002c3e      pop rbx\l0x00002c3f      pop rbp\l0x00002c40      pop r12\l0x00002c42      pop r13\l0x00002c44      pop r14\l0x00002c46      pop r15\l0x00002c48      ret\l"]
	"0x00002c49" [URL="dbg.main/0x00002c49", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 76:                                                           ; from 0x00002a63\l; CODE XREF from dbg.main @ 0x2a63\l0x00002c49      mov dword [var_8h], 2\l0x00002c51      jmp 0x2a20\l"]
	"0x00002c56" [URL="dbg.main/0x00002c56", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2b79\l0x00002c56      cmp dword [var_8h], 0x10\l0x00002c5b      jne 0x2b87\l"]
	"0x00002c61" [URL="dbg.main/0x00002c61", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002c61      cmp dword [var_4h], 1\l0x00002c66      je 0x2dd7\l"]
	"0x00002c6c" [URL="dbg.main/0x00002c6c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002c6c      mov dword [var_4h], 0\l0x00002c74      jmp 0x2b87\l"]
	"0x00002c79" [URL="dbg.main/0x00002c79", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2ba6\l0x00002c79      sub edx, 1\l0x00002c7c      jle 0x2d28\l"]
	"0x00002c82" [URL="dbg.main/0x00002c82", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002c82      mov rbp, qword [rbx + rax*8]\l0x00002c86      lea edx, [rax + 1]\l0x00002c89      mov dword [obj.optind], edx                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x12090:4]=2\l0x00002c8f      cmp byte [rbp], 0\l0x00002c93      jne 0x2dc2\l"]
	"0x00002c99" [URL="dbg.main/0x00002c99", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2dcd\l0x00002c99      mov qword [var_40h], r12\l0x00002c9e      or r12d, 0xffffffff                                    ; -1\l0x00002ca2      cmp byte [rbp], 0\l0x00002ca6      je 0x2bdb\l"]
	"0x00002cac" [URL="dbg.main/0x00002cac", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002cac      mov rdi, rbp\l0x00002caf      call sym.imp.getgrnam\l0x00002cb4      test rax, rax\l0x00002cb7      je 0x2d5b\l"]
	"0x00002cbd" [URL="dbg.main/0x00002cbd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002cbd      mov r12d, dword [rax + 0x10]\l"]
	"0x00002cc1" [URL="dbg.main/0x00002cc1", fillcolor="white",color="#767676", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2d8a\l0x00002cc1      call sym.imp.endgrent\l0x00002cc6      jmp 0x2bdb\l"]
	"0x00002ccb" [URL="dbg.main/0x00002ccb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2be7\l0x00002ccb      lea rdi, [global_dev_ino_buf]                          ; 0x120d0 ; int64_t arg1\l0x00002cd2      call dbg.get_root_dev_ino\l0x00002cd7      mov qword [var_28h], rax\l0x00002cdc      test rax, rax\l0x00002cdf      jne 0x2bed\l"]
	"0x00002ce5" [URL="dbg.main/0x00002ce5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002ce5      lea rsi, [0x0000d37b]                                  ; \"/\" ; int64_t arg2\l0x00002cec      mov edi, 4                                             ; int64_t arg1\l0x00002cf1      call sym.quotearg_style\l0x00002cf6      mov edx, 5\l0x00002cfb      lea rsi, str.failed_to_get_attributes_of__s            ; 0xc978 ; \"failed to get attributes of %s\"\l0x00002d02      xor edi, edi\l0x00002d04      mov r13, rax\l0x00002d07      call sym.imp.dcgettext\l0x00002d0c      mov r12, rax\l0x00002d0f      call sym.imp.__errno_location\l0x00002d14      mov rcx, r13\l0x00002d17      mov rdx, r12                                           ; char *format\l0x00002d1a      mov edi, 1                                             ; int status\l0x00002d1f      mov esi, dword [rax]                                   ; int errname\l0x00002d21      xor eax, eax\l0x00002d23      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002d28" [URL="dbg.main/0x00002d28", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2bae, 0x2c7c\l0x00002d28      cmp eax, ebp\l0x00002d2a      jl 0x2e3a\l"]
	"0x00002d30" [URL="dbg.main/0x00002d30", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002d30      mov edx, 5\l0x00002d35      lea rsi, str.missing_operand                           ; 0xc0eb ; \"missing operand\"\l0x00002d3c      xor edi, edi\l0x00002d3e      call sym.imp.dcgettext\l0x00002d43      xor esi, esi                                           ; int errname\l0x00002d45      xor edi, edi                                           ; int status\l0x00002d47      mov rdx, rax                                           ; char *format\l0x00002d4a      xor eax, eax\l0x00002d4c      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002d51" [URL="dbg.main/0x00002d51", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 73...75:                                                      ; from 0x00002a63\l;-- case 77:                                                           ; from 0x00002a63\l;-- case 78...79:                                                      ; from 0x00002a63\l;-- case 81:                                                           ; from 0x00002a63\l;-- case 83...98:                                                      ; from 0x00002a63\l;-- case 100:                                                          ; from 0x00002a63\l;-- case 101:                                                          ; from 0x00002a63\l;-- case 105...117:                                                    ; from 0x00002a63\l;-- case 119:                                                          ; from 0x00002a63\l;-- default:                                                           ; from 0x2a63\l; CODE XREFS from dbg.main @ 0x2a41, 0x2a56, 0x2a63, 0x2b5a, 0x2e6b\l0x00002d51      mov edi, 1                                             ; int64_t arg1\l0x00002d56      call dbg.usage\l"]
	"0x00002d5b" [URL="dbg.main/0x00002d5b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2cb7\l0x00002d5b      xor esi, esi                                           ; int64_t arg2\l0x00002d5d      lea rcx, [var_18h]                                     ; int64_t arg4\l0x00002d62      mov edx, 0xa                                           ; uint32_t arg3\l0x00002d67      mov rdi, rbp                                           ; int64_t arg1\l0x00002d6a      lea r8, [0x0000d321]                                   ; int64_t arg5\l0x00002d71      call dbg.xstrtoumax\l0x00002d76      test eax, eax\l0x00002d78      jne 0x2d90\l"]
	"0x00002d7a" [URL="dbg.main/0x00002d7a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002d7a      mov rax, qword [var_18h]\l0x00002d7f      mov edx, 0xffffffff                                    ; -1\l0x00002d84      mov r12d, eax\l0x00002d87      cmp rax, rdx\l0x00002d8a      jbe 0x2cc1\l"]
	"0x00002d90" [URL="dbg.main/0x00002d90", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2d78\l0x00002d90      mov rdi, rbp                                           ; int64_t arg1\l0x00002d93      call dbg.quote\l0x00002d98      mov edx, 5\l0x00002d9d      lea rsi, str.invalid_group:__s                         ; 0xc114 ; \"invalid group: %s\"\l0x00002da4      xor edi, edi\l0x00002da6      mov r12, rax\l0x00002da9      call sym.imp.dcgettext\l0x00002dae      mov rcx, r12\l0x00002db1      xor esi, esi                                           ; int errname\l0x00002db3      mov edi, 1                                             ; int status\l0x00002db8      mov rdx, rax                                           ; char *format\l0x00002dbb      xor eax, eax\l0x00002dbd      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002dc2" [URL="dbg.main/0x00002dc2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2c93\l0x00002dc2      mov rdi, rbp                                           ; int64_t arg1\l0x00002dc5      call dbg.xstrdup\l0x00002dca      mov r12, rax\l0x00002dcd      jmp 0x2c99\l"]
	"0x00002dd2" [URL="dbg.main/0x00002dd2", fillcolor="white",color="#767676", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2c31\l0x00002dd2      call sym.imp.__stack_chk_fail                          ; void __stack_chk_fail(void)\l"]
	"0x00002dd7" [URL="dbg.main/0x00002dd7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2c66\l0x00002dd7      mov edx, 5\l0x00002ddc      lea rsi, str._R___dereference_requires_either__H_or__L ; 0xc948 ; \"-R --dereference requires either -H or -L\"\l0x00002de3      xor edi, edi\l0x00002de5      call sym.imp.dcgettext\l0x00002dea      xor esi, esi                                           ; int errname\l0x00002dec      mov edi, 1                                             ; int status\l0x00002df1      mov rdx, rax                                           ; char *format\l0x00002df4      xor eax, eax\l0x00002df6      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002dfb" [URL="dbg.main/0x00002dfb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2bc3\l0x00002dfb      mov rsi, r12                                           ; int64_t arg2\l0x00002dfe      mov edi, 4                                             ; int64_t arg1\l0x00002e03      call sym.quotearg_style\l0x00002e08      mov edx, 5\l0x00002e0d      lea rsi, str.failed_to_get_attributes_of__s            ; 0xc978 ; \"failed to get attributes of %s\"\l0x00002e14      xor edi, edi\l0x00002e16      mov r13, rax\l0x00002e19      call sym.imp.dcgettext\l0x00002e1e      mov r12, rax\l0x00002e21      call sym.imp.__errno_location\l0x00002e26      mov rcx, r13\l0x00002e29      mov rdx, r12                                           ; char *format\l0x00002e2c      mov edi, 1                                             ; int status\l0x00002e31      mov esi, dword [rax]                                   ; int errname\l0x00002e33      xor eax, eax\l0x00002e35      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002e3a" [URL="dbg.main/0x00002e3a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2d2a\l0x00002e3a      mov rdi, qword [rbx + rbp*8 - 8]                       ; int64_t arg1\l0x00002e3f      call dbg.quote\l0x00002e44      xor edi, edi\l0x00002e46      mov edx, 5\l0x00002e4b      lea rsi, str.missing_operand_after__s                  ; 0xc0fb ; \"missing operand after %s\"\l0x00002e52      mov r12, rax\l0x00002e55      call sym.imp.dcgettext\l0x00002e5a      mov rcx, r12\l0x00002e5d      xor esi, esi                                           ; int errname\l0x00002e5f      xor edi, edi                                           ; int status\l0x00002e61      mov rdx, rax                                           ; char *format\l0x00002e64      xor eax, eax\l0x00002e66      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00002e6b      jmp case.0x2a63.73\l"]
        "0x00002970" -> "0x00002a20" [color="#3a96dd"];
        "0x00002a20" -> "0x00002b74" [color="#13a10e"];
        "0x00002a20" -> "0x00002a3c" [color="#c50f1f"];
        "0x00002a3c" -> "0x00002d51" [color="#13a10e"];
        "0x00002a3c" -> "0x00002a47" [color="#c50f1f"];
        "0x00002a47" -> "0x00002b10" [color="#13a10e"];
        "0x00002a47" -> "0x00002a50" [color="#c50f1f"];
        "0x00002a50" -> "0x00002d51" [color="#13a10e"];
        "0x00002a50" -> "0x00002a5c" [color="#c50f1f"];
        "0x00002a5c" -> "0x00002b00" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002c49" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002b67" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002af0" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002ae0" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002ad0" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002ac0" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002ab0" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002d51" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002aa0" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002a90" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002a80" [color="#3a96dd"];
        "0x00002a5c" -> "0x00002a70" [color="#3a96dd"];
        "0x00002a70" -> "0x00002a20" [color="#3a96dd"];
        "0x00002a80" -> "0x00002a20" [color="#3a96dd"];
        "0x00002a90" -> "0x00002a20" [color="#3a96dd"];
        "0x00002aa0" -> "0x00002a20" [color="#3a96dd"];
        "0x00002ab0" -> "0x00002a20" [color="#3a96dd"];
        "0x00002ac0" -> "0x00002a20" [color="#3a96dd"];
        "0x00002ad0" -> "0x00002a20" [color="#3a96dd"];
        "0x00002ae0" -> "0x00002a20" [color="#3a96dd"];
        "0x00002af0" -> "0x00002a20" [color="#3a96dd"];
        "0x00002b00" -> "0x00002a20" [color="#3a96dd"];
        "0x00002b10" -> "0x00002b55" [color="#13a10e"];
        "0x00002b10" -> "0x00002b17" [color="#c50f1f"];
        "0x00002b55" -> "0x00002d51" [color="#13a10e"];
        "0x00002b55" -> "0x00002b60" [color="#c50f1f"];
        "0x00002b60" -> "0x00002b67" [color="#3a96dd"];
        "0x00002b67" -> "0x00002a20" [color="#3a96dd"];
        "0x00002b74" -> "0x00002c56" [color="#13a10e"];
        "0x00002b74" -> "0x00002b7f" [color="#c50f1f"];
        "0x00002b7f" -> "0x00002b87" [color="#3a96dd"];
        "0x00002b87" -> "0x00002c79" [color="#13a10e"];
        "0x00002b87" -> "0x00002bac" [color="#c50f1f"];
        "0x00002bac" -> "0x00002d28" [color="#13a10e"];
        "0x00002bac" -> "0x00002bb4" [color="#c50f1f"];
        "0x00002bb4" -> "0x00002dfb" [color="#13a10e"];
        "0x00002bb4" -> "0x00002bc9" [color="#c50f1f"];
        "0x00002bc9" -> "0x00002bdb" [color="#3a96dd"];
        "0x00002bdb" -> "0x00002bed" [color="#13a10e"];
        "0x00002bdb" -> "0x00002be2" [color="#c50f1f"];
        "0x00002be2" -> "0x00002ccb" [color="#13a10e"];
        "0x00002be2" -> "0x00002bed" [color="#c50f1f"];
        "0x00002bed" -> "0x00002dd2" [color="#13a10e"];
        "0x00002bed" -> "0x00002c37" [color="#c50f1f"];
        "0x00002c49" -> "0x00002a20" [color="#3a96dd"];
        "0x00002c56" -> "0x00002b87" [color="#13a10e"];
        "0x00002c56" -> "0x00002c61" [color="#c50f1f"];
        "0x00002c61" -> "0x00002dd7" [color="#13a10e"];
        "0x00002c61" -> "0x00002c6c" [color="#c50f1f"];
        "0x00002c6c" -> "0x00002b87" [color="#3a96dd"];
        "0x00002c79" -> "0x00002d28" [color="#13a10e"];
        "0x00002c79" -> "0x00002c82" [color="#c50f1f"];
        "0x00002c82" -> "0x00002dc2" [color="#13a10e"];
        "0x00002c82" -> "0x00002c99" [color="#c50f1f"];
        "0x00002c99" -> "0x00002bdb" [color="#13a10e"];
        "0x00002c99" -> "0x00002cac" [color="#c50f1f"];
        "0x00002cac" -> "0x00002d5b" [color="#13a10e"];
        "0x00002cac" -> "0x00002cbd" [color="#c50f1f"];
        "0x00002cbd" -> "0x00002cc1" [color="#3a96dd"];
        "0x00002cc1" -> "0x00002bdb" [color="#3a96dd"];
        "0x00002ccb" -> "0x00002bed" [color="#13a10e"];
        "0x00002ccb" -> "0x00002ce5" [color="#c50f1f"];
        "0x00002ce5" -> "0x00002d28" [color="#3a96dd"];
        "0x00002d28" -> "0x00002e3a" [color="#13a10e"];
        "0x00002d28" -> "0x00002d30" [color="#c50f1f"];
        "0x00002d30" -> "0x00002d51" [color="#3a96dd"];
        "0x00002d51" -> "0x00002d5b" [color="#3a96dd"];
        "0x00002d5b" -> "0x00002d90" [color="#13a10e"];
        "0x00002d5b" -> "0x00002d7a" [color="#c50f1f"];
        "0x00002d7a" -> "0x00002cc1" [color="#13a10e"];
        "0x00002d7a" -> "0x00002d90" [color="#c50f1f"];
        "0x00002d90" -> "0x00002dc2" [color="#3a96dd"];
        "0x00002dc2" -> "0x00002c99" [color="#3a96dd"];
        "0x00002dd7" -> "0x00002dfb" [color="#3a96dd"];
        "0x00002dfb" -> "0x00002e3a" [color="#3a96dd"];
        "0x00002e3a" -> "0x00002d51" [color="#3a96dd"];
}
