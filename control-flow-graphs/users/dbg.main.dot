digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x000026c0" [URL="dbg.main/0x000026c0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x27e8\l272: int dbg.main (int argc, char **argv);\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x000026c0      endbr64                                                ; int main(int argc,char ** argv);\l0x000026c4      push r12\l0x000026c6      lea r12, [0x000070be]                                  ; \"coreutils\"\l0x000026cd      push rbp\l0x000026ce      mov rbp, rsi                                           ; argv\l0x000026d1      push rbx\l0x000026d2      mov ebx, edi                                           ; argc\l0x000026d4      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x000026d7      call dbg.set_program_name\l0x000026dc      lea rsi, [0x00007781]                                  ; const char *locale\l0x000026e3      mov edi, 6                                             ; int category\l0x000026e8      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x000026ed      lea rsi, str._usr_local_share_locale                   ; 0x70e7 ; \"/usr/local/share/locale\" ; char *dirname\l0x000026f4      mov rdi, r12                                           ; char *domainname\l0x000026f7      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x000026fc      mov rdi, r12                                           ; char *domainname\l0x000026ff      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x00002704      lea rdi, [dbg.close_stdout]                            ; 0x2e00 ; func function\l0x0000270b      call sym.atexit                                        ; int atexit(func function)\l0x00002710      lea rax, str.David_MacKenzie                           ; 0x70ff ; \"David MacKenzie\"\l0x00002717      push 0\l0x00002719      mov edi, ebx                                           ; int64_t arg3\l0x0000271b      push rax\l0x0000271c      mov r9d, 1\l0x00002722      lea rax, str.Joseph_Arceneaux                          ; 0x710f ; \"Joseph Arceneaux\"\l0x00002729      mov r8, qword [obj.Version]                            ; [0xb010:8]=0x72db\l0x00002730      push rax\l0x00002731      lea rax, [dbg.usage]                                   ; 0x2a90\l0x00002738      lea rcx, str.GNU_coreutils                             ; 0x70ba ; \"GNU coreutils\"\l0x0000273f      mov rsi, rbp                                           ; int64_t arg4\l0x00002742      push rax\l0x00002743      lea rdx, str.users                                     ; 0x7004 ; \"users\" ; int64_t arg5\l0x0000274a      xor eax, eax\l0x0000274c      call dbg.parse_gnu_standard_options_only\l0x00002751      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=0\l0x00002758      add rsp, 0x20\l0x0000275c      sub ebx, eax\l0x0000275e      je 0x2778\l"]
	"0x00002760" [URL="dbg.main/0x00002760", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002760      cmp ebx, 1\l0x00002763      jne 0x278b\l"]
	"0x00002765" [URL="dbg.main/0x00002765", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002765      mov rdi, qword [rbp + rax*8]                           ; int64_t arg1\l0x0000276a      xor esi, esi                                           ; int64_t arg2\l0x0000276c      call sym.users\l"]
	"0x00002771" [URL="dbg.main/0x00002771", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2789\l0x00002771      pop rbx\l0x00002772      xor eax, eax\l0x00002774      pop rbp\l0x00002775      pop r12\l0x00002777      ret\l"]
	"0x00002778" [URL="dbg.main/0x00002778", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x275e\l0x00002778      mov esi, 1                                             ; int64_t arg2\l0x0000277d      lea rdi, str._var_run_utmp                             ; 0x7036 ; \"/var/run/utmp\" ; int64_t arg1\l0x00002784      call sym.users\l0x00002789      jmp 0x2771\l"]
	"0x0000278b" [URL="dbg.main/0x0000278b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2763\l0x0000278b      mov rdi, qword [rbp + rax*8 + 8]                       ; int64_t arg1\l0x00002790      call dbg.quote\l0x00002795      mov edx, 5\l0x0000279a      lea rsi, str.extra_operand__s                          ; 0x7120 ; \"extra operand %s\"\l0x000027a1      xor edi, edi\l0x000027a3      mov r12, rax\l0x000027a6      call sym.imp.dcgettext\l0x000027ab      xor edi, edi                                           ; int status\l0x000027ad      mov rcx, r12\l0x000027b0      xor esi, esi                                           ; int errname\l0x000027b2      mov rdx, rax                                           ; char *format\l0x000027b5      xor eax, eax\l0x000027b7      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x000027bc      mov edi, 1                                             ; int64_t arg1\l0x000027c1      call dbg.usage\l0x000027c6      nop word cs:[rax + rax]\l"]
        "0x000026c0" -> "0x00002778" [color="#13a10e"];
        "0x000026c0" -> "0x00002760" [color="#c50f1f"];
        "0x00002760" -> "0x0000278b" [color="#13a10e"];
        "0x00002760" -> "0x00002765" [color="#c50f1f"];
        "0x00002765" -> "0x00002771" [color="#3a96dd"];
        "0x00002778" -> "0x00002771" [color="#3a96dd"];
}
