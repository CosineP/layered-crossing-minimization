digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x000026c0" [URL="dbg.main/0x000026c0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x27b8\l210: int dbg.main (int argc, char **argv);\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x000026c0      endbr64                                                ; int main(int margc,char ** margv);\l0x000026c4      push r12\l0x000026c6      lea r12, [0x0000a19c]                                  ; \"coreutils\"\l0x000026cd      push rbp\l0x000026ce      mov rbp, rsi                                           ; argv\l0x000026d1      push rbx\l0x000026d2      mov ebx, edi                                           ; argc\l0x000026d4      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x000026d7      call dbg.set_program_name\l0x000026dc      lea rsi, [0x0000a197]                                  ; const char *locale\l0x000026e3      mov edi, 6                                             ; int category\l0x000026e8      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x000026ed      lea rsi, str._usr_local_share_locale                   ; 0xa1c5 ; \"/usr/local/share/locale\" ; char *dirname\l0x000026f4      mov rdi, r12                                           ; char *domainname\l0x000026f7      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x000026fc      mov rdi, r12                                           ; char *domainname\l0x000026ff      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x00002704      lea rdi, [dbg.close_stdout]                            ; 0x4450 ; func function\l0x0000270b      mov dword [obj.exit_failure], 2                        ; [0xf010:4]=2\l0x00002715      call sym.atexit                                        ; int atexit(func function)\l0x0000271a      mov qword [obj.argv], rbp                              ; [0xf0b0:8]=0\l0x00002721      mov dword [obj.argc], ebx                              ; [0xf0b8:4]=0\l0x00002727      mov dword [obj.pos], 1                                 ; [0xf0bc:4]=10 ; \"\\n\"\l0x00002731      cmp ebx, 1\l0x00002734      jle 0x2758\l"]
	"0x00002736" [URL="dbg.main/0x00002736", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002736      lea edi, [rbx - 1]\l0x00002739      call sym.posixtest\l0x0000273e      movsxd rdx, dword [obj.pos]                            ; [0xf0bc:4]=10 ; \"\\n\"\l0x00002745      cmp edx, dword [obj.argc]                              ; [0xf0b8:4]=0\l0x0000274b      jne 0x275f\l"]
	"0x0000274d" [URL="dbg.main/0x0000274d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000274d      xor eax, 1\l0x00002750      movzx eax, al\l"]
	"0x00002753" [URL="dbg.main/0x00002753", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x275d\l0x00002753      pop rbx\l0x00002754      pop rbp\l0x00002755      pop r12\l0x00002757      ret\l"]
	"0x00002758" [URL="dbg.main/0x00002758", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2734\l0x00002758      mov eax, 1\l0x0000275d      jmp 0x2753\l"]
	"0x0000275f" [URL="dbg.main/0x0000275f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x274b\l0x0000275f      mov rax, qword [obj.argv]                              ; [0xf0b0:8]=0\l0x00002766      mov rdi, qword [rax + rdx*8]                           ; int64_t arg1\l0x0000276a      call dbg.quote\l0x0000276f      lea rsi, str.extra_argument__s                         ; 0xa1dd ; \"extra argument %s\"\l0x00002776      xor edi, edi\l0x00002778      mov edx, 5\l0x0000277d      mov rbp, rax\l0x00002780      call sym.imp.dcgettext\l0x00002785      mov rsi, rbp                                           ; int64_t arg2\l0x00002788      mov rdi, rax                                           ; int64_t arg1\l0x0000278b      xor eax, eax\l0x0000278d      call dbg.test_syntax_error\l"]
        "0x000026c0" -> "0x00002758" [color="#13a10e"];
        "0x000026c0" -> "0x00002736" [color="#c50f1f"];
        "0x00002736" -> "0x0000275f" [color="#13a10e"];
        "0x00002736" -> "0x0000274d" [color="#c50f1f"];
        "0x0000274d" -> "0x00002753" [color="#3a96dd"];
        "0x00002758" -> "0x00002753" [color="#3a96dd"];
}
