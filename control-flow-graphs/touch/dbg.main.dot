digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00003990" [URL="dbg.main/0x00003990", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x42f8\l2314: int dbg.main (int argc, char **argv);\l; var timespec now @ rbp-0x100\l; var timespec notnow @ rbp-0xf0\l; var timespec notnow1 @ rbp-0xe0\l; var stat st @ rbp-0xd0\l; var int64_t var_10h @ rsp+0x20\l; var uint32_t var_8h @ rsp+0x28\l; var tm*var_ch @ rsp+0x2c\l; var int64_t var_10h_2 @ rsp+0x30\l; var int64_t var_18h @ rsp+0x38\l; var int64_t var_20h @ rsp+0x40\l; var int64_t var_28h @ rsp+0x48\l; var uint32_t var_30h @ rsp+0x50\l; var uint32_t var_38h @ rsp+0x58\l; var int64_t var_40h @ rsp+0x60\l; var int64_t var_58h @ rsp+0x78\l; var int64_t var_88h @ rsp+0xa8\l; var int64_t var_90h @ rsp+0xb0\l; var int64_t var_98h @ rsp+0xb8\l; var int64_t var_a0h @ rsp+0xc0\l; var int64_t var_d8h @ rsp+0xf8\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x00003990      endbr64                                                ; int main(int argc,char ** argv);\l0x00003994      push r15\l0x00003996      lea r15, obj.time_masks                                ; 0x12980\l0x0000399d      push r14\l0x0000399f      lea r14, obj.longopts                                  ; 0x18120\l0x000039a6      push r13\l0x000039a8      lea r13, str.acd:fhmr:t:                               ; 0x12125 ; \"acd:fhmr:t:\"\l0x000039af      push r12\l0x000039b1      lea r12, [0x0001209b]                                  ; \"coreutils\"\l0x000039b8      push rbp\l0x000039b9      mov ebp, edi                                           ; argc\l0x000039bb      push rbx\l0x000039bc      mov rbx, rsi                                           ; argv\l0x000039bf      sub rsp, 0xe8\l0x000039c6      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x000039c9      mov rax, qword fs:[0x28]\l0x000039d2      mov qword [var_d8h], rax\l0x000039da      xor eax, eax\l0x000039dc      call dbg.set_program_name\l0x000039e1      lea rsi, [0x00012cc5]                                  ; const char *locale\l0x000039e8      mov edi, 6                                             ; int category\l0x000039ed      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x000039f2      lea rsi, str._usr_local_share_locale                   ; 0x120c4 ; \"/usr/local/share/locale\" ; char *dirname\l0x000039f9      mov rdi, r12                                           ; char *domainname\l0x000039fc      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x00003a01      mov rdi, r12                                           ; char *domainname\l0x00003a04      lea r12, [0x000128f0]\l0x00003a0b      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x00003a10      lea rdi, [dbg.close_stdout]                            ; 0x4c00 ; func function\l0x00003a17      call sym.atexit                                        ; int atexit(func function)\l0x00003a1c      mov byte [obj.use_ref], 0                              ; [0x19142:1]=1\l0x00003a23      mov dword [obj.change_times], 0                        ; [0x19144:4]=3\l0x00003a2d      mov byte [obj.no_create], 0                            ; [0x19143:1]=1\l0x00003a34      mov qword [rsp], 0\l0x00003a3c      mov byte [var_8h], 0\l0x00003a41      nop dword [rax]\l"]
	"0x00003a48" [URL="dbg.main/0x00003a48", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 102:                                                          ; from 0x00003a8b\l; XREFS: CODE 0x00003a8b  CODE 0x00003ac4  CODE 0x00003b0e  \l; XREFS: CODE 0x00003b2d  CODE 0x00003b3f  CODE 0x00003b4f  \l; XREFS: CODE 0x00003b63  CODE 0x00003b77  CODE 0x00003b87  \l0x00003a48      xor r8d, r8d\l0x00003a4b      mov rcx, r14\l0x00003a4e      mov rdx, r13\l0x00003a51      mov rsi, rbx\l0x00003a54      mov edi, ebp\l0x00003a56      call sym.imp.getopt_long\l0x00003a5b      cmp eax, 0xffffffff\l0x00003a5e      je 0x3bff\l"]
	"0x00003a64" [URL="dbg.main/0x00003a64", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003a64      cmp eax, 0x80\l0x00003a69      jg case.0x3a8b.98\l"]
	"0x00003a6f" [URL="dbg.main/0x00003a6f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003a6f      cmp eax, 0x60\l0x00003a72      jle 0x3b90\l"]
	"0x00003a78" [URL="dbg.main/0x00003a78", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003a78      sub eax, 0x61\l0x00003a7b      cmp eax, 0x1f\l0x00003a7e      ja case.0x3a8b.98\l"]
	"0x00003a84" [URL="dbg.main/0x00003a84", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003a84      movsxd rax, dword [r12 + rax*4]\l0x00003a88      add rax, r12\l;-- switch\l0x00003a8b      jmp rax                                                ; switch table (32 cases) at 0x128f0\l"]
	"0x00003a90" [URL="dbg.main/0x00003a90", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 128:                                                          ; from 0x00003a8b\l; CODE XREF from dbg.main @ 0x3a8b\l0x00003a90      mov r9, qword [obj.argmatch_die]                       ; [0x19018:8]=0x4820 dbg.__argmatch_die ; \" H\" ; int64_t arg6\l0x00003a97      mov rsi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x190c0:8]=0 ; int64_t arg2\l0x00003a9e      mov r8d, 4                                             ; int64_t arg5\l0x00003aa4      mov rcx, r15                                           ; int64_t arg4\l0x00003aa7      lea rdx, obj.time_args                                 ; 0x180e0 ; int64_t arg3\l0x00003aae      lea rdi, str.__time                                    ; 0x120dc ; \"--time\" ; int64_t arg1\l0x00003ab5      call dbg.__xargmatch_internal\l0x00003aba      mov eax, dword [r15 + rax*4]\l0x00003abe      or dword [obj.change_times], eax                       ; [0x19144:4]=3\l0x00003ac4      jmp case.0x3a8b.102\l"]
	"0x00003ad0" [URL="dbg.main/0x00003ad0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 116:                                                          ; from 0x00003a8b\l; CODE XREF from dbg.main @ 0x3a8b\l0x00003ad0      mov rsi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x190c0:8]=0 ; int64_t arg2\l0x00003ad7      mov edx, 6                                             ; int64_t arg3\l0x00003adc      lea rdi, obj.newtime                                   ; 0x19120 ; int64_t arg1\l0x00003ae3      call dbg.posixtime\l0x00003ae8      mov byte [var_8h], al\l0x00003aec      test al, al\l0x00003aee      je 0x41db\l"]
	"0x00003af4" [URL="dbg.main/0x00003af4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003af4      mov qword [0x00019128], 0                              ; [0x19128:8]=0\l0x00003aff      movdqa xmm0, xmmword [obj.newtime]\l0x00003b07      movaps xmmword [0x00019130], xmm0                      ; [0x19130:16]=-1\l0x00003b0e      jmp case.0x3a8b.102\l"]
	"0x00003b18" [URL="dbg.main/0x00003b18", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 114:                                                          ; from 0x00003a8b\l; CODE XREF from dbg.main @ 0x3a8b\l0x00003b18      mov rax, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x190c0:8]=0\l0x00003b1f      mov byte [obj.use_ref], 1                              ; [0x19142:1]=1\l0x00003b26      mov qword [obj.ref_file], rax                          ; [0x19100:8]=0\l0x00003b2d      jmp case.0x3a8b.102\l"]
	"0x00003b38" [URL="dbg.main/0x00003b38", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 109:                                                          ; from 0x00003a8b\l; CODE XREF from dbg.main @ 0x3a8b\l0x00003b38      or dword [obj.change_times], 2                         ; [0x19144:4]=3\l0x00003b3f      jmp case.0x3a8b.102\l"]
	"0x00003b48" [URL="dbg.main/0x00003b48", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 104:                                                          ; from 0x00003a8b\l; CODE XREF from dbg.main @ 0x3a8b\l0x00003b48      mov byte [obj.no_dereference], 1                       ; [0x19141:1]=1\l0x00003b4f      jmp case.0x3a8b.102\l"]
	"0x00003b58" [URL="dbg.main/0x00003b58", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 100:                                                          ; from 0x00003a8b\l; CODE XREF from dbg.main @ 0x3a8b\l0x00003b58      mov rax, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x190c0:8]=0\l0x00003b5f      mov qword [rsp], rax\l0x00003b63      jmp case.0x3a8b.102\l"]
	"0x00003b70" [URL="dbg.main/0x00003b70", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 99:                                                           ; from 0x00003a8b\l; CODE XREF from dbg.main @ 0x3a8b\l0x00003b70      mov byte [obj.no_create], 1                            ; [0x19143:1]=1\l0x00003b77      jmp case.0x3a8b.102\l"]
	"0x00003b80" [URL="dbg.main/0x00003b80", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 97:                                                           ; from 0x00003a8b\l; CODE XREF from dbg.main @ 0x3a8b\l0x00003b80      or dword [obj.change_times], 1                         ; [0x19144:4]=3\l0x00003b87      jmp case.0x3a8b.102\l"]
	"0x00003b90" [URL="dbg.main/0x00003b90", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3a72\l0x00003b90      cmp eax, 0xffffff7d                                    ; 4294967165\l0x00003b95      jne 0x3bed\l"]
	"0x00003b97" [URL="dbg.main/0x00003b97", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003b97      lea rax, str.Randy_Smith                               ; 0x120fd ; \"Randy Smith\"\l0x00003b9e      push 0\l0x00003ba0      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0x190a8:8]=0 ; int64_t arg1\l0x00003ba7      lea r9, str.Arnold_Robbins                             ; 0x120e3 ; \"Arnold Robbins\" ; int64_t arg_c0h\l0x00003bae      push rax\l0x00003baf      lea rax, str.David_MacKenzie                           ; 0x12109 ; \"David MacKenzie\"\l0x00003bb6      mov rcx, qword [obj.Version]                           ; [0x19010:8]=0x12994 \"9.0\" ; int64_t arg5\l0x00003bbd      lea r8, str.Paul_Rubin                                 ; 0x120f2 ; \"Paul Rubin\" ; int64_t arg6\l0x00003bc4      push rax\l0x00003bc5      lea rax, str.Jim_Kingdon                               ; 0x12119 ; \"Jim Kingdon\"\l0x00003bcc      lea rdx, str.GNU_coreutils                             ; 0x12097 ; \"GNU coreutils\" ; int64_t arg3\l0x00003bd3      push rax\l0x00003bd4      lea rsi, [global_program]                              ; 0x1201b ; \"touch\" ; int64_t arg2\l0x00003bdb      xor eax, eax\l0x00003bdd      call dbg.version_etc\l0x00003be2      add rsp, 0x20\l0x00003be6      xor edi, edi                                           ; int status\l0x00003be8      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x00003bed" [URL="dbg.main/0x00003bed", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3b95\l0x00003bed      cmp eax, 0xffffff7e                                    ; 4294967166\l0x00003bf2      jne case.0x3a8b.98\l"]
	"0x00003bf8" [URL="dbg.main/0x00003bf8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003bf8      xor edi, edi                                           ; int64_t arg1\l0x00003bfa      call dbg.usage\l"]
	"0x00003bff" [URL="dbg.main/0x00003bff", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3a5e\l0x00003bff      cmp dword [obj.change_times], 0                        ; [0x19144:4]=3\l0x00003c06      jne 0x3c12\l"]
	"0x00003c08" [URL="dbg.main/0x00003c08", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003c08      mov dword [obj.change_times], 3                        ; [0x19144:4]=3\l"]
	"0x00003c12" [URL="dbg.main/0x00003c12", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3c06\l0x00003c12      cmp byte [var_8h], 0\l0x00003c17      movzx eax, byte [obj.use_ref]                          ; [0x19142:1]=1\l0x00003c1e      je 0x3f40\l"]
	"0x00003c24" [URL="dbg.main/0x00003c24", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003c24      cmp qword [rsp], 0\l0x00003c29      jne 0x42c2\l"]
	"0x00003c2f" [URL="dbg.main/0x00003c2f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003c2f      test al, al\l0x00003c31      jne 0x42c2\l"]
	"0x00003c37" [URL="dbg.main/0x00003c37", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x00003f8a  CODE 0x00003f9c  CODE 0x00003fae  \l; XREFS: CODE 0x00003fdf  CODE 0x00003fef  CODE 0x00004029  \l; XREFS: CODE 0x0000409f  CODE 0x000040b5  CODE 0x000040ce  \l; XREFS: CODE 0x00004151  CODE 0x000041d6  \l0x00003c37      mov eax, dword [obj.optind]                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x190b0:4]=2\l0x00003c3d      cmp eax, ebp\l0x00003c3f      je 0x40d3\l"]
	"0x00003c45" [URL="dbg.main/0x00003c45", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003c45      mov r12d, 1\l0x00003c4b      jl 0x3d0d\l"]
	"0x00003c51" [URL="dbg.main/0x00003c51", fillcolor="white",color="#767676", fontname="Courier",label="0x00003c51      jmp 0x3ebb\l"]
	"0x00003c60" [URL="dbg.main/0x00003c60", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3d17\l0x00003c60      movzx r13d, byte [r14 + 1]\l0x00003c65      mov r15d, 1\l0x00003c6b      test r13d, r13d\l0x00003c6e      jne 0x3d1d\l"]
	"0x00003c74" [URL="dbg.main/0x00003c74", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3d3a, 0x3f08, 0x3f16\l0x00003c74      mov eax, dword [obj.change_times]                      ; [0x19144:4]=3\l0x00003c7a      cmp eax, 3                                             ; \"?\"\l0x00003c7d      je 0x3c9c\l"]
	"0x00003c7f" [URL="dbg.main/0x00003c7f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003c7f      cmp eax, 2                                             ; \"\\\"?\"\l0x00003c82      je 0x3eab\l"]
	"0x00003c88" [URL="dbg.main/0x00003c88", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003c88      sub eax, 1\l0x00003c8b      jne 0x42a3\l"]
	"0x00003c91" [URL="dbg.main/0x00003c91", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003c91      mov qword [0x00019138], 0x3ffffffe                     ; [0x19138:8]=0\l"]
	"0x00003c9c" [URL="dbg.main/0x00003c9c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3c7d, 0x3eb6\l0x00003c9c      movzx r8d, byte [obj.no_dereference]                   ; [0x19141:1]=1\l0x00003ca4      xor ecx, ecx\l0x00003ca6      lea rax, obj.newtime                                   ; 0x19120\l0x00003cad      cmp byte [obj.amtime_now], 0                           ; [0x19140:1]=1\l0x00003cb4      cmove rcx, rax\l0x00003cb8      shl r8d, 8\l0x00003cbc      cmp r15d, 1                                            ; \"\\\"\\\"?\"\l0x00003cc0      je 0x3d3f\l"]
	"0x00003cc2" [URL="dbg.main/0x00003cc2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003cc2      mov rdx, r14                                           ; int64_t arg3\l0x00003cc5      mov esi, 0xffffff9c                                    ; 4294967196 ; int64_t arg2\l0x00003cca      mov edi, r15d                                          ; int64_t arg1\l0x00003ccd      call dbg.fdutimensat\l0x00003cd2      test eax, eax\l0x00003cd4      jne 0x3ded\l"]
	"0x00003cda" [URL="dbg.main/0x00003cda", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003cda      test r15d, r15d\l0x00003cdd      jne 0x3cee\l"]
	"0x00003cdf" [URL="dbg.main/0x00003cdf", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003cdf      xor edi, edi                                           ; int fildes\l0x00003ce1      call sym.imp.close                                     ; int close(int fildes)\l0x00003ce6      test eax, eax\l0x00003ce8      jne 0x3e15\l"]
	"0x00003cee" [URL="dbg.main/0x00003cee", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3cdd, 0x3d52, 0x3d69, 0x3f22\l0x00003cee      mov eax, 1\l"]
	"0x00003cf3" [URL="dbg.main/0x00003cf3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3de8, 0x3e53, 0x3e65, 0x3ea6\l0x00003cf3      and r12d, eax\l0x00003cf6      mov eax, dword [obj.optind]                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x190b0:4]=2\l0x00003cfc      add eax, 1\l0x00003cff      mov dword [obj.optind], eax                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x190b0:4]=2\l0x00003d05      cmp eax, ebp\l0x00003d07      jge 0x3ebb\l"]
	"0x00003d0d" [URL="dbg.main/0x00003d0d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3c4b\l0x00003d0d      cdqe\l0x00003d0f      mov r14, qword [rbx + rax*8]\l0x00003d13      cmp byte [r14], 0x2d\l0x00003d17      je 0x3c60\l"]
	"0x00003d1d" [URL="dbg.main/0x00003d1d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3c6e\l0x00003d1d      cmp byte [obj.no_create], 0                            ; [0x19143:1]=1\l0x00003d24      jne 0x3d33\l"]
	"0x00003d26" [URL="dbg.main/0x00003d26", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003d26      cmp byte [obj.no_dereference], 0                       ; [0x19141:1]=1\l0x00003d2d      je 0x3eec\l"]
	"0x00003d33" [URL="dbg.main/0x00003d33", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3d24\l0x00003d33      or r15d, 0xffffffff                                    ; -1\l0x00003d37      xor r13d, r13d\l0x00003d3a      jmp 0x3c74\l"]
	"0x00003d3f" [URL="dbg.main/0x00003d3f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3cc0\l0x00003d3f      xor edx, edx                                           ; int64_t arg3\l0x00003d41      mov esi, 0xffffff9c                                    ; 4294967196 ; int64_t arg2\l0x00003d46      mov edi, 1                                             ; int64_t arg1\l0x00003d4b      call dbg.fdutimensat\l0x00003d50      test eax, eax\l0x00003d52      je 0x3cee\l"]
	"0x00003d54" [URL="dbg.main/0x00003d54", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003d54      call sym.imp.__errno_location\l0x00003d59      mov r8d, dword [rax]\l0x00003d5c      cmp r8d, 9                                             ; \"141\\''''\\xff\\xff\\xff\\x83\\xff\\xff\\xff\"\l0x00003d60      je 0x3f1b\l"]
	"0x00003d66" [URL="dbg.main/0x00003d66", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3df8, 0x3e0f\l0x00003d66      test r8d, r8d\l0x00003d69      je 0x3cee\l"]
	"0x00003d6b" [URL="dbg.main/0x00003d6b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003d6b      test r13d, r13d\l0x00003d6e      je 0x3e58\l"]
	"0x00003d74" [URL="dbg.main/0x00003d74", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003d74      cmp r13d, 0x15\l0x00003d78      je 0x3e58\l"]
	"0x00003d7e" [URL="dbg.main/0x00003d7e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3f35\l0x00003d7e      cmp r13d, 0x16\l0x00003d82      jne 0x3db1\l"]
	"0x00003d84" [URL="dbg.main/0x00003d84", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003d84      lea rsi, [var_40h]\l0x00003d89      mov rdi, r14\l0x00003d8c      mov dword [rsp], r8d\l0x00003d90      call sym.imp.stat\l0x00003d95      test eax, eax\l0x00003d97      jne 0x3db1\l"]
	"0x00003d99" [URL="dbg.main/0x00003d99", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003d99      mov eax, dword [var_58h]\l0x00003d9d      mov r8d, dword [rsp]\l0x00003da1      and eax, 0xf000\l0x00003da6      cmp eax, 0x4000\l0x00003dab      je 0x3e58\l"]
	"0x00003db1" [URL="dbg.main/0x00003db1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3d82, 0x3d97\l0x00003db1      mov rsi, r14                                           ; int64_t arg2\l0x00003db4      mov edi, 4                                             ; int64_t arg1\l0x00003db9      call sym.quotearg_style\l0x00003dbe      mov edx, 5\l0x00003dc3      lea rsi, str.cannot_touch__s                           ; 0x1218e ; \"cannot touch %s\"\l0x00003dca      xor edi, edi\l0x00003dcc      mov r14, rax\l0x00003dcf      call sym.imp.dcgettext\l0x00003dd4      mov rcx, r14\l0x00003dd7      mov esi, r13d                                          ; int errname\l0x00003dda      xor edi, edi                                           ; int status\l0x00003ddc      mov rdx, rax                                           ; char *format\l0x00003ddf      xor eax, eax\l0x00003de1      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00003de6      xor eax, eax\l0x00003de8      jmp 0x3cf3\l"]
	"0x00003ded" [URL="dbg.main/0x00003ded", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3cd4\l0x00003ded      call sym.imp.__errno_location\l0x00003df2      mov r8d, dword [rax]\l0x00003df5      test r15d, r15d\l0x00003df8      jne 0x3d66\l"]
	"0x00003dfe" [URL="dbg.main/0x00003dfe", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003dfe      xor edi, edi                                           ; int fildes\l0x00003e00      mov dword [rsp], r8d\l0x00003e04      call sym.imp.close                                     ; int close(int fildes)\l0x00003e09      mov r8d, dword [rsp]\l0x00003e0d      test eax, eax\l0x00003e0f      je 0x3d66\l"]
	"0x00003e15" [URL="dbg.main/0x00003e15", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3ce8\l0x00003e15      mov rsi, r14                                           ; int64_t arg2\l0x00003e18      mov edi, 4                                             ; int64_t arg1\l0x00003e1d      call sym.quotearg_style\l0x00003e22      mov edx, 5\l0x00003e27      lea rsi, str.failed_to_close__s                        ; 0x1217b ; \"failed to close %s\"\l0x00003e2e      xor edi, edi\l0x00003e30      mov r14, rax\l0x00003e33      call sym.imp.dcgettext\l0x00003e38      mov r13, rax\l0x00003e3b      call sym.imp.__errno_location\l0x00003e40      mov rcx, r14\l0x00003e43      mov rdx, r13                                           ; char *format\l0x00003e46      xor edi, edi                                           ; int status\l0x00003e48      mov esi, dword [rax]                                   ; int errname\l0x00003e4a      xor eax, eax\l0x00003e4c      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00003e51      xor eax, eax\l0x00003e53      jmp 0x3cf3\l"]
	"0x00003e58" [URL="dbg.main/0x00003e58", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3d6e, 0x3d78, 0x3dab\l0x00003e58      cmp r8d, 2                                             ; \"\\\"?\"\l0x00003e5c      sete al\l0x00003e5f      and al, byte [obj.no_create]                           ; [0x19143:1]=1\l0x00003e65      jne 0x3cf3\l"]
	"0x00003e6b" [URL="dbg.main/0x00003e6b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3f2b, 0x3f3b\l0x00003e6b      mov rsi, r14                                           ; int64_t arg2\l0x00003e6e      mov edi, 4                                             ; int64_t arg1\l0x00003e73      mov dword [rsp], r8d\l0x00003e77      call sym.quotearg_style\l0x00003e7c      mov edx, 5\l0x00003e81      lea rsi, str.setting_times_of__s                       ; 0x1219e ; \"setting times of %s\"\l0x00003e88      xor edi, edi\l0x00003e8a      mov r13, rax\l0x00003e8d      call sym.imp.dcgettext\l0x00003e92      mov esi, dword [rsp]                                   ; int errname\l0x00003e95      mov rcx, r13\l0x00003e98      xor edi, edi                                           ; int status\l0x00003e9a      mov rdx, rax                                           ; char *format\l0x00003e9d      xor eax, eax\l0x00003e9f      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00003ea4      xor eax, eax\l0x00003ea6      jmp 0x3cf3\l"]
	"0x00003eab" [URL="dbg.main/0x00003eab", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3c82\l0x00003eab      mov qword [0x00019128], 0x3ffffffe                     ; [0x19128:8]=0\l0x00003eb6      jmp 0x3c9c\l"]
	"0x00003ebb" [URL="dbg.main/0x00003ebb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3c51, 0x3d07\l0x00003ebb      xor r12d, 1\l0x00003ebf      movzx eax, r12b\l0x00003ec3      mov rdx, qword [var_d8h]\l0x00003ecb      sub rdx, qword fs:[0x28]\l0x00003ed4      jne 0x429e\l"]
	"0x00003eda" [URL="dbg.main/0x00003eda", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003eda      add rsp, 0xe8\l0x00003ee1      pop rbx\l0x00003ee2      pop rbp\l0x00003ee3      pop r12\l0x00003ee5      pop r13\l0x00003ee7      pop r14\l0x00003ee9      pop r15\l0x00003eeb      ret\l"]
	"0x00003eec" [URL="dbg.main/0x00003eec", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3d2d\l0x00003eec      mov ecx, 0x1b6                                         ; int64_t arg4\l0x00003ef1      mov edx, 0x941                                         ; int64_t arg3\l0x00003ef6      mov rsi, r14                                           ; int64_t arg2\l0x00003ef9      xor edi, edi                                           ; int64_t arg1\l0x00003efb      call dbg.fd_reopen\l0x00003f00      xor r13d, r13d\l0x00003f03      mov r15d, eax\l0x00003f06      test eax, eax\l0x00003f08      jns 0x3c74\l"]
	"0x00003f0e" [URL="dbg.main/0x00003f0e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003f0e      call sym.imp.__errno_location\l0x00003f13      mov r13d, dword [rax]\l0x00003f16      jmp 0x3c74\l"]
	"0x00003f1b" [URL="dbg.main/0x00003f1b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3d60\l0x00003f1b      cmp byte [obj.no_create], 0                            ; [0x19143:1]=1\l0x00003f22      jne 0x3cee\l"]
	"0x00003f28" [URL="dbg.main/0x00003f28", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003f28      test r13d, r13d\l0x00003f2b      je 0x3e6b\l"]
	"0x00003f31" [URL="dbg.main/0x00003f31", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003f31      cmp r13d, 0x15\l0x00003f35      jne 0x3d7e\l"]
	"0x00003f3b" [URL="dbg.main/0x00003f3b", fillcolor="white",color="#767676", fontname="Courier",label="0x00003f3b      jmp 0x3e6b\l"]
	"0x00003f40" [URL="dbg.main/0x00003f40", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3c1e\l0x00003f40      test al, al\l0x00003f42      jne 0x402e\l"]
	"0x00003f48" [URL="dbg.main/0x00003f48", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003f48      mov r15, qword [rsp]\l0x00003f4c      test r15, r15\l0x00003f4f      je 0x3ff5\l"]
	"0x00003f55" [URL="dbg.main/0x00003f55", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003f55      lea r12, [var_10h_2]\l0x00003f5a      mov rdi, r12                                           ; int64_t arg1\l0x00003f5d      call sym.gettime\l0x00003f62      mov rdx, r12\l0x00003f65      mov rsi, r15\l0x00003f68      lea rdi, obj.newtime                                   ; 0x19120 ; int64_t arg2\l0x00003f6f      call sym.get_reldate\l0x00003f74      movdqa xmm1, xmmword [obj.newtime]\l0x00003f7c      cmp dword [obj.change_times], 3                        ; [0x19144:4]=3\l0x00003f83      movaps xmmword [0x00019130], xmm1                      ; [0x19130:16]=-1\l0x00003f8a      jne 0x3c37\l"]
	"0x00003f90" [URL="dbg.main/0x00003f90", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003f90      mov rax, qword [var_10h_2]\l0x00003f95      cmp qword [obj.newtime], rax                           ; [0x19120:8]=0\l0x00003f9c      jne 0x3c37\l"]
	"0x00003fa2" [URL="dbg.main/0x00003fa2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003fa2      mov rdx, qword [var_18h]\l0x00003fa7      cmp qword [0x00019128], rdx                            ; [0x19128:8]=0\l0x00003fae      jne 0x3c37\l"]
	"0x00003fb4" [URL="dbg.main/0x00003fb4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003fb4      mov rsi, qword [rsp]\l0x00003fb8      xor rax, 1\l0x00003fbc      mov qword [var_28h], rdx\l0x00003fc1      lea rdi, [var_30h]                                     ; int64_t arg2\l0x00003fc6      lea rdx, [var_20h]\l0x00003fcb      mov qword [var_20h], rax\l0x00003fd0      call sym.get_reldate\l0x00003fd5      mov rax, qword [var_20h]\l0x00003fda      cmp qword [var_30h], rax\l0x00003fdf      jne 0x3c37\l"]
	"0x00003fe5" [URL="dbg.main/0x00003fe5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003fe5      mov rax, qword [var_28h]\l0x00003fea      cmp qword [var_38h], rax\l0x00003fef      jne 0x3c37\l"]
	"0x00003ff5" [URL="dbg.main/0x00003ff5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3f4f\l0x00003ff5      mov eax, ebp\l0x00003ff7      sub eax, dword [obj.optind]                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x190b0:4]=2\l0x00003ffd      sub eax, 1\l; DATA XREF from dbg.main @ 0x3da6\l0x00004000      jg 0x416d\l"]
	"0x00004006" [URL="dbg.main/0x00004006", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x4177, 0x419e\l0x00004006      cmp dword [obj.change_times], 3                        ; [0x19144:4]=3\l0x0000400d      je 0x414a\l"]
	"0x00004013" [URL="dbg.main/0x00004013", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004013      mov qword [0x00019128], 0x3fffffff                     ; [0x19128:8]=0\l0x0000401e      mov qword [0x00019138], 0x3fffffff                     ; [0x19138:8]=0\l0x00004029      jmp 0x3c37\l"]
	"0x0000402e" [URL="dbg.main/0x0000402e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3f42\l0x0000402e      mov r12, qword [obj.ref_file]                          ; [0x19100:8]=0\l0x00004035      cmp byte [obj.no_dereference], 0                       ; [0x19141:1]=1\l0x0000403c      lea rsi, [var_40h]\l0x00004041      mov rdi, r12\l0x00004044      jne 0x40fe\l"]
	"0x0000404a" [URL="dbg.main/0x0000404a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000404a      call sym.imp.stat\l0x0000404f      test eax, eax\l0x00004051      jne 0x410b\l"]
	"0x00004057" [URL="dbg.main/0x00004057", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4105\l0x00004057      mov rax, qword [var_88h]\l0x0000405f      cmp qword [rsp], 0\l0x00004064      lea rdi, obj.newtime                                   ; 0x19120\l0x0000406b      mov qword [obj.newtime], rax                           ; [0x19120:8]=0\l0x00004072      mov rax, qword [var_90h]\l0x0000407a      mov qword [0x00019128], rax                            ; [0x19128:8]=0\l0x00004081      mov rax, qword [var_98h]\l0x00004089      mov qword [0x00019130], rax                            ; [0x19130:8]=0\l0x00004090      mov rax, qword [var_a0h]\l0x00004098      mov qword [0x00019138], rax                            ; [0x19138:8]=0\l0x0000409f      je 0x3c37\l"]
	"0x000040a5" [URL="dbg.main/0x000040a5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000040a5      mov eax, dword [obj.change_times]                      ; [0x19144:4]=3\l0x000040ab      test al, 1                                             ; \"\\\"\\\"?\"\l0x000040ad      jne 0x4156\l"]
	"0x000040b3" [URL="dbg.main/0x000040b3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4168\l0x000040b3      test al, 2                                             ; \"\\\"?\"\l0x000040b5      je 0x3c37\l"]
	"0x000040bb" [URL="dbg.main/0x000040bb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000040bb      lea rdi, [0x00019130]                                  ; int64_t arg2\l0x000040c2      mov rsi, qword [rsp]\l0x000040c6      mov rdx, rdi\l0x000040c9      call sym.get_reldate\l0x000040ce      jmp 0x3c37\l"]
	"0x000040d3" [URL="dbg.main/0x000040d3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3c3f\l0x000040d3      mov edx, 5\l0x000040d8      lea rsi, str.missing_file_operand                      ; 0x12141 ; \"missing file operand\"\l"]
	"0x000040df" [URL="dbg.main/0x000040df", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x42ce\l0x000040df      xor edi, edi\l0x000040e1      call sym.imp.dcgettext\l0x000040e6      xor esi, esi                                           ; int errname\l0x000040e8      xor edi, edi                                           ; int status\l0x000040ea      mov rdx, rax                                           ; char *format\l0x000040ed      xor eax, eax\l0x000040ef      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x000040f4" [URL="dbg.main/0x000040f4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 98:                                                           ; from 0x00003a8b\l;-- case 103:                                                          ; from 0x00003a8b\l;-- case 106...108:                                                    ; from 0x00003a8b\l;-- case 110:                                                          ; from 0x00003a8b\l;-- case 111...113:                                                    ; from 0x00003a8b\l;-- case 115:                                                          ; from 0x00003a8b\l;-- default:                                                           ; from 0x3a8b\l; CODE XREFS from dbg.main @ 0x3a69, 0x3a7e, 0x3a8b, 0x3bf2\l0x000040f4      mov edi, 1                                             ; int64_t arg1\l0x000040f9      call dbg.usage\l"]
	"0x000040fe" [URL="dbg.main/0x000040fe", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4044\l0x000040fe      call sym.imp.lstat                                     ; void lstat(const char *path, void *buf)\l0x00004103      test eax, eax\l0x00004105      je 0x4057\l"]
	"0x0000410b" [URL="dbg.main/0x0000410b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4051\l0x0000410b      mov rsi, r12                                           ; int64_t arg2\l0x0000410e      mov edi, 4                                             ; int64_t arg1\l0x00004113      call sym.quotearg_style\l0x00004118      mov edx, 5\l0x0000411d      lea rsi, str.failed_to_get_attributes_of__s            ; 0x12880 ; \"failed to get attributes of %s\"\l0x00004124      xor edi, edi\l0x00004126      mov r13, rax\l0x00004129      call sym.imp.dcgettext\l; DATA XREF from dbg.printf_parse @ 0x10b3b\l0x0000412e      mov r12, rax\l0x00004131      call sym.imp.__errno_location\l0x00004136      mov rcx, r13\l0x00004139      mov rdx, r12                                           ; char *format\l0x0000413c      mov edi, 1                                             ; int status\l0x00004141      mov esi, dword [rax]                                   ; int errname\l0x00004143      xor eax, eax\l0x00004145      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x0000414a" [URL="dbg.main/0x0000414a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x400d\l0x0000414a      mov byte [obj.amtime_now], 1                           ; [0x19140:1]=1\l0x00004151      jmp 0x3c37\l"]
	"0x00004156" [URL="dbg.main/0x00004156", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x40ad\l0x00004156      mov rsi, qword [rsp]\l0x0000415a      mov rdx, rdi\l0x0000415d      call sym.get_reldate\l0x00004162      mov eax, dword [obj.change_times]                      ; [0x19144:4]=3\l0x00004168      jmp 0x40b3\l"]
	"0x0000416d" [URL="dbg.main/0x0000416d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4000\l0x0000416d      call dbg.posix2_version\l0x00004172      cmp eax, 0x30daf\l0x00004177      jg 0x4006\l"]
	"0x0000417d" [URL="dbg.main/0x0000417d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000417d      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x190b0:4]=2\l0x00004184      lea r12, obj.newtime                                   ; 0x19120\l0x0000418b      mov edx, 9                                             ; int64_t arg3\l0x00004190      mov rdi, r12                                           ; int64_t arg1\l0x00004193      mov rsi, qword [rbx + rax*8]                           ; int64_t arg2\l0x00004197      call dbg.posixtime\l0x0000419c      test al, al\l0x0000419e      je 0x4006\l"]
	"0x000041a4" [URL="dbg.main/0x000041a4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000041a4      mov qword [0x00019128], 0                              ; [0x19128:8]=0\l0x000041af      movdqa xmm2, xmmword [obj.newtime]\l0x000041b7      lea rdi, str.POSIXLY_CORRECT                           ; 0x12131 ; \"POSIXLY_CORRECT\" ; const char *name\l0x000041be      movaps xmmword [0x00019130], xmm2                      ; [0x19130:16]=-1\l0x000041c5      call sym.imp.getenv                                    ; char *getenv(const char *name)\l0x000041ca      test rax, rax\l0x000041cd      je 0x4211\l"]
	"0x000041cf" [URL="dbg.main/0x000041cf", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x421c, 0x4299\l0x000041cf      add dword [obj.optind], 1                              ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x190b0:4]=2\l0x000041d6      jmp 0x3c37\l"]
	"0x000041db" [URL="dbg.main/0x000041db", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3aee\l0x000041db      mov rdi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x190c0:8]=0 ; int64_t arg1\l0x000041e2      call dbg.quote\l0x000041e7      mov edx, 5\l0x000041ec      lea rsi, str.invalid_date_format__s                    ; 0x12004 ; \"invalid date format %s\"\l0x000041f3      xor edi, edi\l0x000041f5      mov r12, rax\l0x000041f8      call sym.imp.dcgettext\l0x000041fd      mov rcx, r12\l0x00004200      xor esi, esi                                           ; int errname\l0x00004202      mov edi, 1                                             ; int status\l0x00004207      mov rdx, rax                                           ; char *format\l0x0000420a      xor eax, eax\l0x0000420c      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00004211" [URL="dbg.main/0x00004211", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x41cd\l0x00004211      mov rdi, r12                                           ; const time_t *timer\l0x00004214      call sym.imp.localtime                                 ; tm*localtime(const time_t *timer)\l0x00004219      test rax, rax\l0x0000421c      je 0x41cf\l"]
	"0x0000421e" [URL="dbg.main/0x0000421e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000421e      mov edx, dword [rax + 0x10]\l0x00004221      mov r9d, dword [rax]\l0x00004224      lea rsi, str.warning:_touch__s_is_obsolete__use_touch__t__04ld_02d_02d_02d_02d._02d ; 0x128a0 ; \"warning: 'touch %s' is obsolete; use 'touch -t %04ld%02d%02d%02d%02d.%02d'\"\l0x0000422b      xor edi, edi\l0x0000422d      mov r8d, dword [rax + 4]\l0x00004231      mov ecx, dword [rax + 8]\l0x00004234      mov r15d, dword [rax + 0xc]\l0x00004238      movsxd r12, dword [rax + 0x14]\l0x0000423c      lea r13d, [rdx + 1]\l0x00004240      mov edx, 5\l0x00004245      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x190b0:4]=2\l0x0000424c      mov dword [var_ch], r9d\l0x00004251      mov dword [var_8h], r8d\l0x00004256      add r12, 0x76c\l0x0000425d      mov dword [rsp], ecx\l0x00004260      mov r14, qword [rbx + rax*8]\l0x00004264      call sym.imp.dcgettext\l0x00004269      mov r9d, dword [var_ch]\l0x0000426e      xor esi, esi                                           ; int errname\l0x00004270      xor edi, edi                                           ; int status\l0x00004272      mov rdx, rax                                           ; char *format\l0x00004275      xor eax, eax\l0x00004277      push r9\l0x00004279      mov r8d, dword [var_8h]\l0x0000427e      mov r9d, r13d\l0x00004281      push r8\l0x00004283      mov ecx, dword [var_10h]\l0x00004287      mov r8, r12\l0x0000428a      push rcx\l0x0000428b      mov rcx, r14\l0x0000428e      push r15\l0x00004290      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00004295      add rsp, 0x20\l0x00004299      jmp 0x41cf\l"]
	"0x0000429e" [URL="dbg.main/0x0000429e", fillcolor="white",color="#767676", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3ed4\l0x0000429e      call sym.imp.__stack_chk_fail                          ; void __stack_chk_fail(void)\l"]
	"0x000042a3" [URL="dbg.main/0x000042a3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3c8b\l0x000042a3      lea rcx, obj.__PRETTY_FUNCTION__.0                     ; 0x12970 ; \"touch\" ; const char *function\l0x000042aa      mov edx, 0x93                                          ; unsigned int line\l0x000042af      lea rsi, str.src_touch.c                               ; 0x12156 ; \"src/touch.c\" ; const char *file\l0x000042b6      lea rdi, str.change_times__CH_ATIME                    ; 0x12162 ; \"change_times == CH_ATIME\" ; const char *assertion\l0x000042bd      call sym.imp.__assert_fail                             ; void __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)\l"]
	"0x000042c2" [URL="dbg.main/0x000042c2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3c29, 0x3c31\l0x000042c2      mov edx, 5\l0x000042c7      lea rsi, str.cannot_specify_times_from_more_than_one_source ; 0x12850 ; \"cannot specify times from more than one source\"\l0x000042ce      jmp 0x40df\l"]
        "0x00003990" -> "0x00003a48" [color="#3a96dd"];
        "0x00003a48" -> "0x00003bff" [color="#13a10e"];
        "0x00003a48" -> "0x00003a64" [color="#c50f1f"];
        "0x00003a64" -> "0x000040f4" [color="#13a10e"];
        "0x00003a64" -> "0x00003a6f" [color="#c50f1f"];
        "0x00003a6f" -> "0x00003b90" [color="#13a10e"];
        "0x00003a6f" -> "0x00003a78" [color="#c50f1f"];
        "0x00003a78" -> "0x000040f4" [color="#13a10e"];
        "0x00003a78" -> "0x00003a84" [color="#c50f1f"];
        "0x00003a84" -> "0x00003b80" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x00003b70" [color="#3a96dd"];
        "0x00003a84" -> "0x00003b58" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x00003a48" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x00003b48" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x00003b38" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x00003b18" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x00003ad0" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x000040f4" [color="#3a96dd"];
        "0x00003a84" -> "0x00003a90" [color="#3a96dd"];
        "0x00003a90" -> "0x00003a48" [color="#3a96dd"];
        "0x00003ad0" -> "0x000041db" [color="#13a10e"];
        "0x00003ad0" -> "0x00003af4" [color="#c50f1f"];
        "0x00003af4" -> "0x00003a48" [color="#3a96dd"];
        "0x00003b18" -> "0x00003a48" [color="#3a96dd"];
        "0x00003b38" -> "0x00003a48" [color="#3a96dd"];
        "0x00003b48" -> "0x00003a48" [color="#3a96dd"];
        "0x00003b58" -> "0x00003a48" [color="#3a96dd"];
        "0x00003b70" -> "0x00003a48" [color="#3a96dd"];
        "0x00003b80" -> "0x00003a48" [color="#3a96dd"];
        "0x00003b90" -> "0x00003bed" [color="#13a10e"];
        "0x00003b90" -> "0x00003b97" [color="#c50f1f"];
        "0x00003bed" -> "0x000040f4" [color="#13a10e"];
        "0x00003bed" -> "0x00003bf8" [color="#c50f1f"];
        "0x00003bf8" -> "0x00003bff" [color="#3a96dd"];
        "0x00003bff" -> "0x00003c12" [color="#13a10e"];
        "0x00003bff" -> "0x00003c08" [color="#c50f1f"];
        "0x00003c08" -> "0x00003c12" [color="#3a96dd"];
        "0x00003c12" -> "0x00003f40" [color="#13a10e"];
        "0x00003c12" -> "0x00003c24" [color="#c50f1f"];
        "0x00003c24" -> "0x000042c2" [color="#13a10e"];
        "0x00003c24" -> "0x00003c2f" [color="#c50f1f"];
        "0x00003c2f" -> "0x000042c2" [color="#13a10e"];
        "0x00003c2f" -> "0x00003c37" [color="#c50f1f"];
        "0x00003c37" -> "0x000040d3" [color="#13a10e"];
        "0x00003c37" -> "0x00003c45" [color="#c50f1f"];
        "0x00003c45" -> "0x00003d0d" [color="#13a10e"];
        "0x00003c45" -> "0x00003c51" [color="#c50f1f"];
        "0x00003c51" -> "0x00003ebb" [color="#3a96dd"];
        "0x00003c60" -> "0x00003d1d" [color="#13a10e"];
        "0x00003c60" -> "0x00003c74" [color="#c50f1f"];
        "0x00003c74" -> "0x00003c9c" [color="#13a10e"];
        "0x00003c74" -> "0x00003c7f" [color="#c50f1f"];
        "0x00003c7f" -> "0x00003eab" [color="#13a10e"];
        "0x00003c7f" -> "0x00003c88" [color="#c50f1f"];
        "0x00003c88" -> "0x000042a3" [color="#13a10e"];
        "0x00003c88" -> "0x00003c91" [color="#c50f1f"];
        "0x00003c91" -> "0x00003c9c" [color="#3a96dd"];
        "0x00003c9c" -> "0x00003d3f" [color="#13a10e"];
        "0x00003c9c" -> "0x00003cc2" [color="#c50f1f"];
        "0x00003cc2" -> "0x00003ded" [color="#13a10e"];
        "0x00003cc2" -> "0x00003cda" [color="#c50f1f"];
        "0x00003cda" -> "0x00003cee" [color="#13a10e"];
        "0x00003cda" -> "0x00003cdf" [color="#c50f1f"];
        "0x00003cdf" -> "0x00003e15" [color="#13a10e"];
        "0x00003cdf" -> "0x00003cee" [color="#c50f1f"];
        "0x00003cee" -> "0x00003cf3" [color="#3a96dd"];
        "0x00003cf3" -> "0x00003ebb" [color="#13a10e"];
        "0x00003cf3" -> "0x00003d0d" [color="#c50f1f"];
        "0x00003d0d" -> "0x00003c60" [color="#13a10e"];
        "0x00003d0d" -> "0x00003d1d" [color="#c50f1f"];
        "0x00003d1d" -> "0x00003d33" [color="#13a10e"];
        "0x00003d1d" -> "0x00003d26" [color="#c50f1f"];
        "0x00003d26" -> "0x00003eec" [color="#13a10e"];
        "0x00003d26" -> "0x00003d33" [color="#c50f1f"];
        "0x00003d33" -> "0x00003c74" [color="#3a96dd"];
        "0x00003d3f" -> "0x00003cee" [color="#13a10e"];
        "0x00003d3f" -> "0x00003d54" [color="#c50f1f"];
        "0x00003d54" -> "0x00003f1b" [color="#13a10e"];
        "0x00003d54" -> "0x00003d66" [color="#c50f1f"];
        "0x00003d66" -> "0x00003cee" [color="#13a10e"];
        "0x00003d66" -> "0x00003d6b" [color="#c50f1f"];
        "0x00003d6b" -> "0x00003e58" [color="#13a10e"];
        "0x00003d6b" -> "0x00003d74" [color="#c50f1f"];
        "0x00003d74" -> "0x00003e58" [color="#13a10e"];
        "0x00003d74" -> "0x00003d7e" [color="#c50f1f"];
        "0x00003d7e" -> "0x00003db1" [color="#13a10e"];
        "0x00003d7e" -> "0x00003d84" [color="#c50f1f"];
        "0x00003d84" -> "0x00003db1" [color="#13a10e"];
        "0x00003d84" -> "0x00003d99" [color="#c50f1f"];
        "0x00003d99" -> "0x00003e58" [color="#13a10e"];
        "0x00003d99" -> "0x00003db1" [color="#c50f1f"];
        "0x00003db1" -> "0x00003cf3" [color="#3a96dd"];
        "0x00003ded" -> "0x00003d66" [color="#13a10e"];
        "0x00003ded" -> "0x00003dfe" [color="#c50f1f"];
        "0x00003dfe" -> "0x00003d66" [color="#13a10e"];
        "0x00003dfe" -> "0x00003e15" [color="#c50f1f"];
        "0x00003e15" -> "0x00003cf3" [color="#3a96dd"];
        "0x00003e58" -> "0x00003cf3" [color="#13a10e"];
        "0x00003e58" -> "0x00003e6b" [color="#c50f1f"];
        "0x00003e6b" -> "0x00003cf3" [color="#3a96dd"];
        "0x00003eab" -> "0x00003c9c" [color="#3a96dd"];
        "0x00003ebb" -> "0x0000429e" [color="#13a10e"];
        "0x00003ebb" -> "0x00003eda" [color="#c50f1f"];
        "0x00003eec" -> "0x00003c74" [color="#13a10e"];
        "0x00003eec" -> "0x00003f0e" [color="#c50f1f"];
        "0x00003f0e" -> "0x00003c74" [color="#3a96dd"];
        "0x00003f1b" -> "0x00003cee" [color="#13a10e"];
        "0x00003f1b" -> "0x00003f28" [color="#c50f1f"];
        "0x00003f28" -> "0x00003e6b" [color="#13a10e"];
        "0x00003f28" -> "0x00003f31" [color="#c50f1f"];
        "0x00003f31" -> "0x00003d7e" [color="#13a10e"];
        "0x00003f31" -> "0x00003f3b" [color="#c50f1f"];
        "0x00003f3b" -> "0x00003e6b" [color="#3a96dd"];
        "0x00003f40" -> "0x0000402e" [color="#13a10e"];
        "0x00003f40" -> "0x00003f48" [color="#c50f1f"];
        "0x00003f48" -> "0x00003ff5" [color="#13a10e"];
        "0x00003f48" -> "0x00003f55" [color="#c50f1f"];
        "0x00003f55" -> "0x00003c37" [color="#13a10e"];
        "0x00003f55" -> "0x00003f90" [color="#c50f1f"];
        "0x00003f90" -> "0x00003c37" [color="#13a10e"];
        "0x00003f90" -> "0x00003fa2" [color="#c50f1f"];
        "0x00003fa2" -> "0x00003c37" [color="#13a10e"];
        "0x00003fa2" -> "0x00003fb4" [color="#c50f1f"];
        "0x00003fb4" -> "0x00003c37" [color="#13a10e"];
        "0x00003fb4" -> "0x00003fe5" [color="#c50f1f"];
        "0x00003fe5" -> "0x00003c37" [color="#13a10e"];
        "0x00003fe5" -> "0x00003ff5" [color="#c50f1f"];
        "0x00003ff5" -> "0x0000416d" [color="#13a10e"];
        "0x00003ff5" -> "0x00004006" [color="#c50f1f"];
        "0x00004006" -> "0x0000414a" [color="#13a10e"];
        "0x00004006" -> "0x00004013" [color="#c50f1f"];
        "0x00004013" -> "0x00003c37" [color="#3a96dd"];
        "0x0000402e" -> "0x000040fe" [color="#13a10e"];
        "0x0000402e" -> "0x0000404a" [color="#c50f1f"];
        "0x0000404a" -> "0x0000410b" [color="#13a10e"];
        "0x0000404a" -> "0x00004057" [color="#c50f1f"];
        "0x00004057" -> "0x00003c37" [color="#13a10e"];
        "0x00004057" -> "0x000040a5" [color="#c50f1f"];
        "0x000040a5" -> "0x00004156" [color="#13a10e"];
        "0x000040a5" -> "0x000040b3" [color="#c50f1f"];
        "0x000040b3" -> "0x00003c37" [color="#13a10e"];
        "0x000040b3" -> "0x000040bb" [color="#c50f1f"];
        "0x000040bb" -> "0x00003c37" [color="#3a96dd"];
        "0x000040d3" -> "0x000040df" [color="#3a96dd"];
        "0x000040df" -> "0x000040f4" [color="#3a96dd"];
        "0x000040f4" -> "0x000040fe" [color="#3a96dd"];
        "0x000040fe" -> "0x00004057" [color="#13a10e"];
        "0x000040fe" -> "0x0000410b" [color="#c50f1f"];
        "0x0000410b" -> "0x0000414a" [color="#3a96dd"];
        "0x0000414a" -> "0x00003c37" [color="#3a96dd"];
        "0x00004156" -> "0x000040b3" [color="#3a96dd"];
        "0x0000416d" -> "0x00004006" [color="#13a10e"];
        "0x0000416d" -> "0x0000417d" [color="#c50f1f"];
        "0x0000417d" -> "0x00004006" [color="#13a10e"];
        "0x0000417d" -> "0x000041a4" [color="#c50f1f"];
        "0x000041a4" -> "0x00004211" [color="#13a10e"];
        "0x000041a4" -> "0x000041cf" [color="#c50f1f"];
        "0x000041cf" -> "0x00003c37" [color="#3a96dd"];
        "0x000041db" -> "0x00004211" [color="#3a96dd"];
        "0x00004211" -> "0x000041cf" [color="#13a10e"];
        "0x00004211" -> "0x0000421e" [color="#c50f1f"];
        "0x0000421e" -> "0x000041cf" [color="#3a96dd"];
        "0x000042c2" -> "0x000040df" [color="#3a96dd"];
}
