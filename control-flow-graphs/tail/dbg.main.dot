digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00002a10" [URL="dbg.main/0x00002a10", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x5408\l10082: int dbg.main (int argc, char **argv);\l; var uintmax_t n_units @ rbp-0x1d0\l; var File_spec *prev_fspec @ rbp-0x1c8\l; var uintmax_t read_pos @ rbp-0x1c0\l; var stat out_stat @ rbp-0x160\l; var stat stats @ rbp-0xd0\l; var signed int errname @ rsp+0x28\l; var char **size @ rsp+0x30\l; var char **s1 @ rsp+0x38\l; var char **var_20h @ rsp+0x40\l; var void **var_28h @ rsp+0x48\l; var void **var_30h @ rsp+0x50\l; var uint32_t var_3ch @ rsp+0x5c\l; var void *var_40h @ rsp+0x60\l; var signed int64_t var_48h @ rsp+0x68\l; var uint32_t var_50h @ rsp+0x70\l; var int64_t var_58h @ rsp+0x78\l; var int64_t var_60h @ rsp+0x80\l; var void *var_68h @ rsp+0x88\l; var uint32_t var_70h @ rsp+0x90\l; var int64_t var_78h @ rsp+0x98\l; var int64_t var_80h @ rsp+0xa0\l; var uint32_t var_8bh @ rsp+0xab\l; var int64_t var_8ch @ rsp+0xac\l; var uint32_t var_90h @ rsp+0xb0\l; var int64_t var_98h @ rsp+0xb8\l; var char **var_a0h @ rsp+0xc0\l; var int64_t var_a4h @ rsp+0xc4\l; var int64_t var_a6h @ rsp+0xc6\l; var int64_t var_e4h @ rsp+0x104\l; var void *var_100h @ rsp+0x120\l; var int64_t var_118h @ rsp+0x138\l; var void *buf @ rsp+0x1b0\l; var int64_t var_194h @ rsp+0x1b4\l; var int64_t var_198h @ rsp+0x1b8\l; var uint32_t var_19eh @ rsp+0x1be\l; var int64_t var_1a8h @ rsp+0x1c8\l; var signed int64_t var_1c0h @ rsp+0x1e0\l; var int64_t var_1c8h @ rsp+0x1e8\l; var uint32_t var_1e8h @ rsp+0x208\l; var uint32_t var_1f0h @ rsp+0x210\l; var int64_t var_228h @ rsp+0x248\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x00002a10      endbr64                                                ; int main(int argc,char ** argv);\l0x00002a14      push r15\l0x00002a16      lea r15, [0x0000ea41]\l0x00002a1d      push r14\l0x00002a1f      push r13\l0x00002a21      push r12\l0x00002a23      lea r12, [0x0000e0b0]                                  ; \"coreutils\"\l0x00002a2a      push rbp\l0x00002a2b      mov rbp, rsi                                           ; argv\l0x00002a2e      push rbx\l0x00002a2f      mov ebx, edi                                           ; argc\l0x00002a31      sub rsp, 0x238\l0x00002a38      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x00002a3b      mov rax, qword fs:[0x28]\l0x00002a44      mov qword [var_228h], rax\l0x00002a4c      xor eax, eax\l0x00002a4e      mov qword [var_90h], 0xa\l0x00002a5a      call dbg.set_program_name\l0x00002a5f      mov rsi, r15                                           ; const char *locale\l0x00002a62      mov edi, 6                                             ; int category\l0x00002a67      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x00002a6c      lea rsi, str._usr_local_share_locale                   ; 0xe0db ; \"/usr/local/share/locale\" ; char *dirname\l0x00002a73      mov rdi, r12                                           ; char *domainname\l0x00002a76      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x00002a7b      mov rdi, r12                                           ; char *domainname\l0x00002a7e      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x00002a83      lea rdi, [dbg.close_stdout]                            ; 0x7930 ; func function\l0x00002a8a      call sym.atexit                                        ; int atexit(func function)\l0x00002a8f      mov byte [obj.have_read_stdin], 0                      ; [0x1310e:1]=1\l0x00002a96      mov byte [obj.count_lines], 1                          ; [0x13119:1]=1\l0x00002a9d      mov byte [obj.print_headers], 0                        ; [0x13115:1]=1\l0x00002aa4      mov byte [obj.from_start], 0                           ; [0x13116:1]=1\l0x00002aab      mov byte [obj.forever], 0                              ; [0x13118:1]=1\l0x00002ab2      mov byte [obj.line_end], 0xa                           ; [0x13114:1]=0\l0x00002ab9      cmp ebx, 2\l0x00002abc      je 0x2ae0\l"]
	"0x00002abe" [URL="dbg.main/0x00002abe", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002abe      cmp ebx, 3\l0x00002ac1      je 0x2f1d\l"]
	"0x00002ac7" [URL="dbg.main/0x00002ac7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002ac7      cmp ebx, 4\l0x00002aca      jne 0x2b02\l"]
	"0x00002acc" [URL="dbg.main/0x00002acc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002acc      mov rdi, qword [size]\l"]
	"0x00002ad0" [URL="dbg.main/0x00002ad0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2f2e\l0x00002ad0      lea rsi, [0x0000e0f3]                                  ; \"--\" ; const char *s2\l0x00002ad7      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x00002adc      test eax, eax\l0x00002ade      jne 0x2b02\l"]
	"0x00002ae0" [URL="dbg.main/0x00002ae0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2abc, 0x2f24, 0x2f34\l0x00002ae0      call dbg.posix2_version\l0x00002ae5      mov rdx, qword [rbp + 8]\l0x00002ae9      movzx ecx, byte [rdx]\l0x00002aec      lea rdi, [rdx + 1]\l0x00002af0      cmp cl, 0x2b\l0x00002af3      je 0x2f02\l"]
	"0x00002af9" [URL="dbg.main/0x00002af9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002af9      cmp cl, 0x2d\l0x00002afc      je 0x2e28\l"]
	"0x00002b02" [URL="dbg.main/0x00002b02", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2aca, 0x2ade, 0x2e3d, 0x2eb0, 0x2f18\l0x00002b02      xor eax, eax\l"]
	"0x00002b04" [URL="dbg.main/0x00002b04", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2efd\l0x00002b04      movsd xmm3, qword [0x0000e490]                         ; [0xe490:8]=0x3ff0000000000000\l0x00002b0c      mov dword [size], 0\l0x00002b14      movzx edx, al\l0x00002b17      lea r12, [rbp + rax*8]\l0x00002b1c      sub ebx, edx\l0x00002b1e      lea r14, obj.long_options                              ; 0x12900 ; \"8\\xe1\"\l0x00002b25      lea r13, str.c:n:fFqs:vz0123456789                     ; 0xe1b7 ; \"c:n:fFqs:vz0123456789\"\l0x00002b2c      movsd qword [var_48h], xmm3\l0x00002b32      lea rbp, [0x0000e328]\l0x00002b39      nop dword [rax]\l"]
	"0x00002b40" [URL="dbg.main/0x00002b40", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x00002bde  CODE 0x00002c54  CODE 0x00002c71  \l; XREFS: CODE 0x00002c7d  CODE 0x00002c89  CODE 0x00002cc3  \l; XREFS: CODE 0x00002d00  CODE 0x00002d0c  CODE 0x00002d18  \l; XREFS: CODE 0x00002d55  CODE 0x00002e23  CODE 0x00003428  \l; XREFS: CODE 0x00003435  \l0x00002b40      xor r8d, r8d\l0x00002b43      mov rcx, r14\l0x00002b46      mov rdx, r13\l0x00002b49      mov rsi, r12\l0x00002b4c      mov edi, ebx\l0x00002b4e      call sym.imp.getopt_long\l0x00002b53      cmp eax, 0xffffffff\l0x00002b56      je 0x2f45\l"]
	"0x00002b5c" [URL="dbg.main/0x00002b5c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002b5c      cmp eax, 0x85\l0x00002b61      jg case.0x2b84.58\l"]
	"0x00002b67" [URL="dbg.main/0x00002b67", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002b67      cmp eax, 0x2f\l0x00002b6a      jle 0x2d98\l"]
	"0x00002b70" [URL="dbg.main/0x00002b70", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002b70      lea edx, [rax - 0x30]\l0x00002b73      cmp edx, 0x55\l0x00002b76      ja case.0x2b84.58\l"]
	"0x00002b7c" [URL="dbg.main/0x00002b7c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002b7c      movsxd rdx, dword [rbp + rdx*4]\l0x00002b81      add rdx, rbp\l;-- switch\l0x00002b84      jmp rdx                                                ; switch table (86 cases) at 0xe328\l"]
	"0x00002b90" [URL="dbg.main/0x00002b90", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 102:                                                          ; from 0x00002b84\l; CODE XREF from dbg.main @ 0x2b84\l0x00002b90      mov rsi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x130e0:8]=1\l0x00002b97      mov byte [obj.forever], 1                              ; [0x13118:1]=1\l0x00002b9e      test rsi, rsi\l0x00002ba1      je 0x2e19\l"]
	"0x00002ba7" [URL="dbg.main/0x00002ba7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002ba7      mov r9, qword [obj.argmatch_die]                       ; [0x13038:8]=0x7400 dbg.__argmatch_die ; int64_t arg6\l0x00002bae      lea rcx, obj.follow_mode_map                           ; 0xe488 ; int64_t arg4\l0x00002bb5      mov r8d, 4                                             ; int64_t arg5\l0x00002bbb      lea rdx, obj.follow_mode_string                        ; 0x12b00 ; int64_t arg3\l0x00002bc2      lea rdi, str.__follow                                  ; 0xe14b ; \"--follow\" ; int64_t arg1\l0x00002bc9      call dbg.__xargmatch_internal\l0x00002bce      lea rcx, obj.follow_mode_map                           ; 0xe488\l0x00002bd5      mov eax, dword [rcx + rax*4]\l0x00002bd8      mov dword [obj.follow_mode], eax                       ; [0x13020:4]=2\l0x00002bde      jmp 0x2b40\l"]
	"0x00002be8" [URL="dbg.main/0x00002be8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 99:                                                           ; from 0x00002b84\l; CODE XREF from dbg.main @ 0x2b84\l0x00002be8      mov rdx, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x130e0:8]=1\l0x00002bef      cmp eax, 0x6e\l0x00002bf2      sete byte [obj.count_lines]\l0x00002bf9      movzx ecx, byte [rdx]\l0x00002bfc      cmp cl, 0x2b\l0x00002bff      je 0x2f39\l"]
	"0x00002c05" [URL="dbg.main/0x00002c05", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002c05      cmp cl, 0x2d\l0x00002c08      je 0x3410\l"]
	"0x00002c0e" [URL="dbg.main/0x00002c0e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2f40, 0x341b\l0x00002c0e      mov edx, 5\l0x00002c13      cmp eax, 0x6e\l0x00002c16      je 0x2e03\l"]
	"0x00002c1c" [URL="dbg.main/0x00002c1c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002c1c      lea rsi, str.invalid_number_of_bytes                   ; 0xe126 ; \"invalid number of bytes\"\l0x00002c23      xor edi, edi\l0x00002c25      call sym.imp.dcgettext\l0x00002c2a      mov r8, rax\l"]
	"0x00002c2d" [URL="dbg.main/0x00002c2d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2e14\l0x00002c2d      mov rdi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x130e0:8]=1 ; int64_t arg2\l0x00002c34      xor r9d, r9d\l0x00002c37      lea rcx, str.bkKmMGTPEZY0                              ; 0xe13e ; \"bkKmMGTPEZY0\" ; int64_t arg5\l0x00002c3e      xor esi, esi                                           ; int64_t arg3\l0x00002c40      mov rdx, 0xffffffffffffffff                            ; int64_t arg4\l0x00002c47      call dbg.xdectoumax\l0x00002c4c      mov qword [var_90h], rax\l0x00002c54      jmp 0x2b40\l"]
	"0x00002c59" [URL="dbg.main/0x00002c59", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 70:                                                           ; from 0x00002b84\l; CODE XREF from dbg.main @ 0x2b84\l0x00002c59      mov byte [obj.forever], 1                              ; [0x13118:1]=1\l0x00002c60      mov dword [obj.follow_mode], 1                         ; [0x13020:4]=2\l0x00002c6a      mov byte [obj.reopen_inaccessible_files], 1            ; [0x1311a:1]=0\l0x00002c71      jmp 0x2b40\l"]
	"0x00002c76" [URL="dbg.main/0x00002c76", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 133:                                                          ; from 0x00002b84\l; CODE XREF from dbg.main @ 0x2b84\l0x00002c76      mov byte [obj.disable_inotify], 1                      ; [0x1310c:1]=1\l0x00002c7d      jmp 0x2b40\l"]
	"0x00002c82" [URL="dbg.main/0x00002c82", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 131:                                                          ; from 0x00002b84\l; CODE XREF from dbg.main @ 0x2b84\l0x00002c82      mov byte [obj.presume_input_pipe], 1                   ; [0x1310d:1]=1\l0x00002c89      jmp 0x2b40\l"]
	"0x00002c8e" [URL="dbg.main/0x00002c8e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 130:                                                          ; from 0x00002b84\l; CODE XREF from dbg.main @ 0x2b84\l0x00002c8e      mov edx, 5\l0x00002c93      lea rsi, str.invalid_PID                               ; 0xe154 ; \"invalid PID\"\l0x00002c9a      xor edi, edi\l0x00002c9c      call sym.imp.dcgettext\l0x00002ca1      xor r9d, r9d\l0x00002ca4      mov rcx, r15                                           ; int64_t arg5\l0x00002ca7      mov edx, 0x7fffffff                                    ; int64_t arg4\l0x00002cac      mov rdi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x130e0:8]=1 ; int64_t arg2\l0x00002cb3      mov r8, rax                                            ; int64_t arg6\l0x00002cb6      xor esi, esi                                           ; int64_t arg3\l0x00002cb8      call dbg.xdectoumax\l0x00002cbd      mov dword [obj.pid], eax                               ; [0x13110:4]=0\l0x00002cc3      jmp 0x2b40\l"]
	"0x00002cc8" [URL="dbg.main/0x00002cc8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 129:                                                          ; from 0x00002b84\l; CODE XREF from dbg.main @ 0x2b84\l0x00002cc8      mov edx, 5\l0x00002ccd      lea rsi, str.invalid_maximum_number_of_unchanged_stats_between_opens ; 0xdc80 ; \"invalid maximum number of unchanged stats between opens\"\l0x00002cd4      xor edi, edi\l0x00002cd6      call sym.imp.dcgettext\l0x00002cdb      xor r9d, r9d\l0x00002cde      mov rcx, r15                                           ; int64_t arg5\l0x00002ce1      xor esi, esi                                           ; int64_t arg3\l0x00002ce3      mov rdi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x130e0:8]=1 ; int64_t arg2\l0x00002cea      mov r8, rax                                            ; int64_t arg6\l0x00002ced      mov rdx, 0xffffffffffffffff                            ; int64_t arg4\l0x00002cf4      call dbg.xdectoumax\l0x00002cf9      mov qword [obj.max_n_unchanged_stats_between_opens], rax ; [0x13018:8]=2\l0x00002d00      jmp 0x2b40\l"]
	"0x00002d05" [URL="dbg.main/0x00002d05", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 128:                                                          ; from 0x00002b84\l; CODE XREF from dbg.main @ 0x2b84\l0x00002d05      mov byte [obj.reopen_inaccessible_files], 1            ; [0x1311a:1]=0\l0x00002d0c      jmp 0x2b40\l"]
	"0x00002d11" [URL="dbg.main/0x00002d11", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 122:                                                          ; from 0x00002b84\l; CODE XREF from dbg.main @ 0x2b84\l0x00002d11      mov byte [obj.line_end], 0                             ; [0x13114:1]=0\l0x00002d18      jmp 0x2b40\l"]
	"0x00002d1d" [URL="dbg.main/0x00002d1d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 115:                                                          ; from 0x00002b84\l; CODE XREF from dbg.main @ 0x2b84\l0x00002d1d      lea rcx, [dbg.cl_strtod]                               ; 0x7850 ; int64_t arg4\l0x00002d24      mov rdi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x130e0:8]=1 ; int64_t arg1\l0x00002d2b      xor esi, esi                                           ; int64_t arg2\l0x00002d2d      lea rdx, [var_a0h]                                     ; int64_t arg3\l0x00002d35      call dbg.xstrtod\l0x00002d3a      test al, al\l0x00002d3c      je 0x2d5b\l"]
	"0x00002d3e" [URL="dbg.main/0x00002d3e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002d3e      movsd xmm2, qword [var_a0h]\l0x00002d47      pxor xmm4, xmm4\l0x00002d4b      comisd xmm2, xmm4\l0x00002d4f      movsd qword [var_48h], xmm2\l0x00002d55      jae 0x2b40\l"]
	"0x00002d5b" [URL="dbg.main/0x00002d5b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2d3c\l0x00002d5b      mov rdi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x130e0:8]=1 ; int64_t arg1\l0x00002d62      call dbg.quote\l0x00002d67      mov edx, 5\l0x00002d6c      lea rsi, str.invalid_number_of_seconds:__s             ; 0xe160 ; \"invalid number of seconds: %s\"\l0x00002d73      xor edi, edi\l0x00002d75      mov r12, rax\l0x00002d78      call sym.imp.dcgettext\l0x00002d7d      mov rcx, r12\l0x00002d80      xor esi, esi                                           ; int errname\l0x00002d82      mov edi, 1                                             ; int status\l0x00002d87      mov rdx, rax                                           ; char *format\l0x00002d8a      xor eax, eax\l0x00002d8c      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00002d91      nop dword [rax]\l"]
	"0x00002d98" [URL="dbg.main/0x00002d98", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2b6a\l0x00002d98      cmp eax, 0xffffff7d                                    ; 4294967165\l0x00002d9d      jne 0x2df1\l"]
	"0x00002d9f" [URL="dbg.main/0x00002d9f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002d9f      sub rsp, 8\l0x00002da3      lea rax, str.Jim_Meyering                              ; 0xe199 ; \"Jim Meyering\"\l0x00002daa      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0x130c8:8]=0 ; func main\l0x00002db1      mov rcx, qword [obj.Version]                           ; [0x13030:8]=0xe4a8 \"9.0\" ; func init\l0x00002db8      push 0\l0x00002dba      lea r9, str.David_MacKenzie                            ; 0xe17e ; \"David MacKenzie\" ; int64_t arg_c0h\l0x00002dc1      lea r8, str.Paul_Rubin                                 ; 0xe18e ; \"Paul Rubin\" ; int64_t arg6\l0x00002dc8      push rax\l0x00002dc9      lea rax, str.Ian_Lance_Taylor                          ; 0xe1a6 ; \"Ian Lance Taylor\"\l0x00002dd0      lea rdx, str.GNU_coreutils                             ; 0xe0ac ; \"GNU coreutils\" ; int64_t arg3\l0x00002dd7      push rax\l0x00002dd8      lea rsi, [global_program]                              ; 0xe031 ; \"tail\" ; int64_t arg2\l0x00002ddf      xor eax, eax\l0x00002de1      call dbg.version_etc\l0x00002de6      add rsp, 0x20\l0x00002dea      xor edi, edi                                           ; int status\l0x00002dec      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x00002df1" [URL="dbg.main/0x00002df1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2d9d\l0x00002df1      cmp eax, 0xffffff7e                                    ; 4294967166\l0x00002df6      jne case.0x2b84.58\l"]
	"0x00002dfc" [URL="dbg.main/0x00002dfc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002dfc      xor edi, edi                                           ; int64_t arg1\l0x00002dfe      call dbg.usage\l"]
	"0x00002e03" [URL="dbg.main/0x00002e03", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2c16\l0x00002e03      lea rsi, str.invalid_number_of_lines                   ; 0xe10e ; \"invalid number of lines\"\l0x00002e0a      xor edi, edi\l0x00002e0c      call sym.imp.dcgettext\l0x00002e11      mov r8, rax\l0x00002e14      jmp 0x2c2d\l"]
	"0x00002e19" [URL="dbg.main/0x00002e19", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2ba1\l0x00002e19      mov dword [obj.follow_mode], 2                         ; [0x13020:4]=2\l0x00002e23      jmp 0x2b40\l"]
	"0x00002e28" [URL="dbg.main/0x00002e28", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2afc\l0x00002e28      cmp eax, 0x30daf\l0x00002e2d      jle 0x2e43\l"]
	"0x00002e2f" [URL="dbg.main/0x00002e2f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002e2f      xor eax, eax\l0x00002e31      cmp byte [rdx + 1], 0x63\l0x00002e35      sete al\l0x00002e38      cmp byte [rdx + rax + 1], 0\l0x00002e3d      je 0x2b02\l"]
	"0x00002e43" [URL="dbg.main/0x00002e43", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2e2d\l0x00002e43      xor r12d, r12d\l"]
	"0x00002e46" [URL="dbg.main/0x00002e46", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2f12\l0x00002e46      movsx eax, byte [rdx + 1]\l0x00002e4a      mov rdx, rdi\l0x00002e4d      mov ecx, eax\l0x00002e4f      sub eax, 0x30\l0x00002e52      cmp eax, 9\l0x00002e55      ja 0x2e72\l"]
	"0x00002e57" [URL="dbg.main/0x00002e57", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002e57      nop word [rax + rax]\l"]
	"0x00002e60" [URL="dbg.main/0x00002e60", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2e70\l0x00002e60      movsx eax, byte [rdx + 1]\l0x00002e64      add rdx, 1\l0x00002e68      mov ecx, eax\l0x00002e6a      sub eax, 0x30\l0x00002e6d      cmp eax, 9\l0x00002e70      jbe 0x2e60\l"]
	"0x00002e72" [URL="dbg.main/0x00002e72", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2e55\l0x00002e72      cmp cl, 0x63\l0x00002e75      je 0x3cce\l"]
	"0x00002e7b" [URL="dbg.main/0x00002e7b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002e7b      cmp cl, 0x6c\l0x00002e7e      je 0x3abd\l"]
	"0x00002e84" [URL="dbg.main/0x00002e84", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002e84      cmp cl, 0x62\l0x00002e87      je 0x3aac\l"]
	"0x00002e8d" [URL="dbg.main/0x00002e8d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002e8d      mov rax, rdx\l0x00002e90      mov r13d, 1\l0x00002e96      mov ecx, 0xa\l"]
	"0x00002e9b" [URL="dbg.main/0x00002e9b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3ab8\l0x00002e9b      xor r14d, r14d\l0x00002e9e      cmp byte [rax], 0x66\l0x00002ea1      jne 0x2ead\l"]
	"0x00002ea3" [URL="dbg.main/0x00002ea3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002ea3      add rax, 1\l0x00002ea7      mov r14d, 1\l"]
	"0x00002ead" [URL="dbg.main/0x00002ead", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2ea1\l0x00002ead      cmp byte [rax], 0\l0x00002eb0      jne 0x2b02\l"]
	"0x00002eb6" [URL="dbg.main/0x00002eb6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002eb6      cmp rdi, rdx\l0x00002eb9      je 0x34a3\l"]
	"0x00002ebf" [URL="dbg.main/0x00002ebf", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002ebf      xor esi, esi                                           ; int64_t arg2\l0x00002ec1      lea rcx, [var_90h]                                     ; int64_t arg4\l0x00002ec9      mov edx, 0xa                                           ; uint32_t arg3\l0x00002ece      lea r8, [0x0000e0f6]                                   ; \"b\" ; int64_t arg5\l0x00002ed5      call dbg.xstrtoumax\l0x00002eda      and eax, 0xfffffffd                                    ; 4294967293\l0x00002edd      jne 0x4b85\l"]
	"0x00002ee3" [URL="dbg.main/0x00002ee3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x34ad\l0x00002ee3      mov byte [obj.from_start], r12b                        ; [0x13116:1]=1\l0x00002eea      mov eax, 1\l0x00002eef      mov byte [obj.count_lines], r13b                       ; [0x13119:1]=1\l0x00002ef6      mov byte [obj.forever], r14b                           ; [0x13118:1]=1\l0x00002efd      jmp 0x2b04\l"]
	"0x00002f02" [URL="dbg.main/0x00002f02", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2af3\l0x00002f02      sub eax, 0x30db0\l0x00002f07      mov r12d, 1\l0x00002f0d      cmp eax, 0x2b8\l0x00002f12      ja 0x2e46\l"]
	"0x00002f18" [URL="dbg.main/0x00002f18", fillcolor="white",color="#767676", fontname="Courier",label="0x00002f18      jmp 0x2b02\l"]
	"0x00002f1d" [URL="dbg.main/0x00002f1d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2ac1\l0x00002f1d      mov rdi, qword [size]\l0x00002f21      cmp byte [rdi], 0x2d\l0x00002f24      jne 0x2ae0\l"]
	"0x00002f2a" [URL="dbg.main/0x00002f2a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002f2a      cmp byte [rdi + 1], 0\l0x00002f2e      jne 0x2ad0\l"]
	"0x00002f34" [URL="dbg.main/0x00002f34", fillcolor="white",color="#767676", fontname="Courier",label="0x00002f34      jmp 0x2ae0\l"]
	"0x00002f39" [URL="dbg.main/0x00002f39", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2bff\l0x00002f39      mov byte [obj.from_start], 1                           ; [0x13116:1]=1\l0x00002f40      jmp 0x2c0e\l"]
	"0x00002f45" [URL="dbg.main/0x00002f45", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2b56\l0x00002f45      cmp byte [obj.reopen_inaccessible_files], 0            ; [0x1311a:1]=0\l0x00002f4c      je 0x3462\l"]
	"0x00002f52" [URL="dbg.main/0x00002f52", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002f52      cmp byte [obj.forever], 0                              ; [0x13118:1]=1\l0x00002f59      je 0x343a\l"]
	"0x00002f5f" [URL="dbg.main/0x00002f5f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002f5f      cmp dword [obj.follow_mode], 2                         ; [0x13020:4]=2\l0x00002f66      je 0x47df\l"]
	"0x00002f6c" [URL="dbg.main/0x00002f6c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002f6c      mov edi, dword [obj.pid]                               ; [0x13110:4]=0\l0x00002f72      test edi, edi\l0x00002f74      je 0x2f85\l"]
	"0x00002f76" [URL="dbg.main/0x00002f76", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3477\l0x00002f76      xor esi, esi                                           ; int sig\l0x00002f78      call sym.imp.kill                                      ; int kill(pid_t pid, int sig)\l0x00002f7d      test eax, eax\l0x00002f7f      jne 0x417f\l"]
	"0x00002f85" [URL="dbg.main/0x00002f85", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2f74, 0x346a, 0x349e, 0x4187, 0x41b8\l0x00002f85      cmp byte [obj.from_start], 0                           ; [0x13116:1]=1\l0x00002f8c      je 0x2fa7\l"]
	"0x00002f8e" [URL="dbg.main/0x00002f8e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002f8e      mov rax, qword [var_90h]\l0x00002f96      test rax, rax\l0x00002f99      je 0x2fa7\l"]
	"0x00002f9b" [URL="dbg.main/0x00002f9b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002f9b      sub rax, 1\l0x00002f9f      mov qword [var_90h], rax\l"]
	"0x00002fa7" [URL="dbg.main/0x00002fa7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2f8c, 0x2f99\l0x00002fa7      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x130d0:4]=0\l0x00002fae      cmp eax, ebx\l0x00002fb0      jge 0x3ae5\l"]
	"0x00002fb6" [URL="dbg.main/0x00002fb6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002fb6      sub ebx, eax\l0x00002fb8      movsxd rbx, ebx\l0x00002fbb      mov qword [errname], rbx\l0x00002fc0      lea rbx, [r12 + rax*8]\l"]
	"0x00002fc4" [URL="dbg.main/0x00002fc4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3af5\l0x00002fc4      mov rax, qword [errname]\l0x00002fc9      xor ecx, ecx\l0x00002fcb      mov esi, 1\l0x00002fd0      lea rbp, [rbx + rax*8]\l0x00002fd4      mov rax, rbx\l0x00002fd7      nop word [rax + rax]\l"]
	"0x00002fe0" [URL="dbg.main/0x00002fe0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2ff6\l0x00002fe0      mov rdx, qword [rax]\l0x00002fe3      cmp byte [rdx], 0x2d\l0x00002fe6      jne 0x2fef\l"]
	"0x00002fe8" [URL="dbg.main/0x00002fe8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002fe8      cmp byte [rdx + 1], 0\l0x00002fec      cmove ecx, esi\l"]
	"0x00002fef" [URL="dbg.main/0x00002fef", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2fe6\l0x00002fef      add rax, 8\l0x00002ff3      cmp rbp, rax\l0x00002ff6      jne 0x2fe0\l"]
	"0x00002ff8" [URL="dbg.main/0x00002ff8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002ff8      test cl, cl\l0x00002ffa      je 0x306b\l"]
	"0x00002ffc" [URL="dbg.main/0x00002ffc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002ffc      mov eax, dword [obj.follow_mode]                       ; [0x13020:4]=2\l0x00003002      cmp eax, 1\l0x00003005      je 0x4bd8\l"]
	"0x0000300b" [URL="dbg.main/0x0000300b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000300b      cmp byte [obj.forever], 0                              ; [0x13118:1]=1\l0x00003012      je 0x3d05\l"]
	"0x00003018" [URL="dbg.main/0x00003018", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003018      cmp dword [obj.pid], 0                                 ; [0x13110:4]=0\l0x0000301f      jne 0x34b2\l"]
	"0x00003025" [URL="dbg.main/0x00003025", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003025      cmp qword [errname], 1\l0x0000302b      jne 0x34b2\l"]
	"0x00003031" [URL="dbg.main/0x00003031", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003031      cmp eax, 2\l0x00003034      jne 0x34b2\l"]
	"0x0000303a" [URL="dbg.main/0x0000303a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000303a      lea r15, [buf]\l0x00003042      xor edi, edi                                           ; int fildes\l0x00003044      mov rsi, r15                                           ; void *buf\l0x00003047      call sym.imp.fstat                                     ; int fstat(int fildes, void *buf)\l0x0000304c      test eax, eax\l0x0000304e      jne 0x34b2\l"]
	"0x00003054" [URL="dbg.main/0x00003054", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003054      mov eax, dword [var_1a8h]\l0x0000305b      and eax, 0xf000\l0x00003060      cmp eax, sym.hash_get_n_entries                        ; 0x8000\l0x00003065      je 0x34b2\l"]
	"0x0000306b" [URL="dbg.main/0x0000306b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2ffa, 0x34bb, 0x34e2\l0x0000306b      cmp qword [var_90h], 0\l0x00003074      jne 0x3083\l"]
	"0x00003076" [URL="dbg.main/0x00003076", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003076      cmp byte [obj.forever], 0                              ; [0x13118:1]=1\l0x0000307d      je 0x3d14\l"]
	"0x00003083" [URL="dbg.main/0x00003083", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3074, 0x3d0e, 0x3d1d\l0x00003083      mov rdi, qword [errname]                               ; int64_t arg1\l0x00003088      mov esi, 0x60                                          ; '`' ; int64_t arg2\l0x0000308d      call dbg.xnmalloc\l0x00003092      mov qword [var_58h], rax\l0x00003097      nop word [rax + rax]\l"]
	"0x000030a0" [URL="dbg.main/0x000030a0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x30b2\l0x000030a0      mov rdx, qword [rbx]\l0x000030a3      add rbx, 8\l0x000030a7      add rax, 0x60\l0x000030ab      mov qword [rax - 0x60], rdx\l0x000030af      cmp rbx, rbp\l0x000030b2      jne 0x30a0\l"]
	"0x000030b4" [URL="dbg.main/0x000030b4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000030b4      mov eax, dword [size]\l0x000030b8      cmp eax, 1\l0x000030bb      je 0x34e7\l"]
	"0x000030c1" [URL="dbg.main/0x000030c1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000030c1      test eax, eax\l0x000030c3      jne 0x30d1\l"]
	"0x000030c5" [URL="dbg.main/0x000030c5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000030c5      cmp qword [errname], 1\l0x000030cb      jne 0x34e7\l"]
	"0x000030d1" [URL="dbg.main/0x000030d1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x30c3, 0x34ee\l0x000030d1      imul rax, qword [errname], 0x60\l0x000030d7      mov byte [var_8bh], 1\l0x000030df      mov rcx, rax\l0x000030e2      mov qword [var_70h], rax\l0x000030e7      mov rax, qword [var_58h]\l0x000030ec      mov rbx, rax\l0x000030ef      mov qword [size], rax\l0x000030f4      add rbx, rcx\l0x000030f7      mov qword [var_50h], rbx\l0x000030fc      jmp 0x31eb\l"]
	"0x00003101" [URL="dbg.main/0x00003101", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x320e, 0x321e\l0x00003101      xor esi, esi                                           ; int oflag\l0x00003103      mov rdi, rbp                                           ; const char *path\l0x00003106      xor eax, eax\l0x00003108      call dbg.open_safer\l0x0000310d      movzx r13d, byte [obj.reopen_inaccessible_files]       ; [0x1311a:1]=0\l0x00003115      mov r15d, eax\l0x00003118      mov rax, qword [size]\l0x0000311d      test r13b, r13b\l0x00003120      je 0x37fa\l"]
	"0x00003126" [URL="dbg.main/0x00003126", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003126      mov rbp, qword [rax]\l0x00003129      mov r12, rbp\l0x0000312c      cmp r15d, 0xffffffff\l0x00003130      jne 0x322e\l"]
	"0x00003136" [URL="dbg.main/0x00003136", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003136      mov rax, qword [size]\l0x0000313b      mov byte [rax + 0x36], 0\l"]
	"0x0000313f" [URL="dbg.main/0x0000313f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3808\l0x0000313f      call sym.imp.__errno_location\l0x00003144      cmp byte [obj.forever], 0                              ; [0x13118:1]=1\l0x0000314b      mov rbx, rax\l; DATA XREF from dbg.emit_bug_reporting_address @ 0xb917\l0x0000314e      je 0x3179\l"]
	"0x00003150" [URL="dbg.main/0x00003150", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003150      mov rcx, qword [size]\l0x00003155      mov eax, dword [rax]\l0x00003157      xor r13d, 1\l0x0000315b      mov dword [rcx + 0x38], 0xffffffff                     ; [0xffffffff:4]=0 ; -1\l0x00003162      mov dword [rcx + 0x3c], eax\l0x00003165      mov byte [rcx + 0x34], r13b\l0x00003169      mov qword [rcx + 0x28], 0\l0x00003171      mov qword [rcx + 0x20], 0\l"]
	"0x00003179" [URL="dbg.main/0x00003179", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x314e\l0x00003179      lea rsi, [0x0000e0f4]                                  ; u\"-b\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u2500\\u3a73\\u2520s\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u696c\\u656es\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u7962\\u6574s\\u6b62\\u6d4b\\u474d\\u5054\\u5a45\\u3059\\u2d00\\u662d\\u6c6f\\u6f6cw\\u6e69\\u6176\\u696c\\u2064\\u4950D\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\" ; const char *s2\l0x00003180      mov rdi, rbp                                           ; const char *s1\l0x00003183      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x00003188      test eax, eax\l0x0000318a      je 0x3a63\l"]
	"0x00003190" [URL="dbg.main/0x00003190", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3a79\l0x00003190      mov rsi, rbp                                           ; int64_t arg2\l0x00003193      mov edi, 4                                             ; int64_t arg1\l0x00003198      call sym.quotearg_style\l0x0000319d      mov edx, 5\l0x000031a2      lea rsi, str.cannot_open__s_for_reading                ; 0xe1e6 ; \"cannot open %s for reading\"\l0x000031a9      xor edi, edi\l0x000031ab      mov r12, rax\l0x000031ae      call sym.imp.dcgettext\l0x000031b3      mov esi, dword [rbx]                                   ; int errname\l0x000031b5      mov rcx, r12\l0x000031b8      xor edi, edi                                           ; int status\l0x000031ba      mov rdx, rax                                           ; char *format\l0x000031bd      xor eax, eax\l0x000031bf      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x000031c4      mov byte [var_20h], 0\l"]
	"0x000031c9" [URL="dbg.main/0x000031c9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x35e3, 0x35f3, 0x3659, 0x379b, 0x3922\l0x000031c9      add qword [size], 0x60                                 ; [0x60:8]=0x200\l0x000031cf      movzx ecx, byte [var_20h]\l0x000031d4      mov rax, qword [size]\l0x000031d9      and byte [var_8bh], cl\l0x000031e0      cmp rax, qword [var_50h]\l0x000031e5      je 0x3a0c\l"]
	"0x000031eb" [URL="dbg.main/0x000031eb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x30fc\l0x000031eb      mov rax, qword [var_90h]\l0x000031f3      mov qword [var_30h], rax\l0x000031f8      mov rax, qword [size]\l0x000031fd      mov rbp, qword [rax]\l0x00003200      movzx eax, byte [rbp]\l0x00003204      mov r12, rbp\l0x00003207      sub eax, 0x2d\l0x0000320a      mov dword [var_3ch], eax\l0x0000320e      jne 0x3101\l"]
	"0x00003214" [URL="dbg.main/0x00003214", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003214      movzx eax, byte [rbp + 1]\l0x00003218      mov dword [var_3ch], eax\l0x0000321c      test eax, eax\l0x0000321e      jne 0x3101\l"]
	"0x00003224" [URL="dbg.main/0x00003224", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003224      mov byte [obj.have_read_stdin], 1                      ; [0x1310e:1]=1\l0x0000322b      xor r15d, r15d\l"]
	"0x0000322e" [URL="dbg.main/0x0000322e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3130\l0x0000322e      mov rax, qword [size]\l0x00003233      mov byte [rax + 0x36], 1\l"]
	"0x00003237" [URL="dbg.main/0x00003237", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x380e\l0x00003237      cmp byte [obj.print_headers], 0                        ; [0x13115:1]=1\l0x0000323e      jne 0x37a0\l"]
	"0x00003244" [URL="dbg.main/0x00003244", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x37f5\l0x00003244      cmp byte [rbp], 0x2d\l0x00003248      mov qword [var_40h], rbp\l0x0000324d      jne 0x326d\l"]
	"0x0000324f" [URL="dbg.main/0x0000324f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000324f      cmp byte [rbp + 1], 0\l0x00003253      jne 0x326d\l"]
	"0x00003255" [URL="dbg.main/0x00003255", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003255      mov edx, 5\l0x0000325a      lea rsi, str.standard_input                            ; 0xdf7d ; \"standard input\"\l0x00003261      xor edi, edi\l0x00003263      call sym.imp.dcgettext\l0x00003268      mov qword [var_40h], rax\l"]
	"0x0000326d" [URL="dbg.main/0x0000326d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x324d, 0x3253\l0x0000326d      movzx eax, byte [obj.count_lines]                      ; [0x13119:1]=1\l0x00003274      mov edi, r15d\l0x00003277      mov qword [var_a0h], 0\l0x00003283      mov byte [var_20h], al\l0x00003287      test al, al\l0x00003289      lea rax, [buf]\l0x00003291      mov qword [var_68h], rax\l0x00003296      mov rsi, rax\l0x00003299      je 0x352c\l"]
	"0x0000329f" [URL="dbg.main/0x0000329f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000329f      call sym.imp.fstat                                     ; int fstat(int fildes, void *buf)\l0x000032a4      test eax, eax\l0x000032a6      jne 0x3afa\l"]
	"0x000032ac" [URL="dbg.main/0x000032ac", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000032ac      movzx eax, byte [obj.from_start]                       ; [0x13116:1]=1\l0x000032b3      mov byte [var_60h], al\l0x000032b7      test al, al\l0x000032b9      jne 0x3a7e\l"]
	"0x000032bf" [URL="dbg.main/0x000032bf", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000032bf      cmp byte [obj.presume_input_pipe], 0                   ; [0x1310d:1]=1\l0x000032c6      jne 0x32df\l"]
	"0x000032c8" [URL="dbg.main/0x000032c8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000032c8      mov eax, dword [var_1a8h]\l0x000032cf      and eax, 0xf000\l0x000032d4      cmp eax, sym.hash_get_n_entries                        ; 0x8000\l0x000032d9      je 0x3d28\l"]
	"0x000032df" [URL="dbg.main/0x000032df", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x32c6, 0x3d3e, 0x47ca\l0x000032df      mov edi, 0x2018                                        ; '\\x18 ' ; size_t size\l0x000032e4      call sym.xmalloc                                       ;  void *xmalloc(size_t size)\l0x000032e9      mov edi, 0x2018                                        ; '\\x18 ' ; size_t size\l0x000032ee      mov qword [rax + 0x2008], 0\l0x000032f9      mov r13, rax\l0x000032fc      mov qword [rax + sym._init], 0                         ; [0x2000:8]=0x200\l0x00003307      mov qword [rax + 0x2010], 0\l0x00003312      mov qword [s1], rax\l0x00003317      call sym.xmalloc                                       ;  void *xmalloc(size_t size)\l0x0000331c      mov qword [var_28h], 0\l0x00003325      mov r14, rax\l0x00003328      xchg r13, r14\l0x0000332b      nop dword [rax + rax]\l"]
	"0x00003330" [URL="dbg.main/0x00003330", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x340b, 0x3527, 0x36ac\l0x00003330      mov edx, sym._init                                     ; 0x2000 ; int64_t arg3\l0x00003335      mov rsi, r13                                           ; int64_t arg2\l0x00003338      mov edi, r15d                                          ; int64_t arg1\l0x0000333b      call dbg.safe_read\l0x00003340      mov r12, rax\l0x00003343      lea rax, [rax - 1]\l0x00003347      cmp rax, 0xfffffffffffffffd\l0x0000334b      ja 0x3813\l"]
	"0x00003351" [URL="dbg.main/0x00003351", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003351      mov qword [r13 + sym._init], r12                       ; [0x2000:8]=0x200\l0x00003358      movsx ebx, byte [obj.line_end]                         ; [0x13114:1]=0\l0x0000335f      lea rbp, [r13 + r12]\l0x00003364      mov rdi, r13\l0x00003367      add qword [var_a0h], r12\l0x0000336f      mov qword [r13 + 0x2008], 0\l0x0000337a      mov qword [r13 + 0x2010], 0\l0x00003385      jmp 0x339c\l"]
	"0x00003390" [URL="dbg.main/0x00003390", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x33ac\l0x00003390      add qword [r13 + 0x2008], 1\l0x00003398      lea rdi, [rax + 1]\l"]
	"0x0000339c" [URL="dbg.main/0x0000339c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3385\l0x0000339c      mov rdx, rbp\l0x0000339f      mov esi, ebx                                           ; int c\l0x000033a1      sub rdx, rdi                                           ; size_t n\l0x000033a4      call sym.imp.memchr                                    ; void *memchr(void *s, int c, size_t n)\l0x000033a9      test rax, rax\l0x000033ac      jne 0x3390\l"]
	"0x000033ae" [URL="dbg.main/0x000033ae", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000033ae      mov rax, qword [s1]\l0x000033b3      mov rbx, qword [var_28h]\l0x000033b8      add rbx, qword [r13 + 0x2008]\l0x000033bf      mov rdi, qword [rax + sym._init]                       ; [0x2000:8]=0x200\l0x000033c6      lea rax, [r12 + rdi]\l0x000033ca      cmp rax, 0x1fff\l0x000033d0      jbe 0x34f3\l"]
	"0x000033d6" [URL="dbg.main/0x000033d6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000033d6      mov rax, qword [s1]\l0x000033db      mov qword [rax + 0x2010], r13\l0x000033e2      mov rax, rbx\l0x000033e5      sub rax, qword [r14 + 0x2008]\l0x000033ec      mov qword [var_28h], rax\l0x000033f1      cmp qword [var_30h], rax\l0x000033f6      jae 0x3695\l"]
	"0x000033fc" [URL="dbg.main/0x000033fc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000033fc      mov qword [s1], r13\l0x00003401      mov r13, r14\l0x00003404      mov r14, qword [r14 + 0x2010]\l0x0000340b      jmp 0x3330\l"]
	"0x00003410" [URL="dbg.main/0x00003410", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2c08\l0x00003410      add rdx, 1\l0x00003414      mov qword [obj.optarg], rdx                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x130e0:8]=1\l0x0000341b      jmp 0x2c0e\l"]
	"0x00003420" [URL="dbg.main/0x00003420", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 113:                                                          ; from 0x00002b84\l; CODE XREF from dbg.main @ 0x2b84\l0x00003420      mov dword [size], 2\l0x00003428      jmp 0x2b40\l"]
	"0x0000342d" [URL="dbg.main/0x0000342d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 118:                                                          ; from 0x00002b84\l; CODE XREF from dbg.main @ 0x2b84\l0x0000342d      mov dword [size], 1\l0x00003435      jmp 0x2b40\l"]
	"0x0000343a" [URL="dbg.main/0x0000343a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2f59\l0x0000343a      mov byte [obj.reopen_inaccessible_files], 0            ; [0x1311a:1]=0\l0x00003441      mov edx, 5\l0x00003446      lea rsi, str.warning:___retry_ignored____retry_is_useful_only_when_following ; 0xdce0 ; \"warning: --retry ignored; --retry is useful only when following\"\l"]
	"0x0000344d" [URL="dbg.main/0x0000344d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x47eb\l0x0000344d      xor edi, edi\l0x0000344f      call sym.imp.dcgettext\l0x00003454      xor esi, esi                                           ; int errname\l0x00003456      xor edi, edi                                           ; int status\l0x00003458      mov rdx, rax                                           ; char *format\l0x0000345b      xor eax, eax\l0x0000345d      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00003462" [URL="dbg.main/0x00003462", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2f4c\l0x00003462      mov edi, dword [obj.pid]                               ; [0x13110:4]=0\l0x00003468      test edi, edi\l0x0000346a      je 0x2f85\l"]
	"0x00003470" [URL="dbg.main/0x00003470", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003470      cmp byte [obj.forever], 0                              ; [0x13118:1]=1\l0x00003477      jne 0x2f76\l"]
	"0x0000347d" [URL="dbg.main/0x0000347d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000347d      xor edi, edi\l0x0000347f      mov edx, 5\l0x00003484      lea rsi, str.warning:_PID_ignored____pidPID_is_useful_only_when_following ; 0xdd58 ; \"warning: PID ignored; --pid=PID is useful only when following\"\l0x0000348b      call sym.imp.dcgettext\l0x00003490      xor esi, esi                                           ; int errname\l0x00003492      xor edi, edi                                           ; int status\l0x00003494      mov rdx, rax                                           ; char *format\l0x00003497      xor eax, eax\l0x00003499      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x0000349e      jmp 0x2f85\l"]
	"0x000034a3" [URL="dbg.main/0x000034a3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2eb9\l0x000034a3      mov eax, ecx\l0x000034a5      mov qword [var_90h], rax\l0x000034ad      jmp 0x2ee3\l"]
	"0x000034b2" [URL="dbg.main/0x000034b2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x301f, 0x302b, 0x3034, 0x304e, 0x3065\l0x000034b2      xor edi, edi                                           ; int fd\l0x000034b4      call sym.imp.isatty                                    ; int isatty(int fd)\l0x000034b9      test eax, eax\l0x000034bb      je 0x306b\l"]
	"0x000034c1" [URL="dbg.main/0x000034c1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000034c1      xor edi, edi\l0x000034c3      mov edx, 5\l0x000034c8      lea rsi, str.warning:_following_standard_input_indefinitely_is_ineffective ; 0xddd0 ; \"warning: following standard input indefinitely is ineffective\"\l0x000034cf      call sym.imp.dcgettext\l0x000034d4      xor esi, esi                                           ; int errname\l0x000034d6      xor edi, edi                                           ; int status\l0x000034d8      mov rdx, rax                                           ; char *format\l0x000034db      xor eax, eax\l; DATA XREF from dbg.version_etc_arn @ 0xb542\l0x000034dd      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x000034e2      jmp 0x306b\l"]
	"0x000034e7" [URL="dbg.main/0x000034e7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x30bb, 0x30cb\l0x000034e7      mov byte [obj.print_headers], 1                        ; [0x13115:1]=1\l0x000034ee      jmp 0x30d1\l"]
	"0x000034f3" [URL="dbg.main/0x000034f3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x33d0\l0x000034f3      mov rbp, qword [s1]\l0x000034f8      mov rdx, r12                                           ; size_t n\l0x000034fb      mov rsi, r13                                           ; const void *s2\l0x000034fe      add rdi, rbp                                           ; void *s1\l0x00003501      call sym.imp.memcpy                                    ; void *memcpy(void *s1, const void *s2, size_t n)\l0x00003506      mov rax, qword [r13 + sym._init]                       ; [0x2000:8]=0x200\l0x0000350d      mov qword [var_28h], rbx\l0x00003512      add qword [rbp + sym._init], rax                       ; [0x2000:8]=0x200\l0x00003519      mov rax, qword [r13 + 0x2008]\l0x00003520      add qword [rbp + 0x2008], rax\l0x00003527      jmp 0x3330\l"]
	"0x0000352c" [URL="dbg.main/0x0000352c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3299\l0x0000352c      call sym.imp.fstat                                     ; int fstat(int fildes, void *buf)\l0x00003531      test eax, eax\l0x00003533      jne 0x3b42\l"]
	"0x00003539" [URL="dbg.main/0x00003539", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003539      movzx ebx, byte [obj.from_start]                       ; [0x13116:1]=1\l; DATA XREF from dbg.version_etc_arn @ 0xb4b8\l0x00003540      movzx eax, byte [obj.presume_input_pipe]               ; [0x1310d:1]=1\l0x00003547      mov byte [var_20h], bl\l0x0000354b      test bl, bl\l0x0000354d      je 0x3927\l"]
	"0x00003553" [URL="dbg.main/0x00003553", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003553      test al, al\l0x00003555      jne 0x365e\l"]
	"0x0000355b" [URL="dbg.main/0x0000355b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000355b      cmp qword [var_30h], 0\l0x00003561      js 0x365e\l"]
	"0x00003567" [URL="dbg.main/0x00003567", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003567      mov eax, dword [var_1a8h]\l0x0000356e      mov rsi, qword [var_30h]\l0x00003573      mov edx, 1\l0x00003578      mov edi, r15d\l0x0000357b      and eax, 0xf000\l0x00003580      cmp eax, sym.hash_get_n_entries                        ; 0x8000\l0x00003585      je 0x476b\l"]
	"0x0000358b" [URL="dbg.main/0x0000358b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000358b      call sym.imp.lseek\l0x00003590      add rax, 1\l0x00003594      je 0x365e\l"]
	"0x0000359a" [URL="dbg.main/0x0000359a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4773\l; DATA XREF from dbg.version_etc_arn @ 0xb61f\l0x0000359a      mov rax, qword [var_30h]\l0x0000359f      mov qword [var_30h], 0xffffffffffffffff\l0x000035a8      mov qword [var_a0h], rax\l"]
	"0x000035b0" [URL="dbg.main/0x000035b0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3683, 0x3c07\l; DATA XREF from dbg.version_etc_arn @ 0xb43d\l0x000035b0      mov rcx, qword [var_30h]                               ; int64_t arg4\l0x000035b5      mov rsi, qword [var_40h]                               ; int64_t arg2\l0x000035ba      mov edx, r15d                                          ; int64_t arg3\l0x000035bd      xor edi, edi                                           ; int64_t arg1\l0x000035bf      call dbg.dump_remainder\l0x000035c4      add qword [var_a0h], rax\l0x000035cc      mov byte [var_20h], 1\l"]
	"0x000035d1" [URL="dbg.main/0x000035d1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3690, 0x3875, 0x3b80, 0x46c1\l0x000035d1      cmp byte [obj.forever], 0                              ; [0x13118:1]=1\l0x000035d8      jne 0x36b1\l"]
	"0x000035de" [URL="dbg.main/0x000035de", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000035de      cmp dword [var_3ch], 0\l0x000035e3      je 0x31c9\l"]
	"0x000035e9" [URL="dbg.main/0x000035e9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000035e9      mov edi, r15d                                          ; int fildes\l0x000035ec      call sym.imp.close                                     ; int close(int fildes)\l0x000035f1      test eax, eax\l0x000035f3      je 0x31c9\l"]
	"0x000035f9" [URL="dbg.main/0x000035f9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000035f9      mov rax, qword [size]\l0x000035fe      lea rsi, [0x0000e0f4]                                  ; u\"-b\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u2500\\u3a73\\u2520s\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u696c\\u656es\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u7962\\u6574s\\u6b62\\u6d4b\\u474d\\u5054\\u5a45\\u3059\\u2d00\\u662d\\u6c6f\\u6f6cw\\u6e69\\u6176\\u696c\\u2064\\u4950D\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\" ; const char *s2\l0x00003605      mov rbp, qword [rax]\l0x00003608      mov rdi, rbp                                           ; const char *s1\l0x0000360b      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x00003610      test eax, eax\l0x00003612      je 0x41bd\l"]
	"0x00003618" [URL="dbg.main/0x00003618", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x41d3\l0x00003618      mov rsi, rbp                                           ; int64_t arg2\l0x0000361b      mov edi, 4                                             ; int64_t arg1\l0x00003620      call sym.quotearg_style\l0x00003625      mov edx, 5\l0x0000362a      lea rsi, str.error_reading__s                          ; 0xdf4f ; \"error reading %s\"\l0x00003631      xor edi, edi\l0x00003633      mov r13, rax\l0x00003636      call sym.imp.dcgettext\l0x0000363b      mov r12, rax\l0x0000363e      call sym.imp.__errno_location\l0x00003643      mov rcx, r13\l0x00003646      mov rdx, r12                                           ; char *format\l0x00003649      xor edi, edi                                           ; int status\l0x0000364b      mov esi, dword [rax]                                   ; int errname\l0x0000364d      xor eax, eax\l0x0000364f      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00003654      mov byte [var_20h], 0\l0x00003659      jmp 0x31c9\l"]
	"0x0000365e" [URL="dbg.main/0x0000365e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3555, 0x3561, 0x3594\l0x0000365e      mov rdx, qword [var_30h]                               ; int64_t arg3\l0x00003663      mov rdi, qword [var_40h]                               ; int64_t arg1\l0x00003668      lea rcx, [var_a0h]                                     ; int64_t arg4\l0x00003670      mov esi, r15d                                          ; int64_t arg2\l0x00003673      call dbg.start_bytes\l0x00003678      mov qword [var_30h], 0xffffffffffffffff\l0x00003681      test eax, eax\l0x00003683      je 0x35b0\l"]
	"0x00003689" [URL="dbg.main/0x00003689", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003689      shr eax, 0x1f\l0x0000368c      mov dword [var_20h], eax\l0x00003690      jmp 0x35d1\l"]
	"0x00003695" [URL="dbg.main/0x00003695", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x33f6\l0x00003695      mov edi, 0x2018                                        ; '\\x18 ' ; size_t size\l0x0000369a      call sym.xmalloc                                       ;  void *xmalloc(size_t size)\l0x0000369f      mov qword [s1], r13\l0x000036a4      mov qword [var_28h], rbx\l0x000036a9      mov r13, rax\l0x000036ac      jmp 0x3330\l"]
	"0x000036b1" [URL="dbg.main/0x000036b1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x35d8\l0x000036b1      movzx eax, byte [var_20h]\l0x000036b6      mov rbx, qword [size]\l0x000036bb      mov edi, r15d                                          ; int fildes\l0x000036be      mov rsi, qword [var_68h]                               ; void *buf\l0x000036c3      sub eax, 1\l0x000036c6      mov dword [rbx + 0x3c], eax\l0x000036c9      call sym.imp.fstat                                     ; int fstat(int fildes, void *buf)\l0x000036ce      test eax, eax\l0x000036d0      js 0x387a\l"]
	"0x000036d6" [URL="dbg.main/0x000036d6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000036d6      mov edx, dword [var_1a8h]\l0x000036dd      mov eax, edx\l0x000036df      and eax, 0xf000\l0x000036e4      sub eax, 0x1000\l0x000036e9      test eax, 0xffffe000\l0x000036ee      je 0x3702\l"]
	"0x000036f0" [URL="dbg.main/0x000036f0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000036f0      mov eax, edx\l; DATA XREF from dbg.version_etc_arn @ 0xb2ef\l0x000036f2      and eax, 0xb000\l0x000036f7      cmp eax, sym.hash_get_n_entries                        ; 0x8000\l0x000036fc      jne 0x40b3\l"]
	"0x00003702" [URL="dbg.main/0x00003702", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x36ee\l0x00003702      cmp byte [var_20h], 0\l0x00003707      je 0x38da\l"]
	"0x0000370d" [URL="dbg.main/0x0000370d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000370d      mov rbx, qword [size]\l0x00003712      mov rcx, qword [var_a0h]\l0x0000371a      lea rsi, [0x0000e0f4]                                  ; u\"-b\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u2500\\u3a73\\u2520s\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u696c\\u656es\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u7962\\u6574s\\u6b62\\u6d4b\\u474d\\u5054\\u5a45\\u3059\\u2d00\\u662d\\u6c6f\\u6f6cw\\u6e69\\u6176\\u696c\\u2064\\u4950D\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\" ; const char *s2\l0x00003721      cmp dword [var_3ch], 1\l0x00003726      mov qword [rbx + 8], rcx\l0x0000372a      mov rcx, qword [var_1e8h]\l0x00003732      sbb eax, eax\l0x00003734      or eax, 1\l0x00003737      mov rbp, qword [rbx]\l0x0000373a      mov dword [rbx + 0x38], r15d\l0x0000373e      mov qword [rbx + 0x10], rcx\l0x00003742      mov rcx, qword [var_1f0h]\l0x0000374a      mov dword [rbx + 0x30], edx\l0x0000374d      mov rdi, rbp                                           ; const char *s1\l0x00003750      mov qword [rbx + 0x18], rcx\l0x00003754      mov rcx, qword [buf]\l0x0000375c      mov dword [rbx + 0x40], eax\l0x0000375f      mov qword [rbx + 0x20], rcx\l0x00003763      mov rcx, qword [var_198h]\l0x0000376b      mov qword [rbx + 0x58], 0\l0x00003773      mov qword [rbx + 0x28], rcx\l0x00003777      mov byte [rbx + 0x34], 0\l0x0000377b      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x00003780      test eax, eax\l0x00003782      je 0x46f2\l"]
	"0x00003788" [URL="dbg.main/0x00003788", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4708\l0x00003788      mov rsi, rbp\l0x0000378b      mov edi, r15d                                          ; int64_t arg2\l0x0000378e      call dbg.fremote\l0x00003793      mov rbx, qword [size]\l0x00003798      mov byte [rbx + 0x35], al\l0x0000379b      jmp 0x31c9\l"]
	"0x000037a0" [URL="dbg.main/0x000037a0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x323e\l0x000037a0      lea rsi, [0x0000e0f4]                                  ; u\"-b\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u2500\\u3a73\\u2520s\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u696c\\u656es\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u7962\\u6574s\\u6b62\\u6d4b\\u474d\\u5054\\u5a45\\u3059\\u2d00\\u662d\\u6c6f\\u6f6cw\\u6e69\\u6176\\u696c\\u2064\\u4950D\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\" ; const char *s2\l0x000037a7      mov rdi, rbp                                           ; const char *s1\l0x000037aa      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x000037af      test eax, eax\l0x000037b1      je 0x3aca\l"]
	"0x000037b7" [URL="dbg.main/0x000037b7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3ae0\l0x000037b7      cmp byte [obj.first_file.2], 0                         ; [0x13010:1]=0\l0x000037be      lea rax, [0x0000ea41]\l0x000037c5      mov rcx, r12\l0x000037c8      mov edi, 1\l0x000037cd      lea rdx, [0x0000ea40]                                  ; \"\\n\"\l0x000037d4      lea rsi, str._s___s___n                                ; 0xdf8c ; \"%s==> %s <==\\n\"\l0x000037db      cmovne rdx, rax\l0x000037df      xor eax, eax\l0x000037e1      call sym.imp.__printf_chk\l0x000037e6      mov rax, qword [size]\l0x000037eb      mov byte [obj.first_file.2], 0                         ; [0x13010:1]=0\l0x000037f2      mov rbp, qword [rax]\l0x000037f5      jmp 0x3244\l"]
	"0x000037fa" [URL="dbg.main/0x000037fa", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3120\l0x000037fa      mov rbp, qword [rax]\l0x000037fd      mov byte [rax + 0x36], 1\l0x00003801      mov r12, rbp\l0x00003804      cmp r15d, 0xffffffff\l0x00003808      je 0x313f\l"]
	"0x0000380e" [URL="dbg.main/0x0000380e", fillcolor="white",color="#767676", fontname="Courier",label="0x0000380e      jmp 0x3237\l"]
	"0x00003813" [URL="dbg.main/0x00003813", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x334b\l0x00003813      xchg r14, r13\l0x00003816      mov rdi, r14                                           ; void *ptr\l0x00003819      call sym.imp.free                                      ; void free(void *ptr)\l0x0000381e      add r12, 1\l0x00003822      je 0x470d\l"]
	"0x00003828" [URL="dbg.main/0x00003828", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003828      mov rbx, qword [s1]\l0x0000382d      mov rcx, qword [rbx + sym._init]                       ; [0x2000:8]=0x200\l0x00003834      test rcx, rcx\l0x00003837      sete dl\l0x0000383a      cmp qword [var_30h], 0\l0x00003840      sete al\l0x00003843      or dl, al\l0x00003845      mov byte [var_60h], dl\l0x00003849      je 0x3c0c\l"]
	"0x0000384f" [URL="dbg.main/0x0000384f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x474b\l0x0000384f      test r13, r13\l0x00003852      je 0x386c\l"]
	"0x00003854" [URL="dbg.main/0x00003854", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003854      nop dword [rax]\l"]
	"0x00003858" [URL="dbg.main/0x00003858", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x386a, 0x3cc9\l0x00003858      mov rdi, r13                                           ; void *ptr\l0x0000385b      mov r13, qword [r13 + 0x2010]\l; DATA XREF from dbg.version_etc_arn @ 0xb3af\l0x00003862      call sym.imp.free                                      ; void free(void *ptr)\l0x00003867      test r13, r13\l0x0000386a      jne 0x3858\l"]
	"0x0000386c" [URL="dbg.main/0x0000386c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x00003852  CODE 0x00003aa7  CODE 0x00003b3d  \l; XREFS: CODE 0x00003d73  CODE 0x00003d9a  CODE 0x00003dba  \l0x0000386c      movzx eax, byte [var_60h]\l0x00003871      mov byte [var_20h], al\l0x00003875      jmp 0x35d1\l"]
	"0x0000387a" [URL="dbg.main/0x0000387a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x36d0\l0x0000387a      call sym.imp.__errno_location\l0x0000387f      mov rcx, qword [size]\l0x00003884      lea rsi, [0x0000e0f4]                                  ; u\"-b\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u2500\\u3a73\\u2520s\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u696c\\u656es\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u7962\\u6574s\\u6b62\\u6d4b\\u474d\\u5054\\u5a45\\u3059\\u2d00\\u662d\\u6c6f\\u6f6cw\\u6e69\\u6176\\u696c\\u2064\\u4950D\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\" ; const char *s2\l0x0000388b      mov rbx, rax\l0x0000388e      mov eax, dword [rax]\l0x00003890      mov rbp, qword [rcx]\l0x00003893      mov dword [rcx + 0x3c], eax\l0x00003896      mov rdi, rbp                                           ; const char *s1\l0x00003899      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x0000389e      test eax, eax\l0x000038a0      je 0x4750\l"]
	"0x000038a6" [URL="dbg.main/0x000038a6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4766\l0x000038a6      mov rsi, rbp                                           ; int64_t arg2\l0x000038a9      mov edi, 4                                             ; int64_t arg1\l0x000038ae      call sym.quotearg_style\l0x000038b3      mov edx, 5\l0x000038b8      lea rsi, str.error_reading__s                          ; 0xdf4f ; \"error reading %s\"\l0x000038bf      xor edi, edi\l0x000038c1      mov r12, rax\l0x000038c4      call sym.imp.dcgettext\l0x000038c9      mov esi, dword [rbx]                                   ; int errname\l0x000038cb      mov rcx, r12\l0x000038ce      xor edi, edi                                           ; int status\l0x000038d0      mov rdx, rax                                           ; char *format\l0x000038d3      xor eax, eax\l0x000038d5      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x000038da" [URL="dbg.main/0x000038da", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3707, 0x4137\l0x000038da      movzx eax, byte [obj.reopen_inaccessible_files]        ; [0x1311a:1]=0\l0x000038e1      mov rbx, qword [size]\l0x000038e6      lea rsi, [0x0000e0f4]                                  ; u\"-b\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u2500\\u3a73\\u2520s\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u696c\\u656es\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u7962\\u6574s\\u6b62\\u6d4b\\u474d\\u5054\\u5a45\\u3059\\u2d00\\u662d\\u6c6f\\u6f6cw\\u6e69\\u6176\\u696c\\u2064\\u4950D\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\" ; const char *s2\l0x000038ed      xor eax, 1\l0x000038f0      mov rbp, qword [rbx]\l0x000038f3      mov byte [rbx + 0x34], al\l0x000038f6      mov rdi, rbp                                           ; const char *s1\l0x000038f9      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x000038fe      test eax, eax\l0x00003900      je 0x3cdb\l"]
	"0x00003906" [URL="dbg.main/0x00003906", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3cf1\l0x00003906      mov rsi, rbp                                           ; int64_t arg2\l0x00003909      mov edi, r15d                                          ; int64_t arg1\l0x0000390c      call sym.close_fd\l0x00003911      mov rax, qword [size]\l0x00003916      mov byte [var_20h], 0\l0x0000391b      mov dword [rax + 0x38], 0xffffffff                     ; [0xffffffff:4]=0 ; -1\l0x00003922      jmp 0x31c9\l"]
	"0x00003927" [URL="dbg.main/0x00003927", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x354d\l0x00003927      test al, al\l0x00003929      je 0x3b85\l"]
	"0x0000392f" [URL="dbg.main/0x0000392f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3b8b, 0x3bd9, 0x41f7\l0x0000392f      mov edi, 0x2010                                        ; '\\x10 ' ; size_t size\l0x00003934      xor ebx, ebx\l0x00003936      call sym.xmalloc                                       ;  void *xmalloc(size_t size)\l0x0000393b      mov edi, 0x2010                                        ; '\\x10 ' ; size_t size\l0x00003940      mov qword [rax + sym._init], 0                         ; [0x2000:8]=0x200\l0x0000394b      mov r14, rax\l0x0000394e      mov qword [rax + 0x2008], 0\l0x00003959      mov r13, r14\l0x0000395c      call sym.xmalloc                                       ;  void *xmalloc(size_t size)\l0x00003961      mov r12, qword [var_30h]\l0x00003966      mov rbp, rax\l0x00003969      jmp 0x3998\l"]
	"0x0000396b" [URL="dbg.main/0x0000396b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x39e8\l0x0000396b      mov rax, rbx\l0x0000396e      sub rax, qword [r13 + sym._init]                       ; [0x2000:8]=0x200\l0x00003975      mov qword [r14 + 0x2008], rbp\l0x0000397c      cmp r12, rax\l0x0000397f      jae 0x3cf6\l"]
	"0x00003985" [URL="dbg.main/0x00003985", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003985      mov rbx, rax\l0x00003988      mov rax, r13\l0x0000398b      mov r13, qword [r13 + 0x2008]\l"]
	"0x00003992" [URL="dbg.main/0x00003992", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3a0a, 0x3d00\l0x00003992      mov r14, rbp\l0x00003995      mov rbp, rax\l"]
	"0x00003998" [URL="dbg.main/0x00003998", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3969\l0x00003998      mov edx, sym._init                                     ; 0x2000 ; int64_t arg3\l0x0000399d      mov rsi, rbp                                           ; int64_t arg2\l0x000039a0      mov edi, r15d                                          ; int64_t arg1\l0x000039a3      call dbg.safe_read\l0x000039a8      mov rdx, rax\l0x000039ab      lea rax, [rax - 1]\l0x000039af      cmp rax, 0xfffffffffffffffd\l0x000039b3      ja 0x461f\l"]
	"0x000039b9" [URL="dbg.main/0x000039b9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000039b9      add qword [var_a0h], rdx\l0x000039c1      add rbx, rdx\l0x000039c4      mov qword [rbp + sym._init], rdx                       ; [0x2000:8]=0x200\l0x000039cb      mov rax, qword [r14 + sym._init]                       ; [0x2000:8]=0x200\l0x000039d2      mov qword [rbp + 0x2008], 0\l0x000039dd      lea rcx, [rdx + rax]\l0x000039e1      cmp rcx, 0x1fff\l0x000039e8      ja 0x396b\l"]
	"0x000039ea" [URL="dbg.main/0x000039ea", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000039ea      mov rsi, rbp                                           ; const void *s2\l0x000039ed      lea rdi, [r14 + rax]                                   ; void *s1\l0x000039f1      call sym.imp.memcpy                                    ; void *memcpy(void *s1, const void *s2, size_t n)\l0x000039f6      mov rax, qword [rbp + sym._init]                       ; [0x2000:8]=0x200\l0x000039fd      add qword [r14 + sym._init], rax                       ; [0x2000:8]=0x200\l0x00003a04      mov rax, rbp\l0x00003a07      mov rbp, r14\l0x00003a0a      jmp 0x3992\l"]
	"0x00003a0c" [URL="dbg.main/0x00003a0c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x31e5\l0x00003a0c      movzx eax, byte [obj.forever]                          ; [0x13118:1]=1\l0x00003a13      mov byte [var_40h], al\l0x00003a17      test al, al\l0x00003a19      jne 0x3de8\l"]
	"0x00003a1f" [URL="dbg.main/0x00003a1f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3e40, 0x409a, 0x44af\l0x00003a1f      cmp byte [obj.have_read_stdin], 0                      ; [0x1310e:1]=1\l0x00003a26      jne 0x3dbf\l"]
	"0x00003a2c" [URL="dbg.main/0x00003a2c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3dc8\l0x00003a2c      movzx eax, byte [var_8bh]\l0x00003a34      xor eax, 1\l0x00003a37      movzx eax, al\l"]
	"0x00003a3a" [URL="dbg.main/0x00003a3a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3d23, 0x4f35\l0x00003a3a      mov rdx, qword [var_228h]\l0x00003a42      sub rdx, qword fs:[0x28]\l0x00003a4b      jne 0x4bd3\l"]
	"0x00003a51" [URL="dbg.main/0x00003a51", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003a51      add rsp, 0x238\l0x00003a58      pop rbx\l0x00003a59      pop rbp\l0x00003a5a      pop r12\l0x00003a5c      pop r13\l0x00003a5e      pop r14\l0x00003a60      pop r15\l0x00003a62      ret\l"]
	"0x00003a63" [URL="dbg.main/0x00003a63", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x318a\l0x00003a63      mov edx, 5\l0x00003a68      lea rsi, str.standard_input                            ; 0xdf7d ; \"standard input\"\l0x00003a6f      xor edi, edi\l0x00003a71      call sym.imp.dcgettext\l0x00003a76      mov rbp, rax\l0x00003a79      jmp 0x3190\l"]
	"0x00003a7e" [URL="dbg.main/0x00003a7e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x32b9\l0x00003a7e      mov rdx, qword [var_30h]                               ; int64_t arg3\l0x00003a83      mov rdi, qword [var_40h]                               ; int64_t arg1\l0x00003a88      lea rcx, [var_a0h]                                     ; int64_t arg4\l0x00003a90      mov esi, r15d                                          ; int64_t arg2\l0x00003a93      call dbg.start_lines\l0x00003a98      test eax, eax\l0x00003a9a      je 0x3d9f\l"]
	"0x00003aa0" [URL="dbg.main/0x00003aa0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003aa0      shr eax, 0x1f\l0x00003aa3      mov dword [var_60h], eax\l0x00003aa7      jmp 0x386c\l"]
	"0x00003aac" [URL="dbg.main/0x00003aac", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2e87\l0x00003aac      xor r13d, r13d\l0x00003aaf      mov ecx, 0x1400\l"]
	"0x00003ab4" [URL="dbg.main/0x00003ab4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3ac8, 0x3cd6\l0x00003ab4      lea rax, [rdx + 1]\l0x00003ab8      jmp 0x2e9b\l"]
	"0x00003abd" [URL="dbg.main/0x00003abd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2e7e\l0x00003abd      mov r13d, 1\l0x00003ac3      mov ecx, 0xa\l0x00003ac8      jmp 0x3ab4\l"]
	"0x00003aca" [URL="dbg.main/0x00003aca", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x37b1\l0x00003aca      mov edx, 5\l0x00003acf      lea rsi, str.standard_input                            ; 0xdf7d ; \"standard input\"\l0x00003ad6      xor edi, edi\l0x00003ad8      call sym.imp.dcgettext\l0x00003add      mov r12, rax\l0x00003ae0      jmp 0x37b7\l"]
	"0x00003ae5" [URL="dbg.main/0x00003ae5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2fb0\l0x00003ae5      mov qword [errname], 1\l0x00003aee      lea rbx, [global_dummy_stdin]                          ; 0x13028\l0x00003af5      jmp 0x2fc4\l"]
	"0x00003afa" [URL="dbg.main/0x00003afa", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x32a6\l0x00003afa      mov rsi, qword [var_40h]                               ; int64_t arg2\l0x00003aff      mov edi, 4                                             ; int64_t arg1\l0x00003b04      call sym.quotearg_style\l0x00003b09      mov edx, 5\l0x00003b0e      lea rsi, str.cannot_fstat__s                           ; 0xe201 ; \"cannot fstat %s\"\l0x00003b15      xor edi, edi\l0x00003b17      mov r13, rax\l0x00003b1a      call sym.imp.dcgettext\l0x00003b1f      mov r12, rax\l0x00003b22      call sym.imp.__errno_location\l0x00003b27      mov rcx, r13\l0x00003b2a      mov rdx, r12                                           ; char *format\l0x00003b2d      xor edi, edi                                           ; int status\l0x00003b2f      mov esi, dword [rax]                                   ; int errname\l0x00003b31      xor eax, eax\l0x00003b33      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00003b38      mov byte [var_60h], 0\l0x00003b3d      jmp 0x386c\l"]
	"0x00003b42" [URL="dbg.main/0x00003b42", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3533\l0x00003b42      mov rsi, qword [var_40h]                               ; int64_t arg2\l0x00003b47      mov edi, 4                                             ; int64_t arg1\l0x00003b4c      call sym.quotearg_style\l0x00003b51      xor edi, edi\l0x00003b53      mov edx, 5\l0x00003b58      lea rsi, str.cannot_fstat__s                           ; 0xe201 ; \"cannot fstat %s\"\l0x00003b5f      mov r13, rax\l0x00003b62      call sym.imp.dcgettext\l0x00003b67      mov r12, rax\l0x00003b6a      call sym.imp.__errno_location\l0x00003b6f      mov rcx, r13\l0x00003b72      mov rdx, r12                                           ; char *format\l0x00003b75      xor edi, edi                                           ; int status\l0x00003b77      mov esi, dword [rax]                                   ; int errname\l0x00003b79      xor eax, eax\l0x00003b7b      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00003b80      jmp 0x35d1\l"]
	"0x00003b85" [URL="dbg.main/0x00003b85", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3929\l0x00003b85      cmp qword [var_30h], 0\l0x00003b8b      js 0x392f\l"]
	"0x00003b91" [URL="dbg.main/0x00003b91", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003b91      mov eax, dword [var_1a8h]\l0x00003b98      and eax, obj._IO_stdin_used                            ; 0xd000\l0x00003b9d      cmp eax, sym.hash_get_n_entries                        ; 0x8000\l0x00003ba2      jne 0x41d8\l"]
	"0x00003ba8" [URL="dbg.main/0x00003ba8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003ba8      mov rbx, qword [var_1c0h]\l0x00003bb0      or rbp, 0xffffffffffffffff\l"]
	"0x00003bb4" [URL="dbg.main/0x00003bb4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4200\l0x00003bb4      mov rax, qword [var_1c8h]\l0x00003bbc      movabs rdx, 0x1fffffffffffffff                         ; 2305843009213693951\l0x00003bc6      lea rcx, [rax - 1]\l0x00003bca      cmp rcx, rdx\l0x00003bcd      mov edx, 0x200\l0x00003bd2      cmova rax, rdx\l0x00003bd6      cmp rbx, rax\l0x00003bd9      jle 0x392f\l"]
	"0x00003bdf" [URL="dbg.main/0x00003bdf", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003bdf      cmp rbp, 0xffffffffffffffff\l0x00003be3      je 0x46c6\l"]
	"0x00003be9" [URL="dbg.main/0x00003be9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x46db\l0x00003be9      cmp rbx, rbp\l0x00003bec      jle 0x3bff\l"]
	"0x00003bee" [URL="dbg.main/0x00003bee", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003bee      mov rax, rbx\l0x00003bf1      sub rax, rbp\l0x00003bf4      cmp qword [var_30h], rax\l0x00003bf9      jb 0x478d\l"]
	"0x00003bff" [URL="dbg.main/0x00003bff", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3bec, 0x47a5\l0x00003bff      mov qword [var_a0h], rbp\l0x00003c07      jmp 0x35b0\l"]
	"0x00003c0c" [URL="dbg.main/0x00003c0c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3849\l0x00003c0c      movsx ebp, byte [obj.line_end]                         ; [0x13114:1]=0\l0x00003c13      cmp byte [rbx + rcx - 1], bpl\l0x00003c18      je 0x3c28\l"]
	"0x00003c1a" [URL="dbg.main/0x00003c1a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003c1a      add qword [rbx + 0x2008], 1\l0x00003c22      add qword [var_28h], 1\l"]
	"0x00003c28" [URL="dbg.main/0x00003c28", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3c18\l0x00003c28      mov rdx, qword [var_30h]\l0x00003c2d      mov rbx, qword [var_28h]\l0x00003c32      sub rbx, qword [r13 + 0x2008]\l0x00003c39      cmp rdx, rbx\l0x00003c3c      jae 0x47f0\l"]
	"0x00003c42" [URL="dbg.main/0x00003c42", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003c42      mov r14, r13\l0x00003c45      jmp 0x3c4a\l"]
	"0x00003c47" [URL="dbg.main/0x00003c47", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3c5e\l0x00003c47      mov rbx, rax\l"]
	"0x00003c4a" [URL="dbg.main/0x00003c4a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3c45\l0x00003c4a      mov r14, qword [r14 + 0x2010]\l0x00003c51      mov rax, rbx\l0x00003c54      sub rax, qword [r14 + 0x2008]\l0x00003c5b      cmp rdx, rax\l0x00003c5e      jb 0x3c47\l"]
	"0x00003c60" [URL="dbg.main/0x00003c60", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x47f8\l0x00003c60      mov r12, qword [r14 + sym._init]                       ; [0x2000:8]=0x200\l0x00003c67      mov rax, qword [var_30h]\l0x00003c6c      mov rdi, r14\l0x00003c6f      add r12, r14\l0x00003c72      cmp rax, rbx\l0x00003c75      jae 0x3c8b\l"]
	"0x00003c77" [URL="dbg.main/0x00003c77", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003c77      sub rbx, rax\l"]
	"0x00003c7a" [URL="dbg.main/0x00003c7a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3c89\l0x00003c7a      mov esi, ebp\l0x00003c7c      call sym.imp.rawmemchr\l0x00003c81      lea rdi, [rax + 1]\l0x00003c85      sub rbx, 1\l0x00003c89      jne 0x3c7a\l"]
	"0x00003c8b" [URL="dbg.main/0x00003c8b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3c75\l0x00003c8b      sub r12, rdi\l0x00003c8e      jne 0x4172\l"]
	"0x00003c94" [URL="dbg.main/0x00003c94", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x417a\l0x00003c94      mov rbx, qword [r14 + 0x2010]\l0x00003c9b      test rbx, rbx\l0x00003c9e      je 0x3cc0\l"]
	"0x00003ca0" [URL="dbg.main/0x00003ca0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3cbe\l0x00003ca0      mov rsi, qword [rbx + sym._init]                       ; [0x2000:8]=0x200\l0x00003ca7      test rsi, rsi\l0x00003caa      je 0x3cb4\l"]
	"0x00003cac" [URL="dbg.main/0x00003cac", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003cac      mov rdi, rbx                                           ; int64_t arg2\l0x00003caf      call sym.xwrite_stdout.part.0\l"]
	"0x00003cb4" [URL="dbg.main/0x00003cb4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3caa\l0x00003cb4      mov rbx, qword [rbx + 0x2010]\l0x00003cbb      test rbx, rbx\l0x00003cbe      jne 0x3ca0\l"]
	"0x00003cc0" [URL="dbg.main/0x00003cc0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3c9e\l0x00003cc0      movzx eax, byte [var_20h]\l0x00003cc5      mov byte [var_60h], al\l0x00003cc9      jmp 0x3858\l"]
	"0x00003cce" [URL="dbg.main/0x00003cce", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2e75\l0x00003cce      xor r13d, r13d\l0x00003cd1      mov ecx, 0xa\l0x00003cd6      jmp 0x3ab4\l"]
	"0x00003cdb" [URL="dbg.main/0x00003cdb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3900\l0x00003cdb      mov edx, 5\l0x00003ce0      lea rsi, str.standard_input                            ; 0xdf7d ; \"standard input\"\l0x00003ce7      xor edi, edi\l0x00003ce9      call sym.imp.dcgettext\l0x00003cee      mov rbp, rax\l0x00003cf1      jmp 0x3906\l"]
	"0x00003cf6" [URL="dbg.main/0x00003cf6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x397f\l0x00003cf6      mov edi, 0x2010                                        ; '\\x10 ' ; size_t size\l0x00003cfb      call sym.xmalloc                                       ;  void *xmalloc(size_t size)\l0x00003d00      jmp 0x3992\l"]
	"0x00003d05" [URL="dbg.main/0x00003d05", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3012\l0x00003d05      cmp qword [var_90h], 0\l0x00003d0e      jne 0x3083\l"]
	"0x00003d14" [URL="dbg.main/0x00003d14", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x307d\l0x00003d14      xor eax, eax\l0x00003d16      cmp byte [obj.from_start], 0                           ; [0x13116:1]=1\l0x00003d1d      jne 0x3083\l"]
	"0x00003d23" [URL="dbg.main/0x00003d23", fillcolor="white",color="#767676", fontname="Courier",label="0x00003d23      jmp 0x3a3a\l"]
	"0x00003d28" [URL="dbg.main/0x00003d28", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x32d9\l0x00003d28      mov edx, 1\l0x00003d2d      xor esi, esi\l0x00003d2f      mov edi, r15d\l0x00003d32      call sym.imp.lseek\l0x00003d37      mov r12, rax\l0x00003d3a      cmp rax, 0xffffffffffffffff\l0x00003d3e      je 0x32df\l"]
	"0x00003d44" [URL="dbg.main/0x00003d44", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003d44      mov edx, 2\l0x00003d49      xor esi, esi\l0x00003d4b      mov edi, r15d\l0x00003d4e      call sym.imp.lseek\l0x00003d53      mov r8, rax\l0x00003d56      cmp r12, rax\l0x00003d59      jge 0x47ba\l"]
	"0x00003d5f" [URL="dbg.main/0x00003d5f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003d5f      mov qword [var_a0h], rax\l0x00003d67      movzx eax, byte [var_20h]\l0x00003d6c      mov byte [var_60h], al\l0x00003d70      test r8, r8\l0x00003d73      je 0x386c\l"]
	"0x00003d79" [URL="dbg.main/0x00003d79", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003d79      mov rdx, qword [var_30h]                               ; int64_t arg3\l0x00003d7e      mov rdi, qword [var_40h]                               ; int64_t arg1\l0x00003d83      mov rcx, r12                                           ; int64_t arg4\l0x00003d86      mov esi, r15d                                          ; int64_t arg2\l0x00003d89      lea r9, [var_a0h]                                      ; int64_t arg6\l0x00003d91      call dbg.file_lines\l0x00003d96      mov byte [var_60h], al\l0x00003d9a      jmp 0x386c\l"]
	"0x00003d9f" [URL="dbg.main/0x00003d9f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3a9a\l0x00003d9f      mov rsi, qword [var_40h]                               ; int64_t arg2\l0x00003da4      or rcx, 0xffffffffffffffff                             ; int64_t arg4\l0x00003da8      mov edx, r15d                                          ; int64_t arg3\l0x00003dab      xor edi, edi                                           ; int64_t arg1\l0x00003dad      call dbg.dump_remainder\l0x00003db2      add qword [var_a0h], rax\l0x00003dba      jmp 0x386c\l"]
	"0x00003dbf" [URL="dbg.main/0x00003dbf", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3a26\l0x00003dbf      xor edi, edi                                           ; int fildes\l0x00003dc1      call sym.imp.close                                     ; int close(int fildes)\l0x00003dc6      test eax, eax\l0x00003dc8      jns 0x3a2c\l"]
	"0x00003dce" [URL="dbg.main/0x00003dce", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003dce      call sym.imp.__errno_location\l0x00003dd3      lea rdx, [0x0000e0f4]                                  ; u\"-b\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u2500\\u3a73\\u2520s\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u696c\\u656es\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u7962\\u6574s\\u6b62\\u6d4b\\u474d\\u5054\\u5a45\\u3059\\u2d00\\u662d\\u6c6f\\u6f6cw\\u6e69\\u6176\\u696c\\u2064\\u4950D\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\" ; char *format\l0x00003dda      mov edi, 1                                             ; int status\l0x00003ddf      mov esi, dword [rax]                                   ; int errname\l0x00003de1      xor eax, eax\l0x00003de3      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00003de8" [URL="dbg.main/0x00003de8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3a19\l0x00003de8      mov r12, qword [var_58h]\l0x00003ded      mov r13, qword [var_50h]\l0x00003df2      xor ebp, ebp\l0x00003df4      lea rbx, [0x0000e0f4]                                  ; u\"-b\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u2500\\u3a73\\u2520s\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u696c\\u656es\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u7962\\u6574s\\u6b62\\u6d4b\\u474d\\u5054\\u5a45\\u3059\\u2d00\\u662d\\u6c6f\\u6f6cw\\u6e69\\u6176\\u696c\\u2064\\u4950D\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\"\l"]
	"0x00003dfb" [URL="dbg.main/0x00003dfb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3e3b\l0x00003dfb      mov rdi, qword [r12]                                   ; const char *s1\l0x00003dff      mov rsi, rbx                                           ; const char *s2\l0x00003e02      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x00003e07      test eax, eax\l0x00003e09      jne 0x3e30\l"]
	"0x00003e0b" [URL="dbg.main/0x00003e0b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003e0b      cmp byte [r12 + 0x34], 0\l0x00003e11      jne 0x3e30\l"]
	"0x00003e13" [URL="dbg.main/0x00003e13", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003e13      cmp dword [r12 + 0x38], 0\l0x00003e19      js 0x3e30\l"]
	"0x00003e1b" [URL="dbg.main/0x00003e1b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003e1b      mov eax, dword [r12 + 0x30]\l0x00003e20      and eax, 0xf000\l0x00003e25      cmp eax, 0x1000\l0x00003e2a      je 0x409f\l"]
	"0x00003e30" [URL="dbg.main/0x00003e30", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3e09, 0x3e11, 0x3e19\l0x00003e30      add rbp, 1\l"]
	"0x00003e34" [URL="dbg.main/0x00003e34", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x40ae\l0x00003e34      add r12, 0x60\l0x00003e38      cmp r13, r12\l0x00003e3b      jne 0x3dfb\l"]
	"0x00003e3d" [URL="dbg.main/0x00003e3d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003e3d      test rbp, rbp\l0x00003e40      je 0x3a1f\l"]
	"0x00003e46" [URL="dbg.main/0x00003e46", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003e46      lea rsi, [var_100h]                                    ; void *buf\l0x00003e4e      mov edi, 1                                             ; int fildes\l0x00003e53      call sym.imp.fstat                                     ; int fstat(int fildes, void *buf)\l0x00003e58      test eax, eax\l0x00003e5a      js 0x4b59\l"]
	"0x00003e60" [URL="dbg.main/0x00003e60", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003e60      mov eax, dword [var_118h]\l0x00003e67      and eax, 0xf000\l0x00003e6c      cmp eax, 0x1000\l0x00003e71      sete byte [obj.monitor_output]\l0x00003e78      cmp byte [obj.disable_inotify], 0                      ; [0x1310c:1]=1\l0x00003e7f      jne 0x3ef3\l"]
	"0x00003e81" [URL="dbg.main/0x00003e81", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003e81      mov rbp, qword [var_58h]\l0x00003e86      mov r12, qword [var_50h]\l"]
	"0x00003e8b" [URL="dbg.main/0x00003e8b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3ea8\l0x00003e8b      cmp byte [rbp + 0x34], 0\l0x00003e8f      jne 0x3ea1\l"]
	"0x00003e91" [URL="dbg.main/0x00003e91", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003e91      mov rdi, qword [rbp]                                   ; const char *s1\l0x00003e95      mov rsi, rbx                                           ; const char *s2\l0x00003e98      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x00003e9d      test eax, eax\l0x00003e9f      je 0x3ef3\l"]
	"0x00003ea1" [URL="dbg.main/0x00003ea1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3e8f\l0x00003ea1      add rbp, 0x60\l0x00003ea5      cmp rbp, r12\l0x00003ea8      jne 0x3e8b\l"]
	"0x00003eaa" [URL="dbg.main/0x00003eaa", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003eaa      mov rdx, qword [var_58h]\l0x00003eaf      mov rcx, qword [var_70h]\l0x00003eb4      xor eax, eax\l"]
	"0x00003eb6" [URL="dbg.main/0x00003eb6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3ecb\l0x00003eb6      cmp dword [rdx + rax + 0x38], 0\l0x00003ebb      js 0x3ec4\l"]
	"0x00003ebd" [URL="dbg.main/0x00003ebd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003ebd      cmp byte [rdx + rax + 0x35], 0\l0x00003ec2      jne 0x3ef3\l"]
	"0x00003ec4" [URL="dbg.main/0x00003ec4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3ebb\l0x00003ec4      add rax, 0x60\l0x00003ec8      cmp rax, rcx\l0x00003ecb      jne 0x3eb6\l"]
	"0x00003ecd" [URL="dbg.main/0x00003ecd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003ecd      mov rdx, qword [var_58h]\l0x00003ed2      xor eax, eax\l"]
	"0x00003ed4" [URL="dbg.main/0x00003ed4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3ef1\l0x00003ed4      cmp dword [rdx + rax + 0x38], 0\l0x00003ed9      js 0x3ee8\l"]
	"0x00003edb" [URL="dbg.main/0x00003edb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003edb      movzx ecx, byte [rdx + rax + 0x35]\l0x00003ee0      test cl, cl\l0x00003ee2      je 0x4887\l"]
	"0x00003ee8" [URL="dbg.main/0x00003ee8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3ed9\l0x00003ee8      add rax, 0x60\l0x00003eec      cmp rax, qword [var_70h]\l0x00003ef1      jne 0x3ed4\l"]
	"0x00003ef3" [URL="dbg.main/0x00003ef3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x00003e7f  CODE 0x00003e9f  CODE 0x00003ec2  \l; XREFS: CODE 0x000048b8  CODE 0x000048ef  CODE 0x00004911  \l; XREFS: CODE 0x00004b10  \l0x00003ef3      mov ebp, dword [obj.pid]                               ; [0x13110:4]=0\l0x00003ef9      mov byte [obj.disable_inotify], 1                      ; [0x1310c:1]=1\l0x00003f00      test ebp, ebp\l0x00003f02      je 0x47fd\l"]
	"0x00003f08" [URL="dbg.main/0x00003f08", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003f08      xor ebp, ebp\l"]
	"0x00003f0a" [URL="dbg.main/0x00003f0a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x4804, 0x4810, 0x481f, 0x483c\l0x00003f0a      mov eax, ebp\l0x00003f0c      mov rbx, qword [var_70h]\l0x00003f11      mov byte [var_3ch], 0\l0x00003f16      and eax, 1\l0x00003f19      mov byte [var_28h], al\l0x00003f1d      mov rax, qword [errname]\l0x00003f22      sub rax, 1\l0x00003f26      mov qword [s1], rax\l0x00003f2b      mov rax, qword [var_58h]\l0x00003f30      lea rax, [rax + rbx + 0x34]\l0x00003f35      mov qword [var_20h], rax\l"]
	"0x00003f3a" [URL="dbg.main/0x00003f3a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x445a, 0x448b, 0x44a4, 0x44d0, 0x461a\l0x00003f3a      mov byte [size], 0\l0x00003f3f      mov r14, qword [var_58h]\l0x00003f44      xor ebx, ebx\l0x00003f46      jmp 0x4001\l"]
	"0x00003f50" [URL="dbg.main/0x00003f50", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x400f\l0x00003f50      mov r15, qword [r14]\l0x00003f53      cmp byte [r15], 0x2d\l0x00003f57      jne 0x3f76\l"]
	"0x00003f59" [URL="dbg.main/0x00003f59", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003f59      cmp byte [r15 + 1], 0\l0x00003f5e      jne 0x3f76\l"]
	"0x00003f60" [URL="dbg.main/0x00003f60", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003f60      mov edx, 5\l0x00003f65      lea rsi, str.standard_input                            ; 0xdf7d ; \"standard input\"\l0x00003f6c      xor edi, edi\l0x00003f6e      call sym.imp.dcgettext\l0x00003f73      mov r15, rax\l"]
	"0x00003f76" [URL="dbg.main/0x00003f76", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3f57, 0x3f5e\l0x00003f76      mov eax, dword [r14 + 0x40]\l0x00003f7a      mov r12d, dword [r14 + 0x30]\l0x00003f7e      cmp ebp, eax\l0x00003f80      je 0x3fc8\l"]
	"0x00003f82" [URL="dbg.main/0x00003f82", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003f82      xor eax, eax\l0x00003f84      mov esi, 3                                             ; signed int arg2\l0x00003f89      mov edi, r13d                                          ; int64_t arg1\l0x00003f8c      call dbg.rpl_fcntl\l0x00003f91      test ebp, ebp\l0x00003f93      jne 0x4300\l"]
	"0x00003f99" [URL="dbg.main/0x00003f99", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003f99      test eax, eax\l0x00003f9b      js 0x4308\l"]
	"0x00003fa1" [URL="dbg.main/0x00003fa1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003fa1      mov edx, eax\l0x00003fa3      or dh, 8\l0x00003fa6      cmp eax, edx\l0x00003fa8      je 0x3fc2\l"]
	"0x00003faa" [URL="dbg.main/0x00003faa", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003faa      xor eax, eax\l0x00003fac      mov esi, 4                                             ; signed int arg2\l0x00003fb1      mov edi, r13d                                          ; int64_t arg1\l0x00003fb4      call dbg.rpl_fcntl\l0x00003fb9      cmp eax, 0xffffffff\l0x00003fbc      je 0x4308\l"]
	"0x00003fc2" [URL="dbg.main/0x00003fc2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3fa8, 0x4302\l0x00003fc2      mov dword [r14 + 0x40], ebp\l0x00003fc6      mov eax, ebp\l"]
	"0x00003fc8" [URL="dbg.main/0x00003fc8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3f80, 0x4330\l0x00003fc8      mov rcx, 0xfffffffffffffffe\l0x00003fcf      test eax, eax\l0x00003fd1      je 0x4240\l"]
	"0x00003fd7" [URL="dbg.main/0x00003fd7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x42d4, 0x42df, 0x42f1, 0x4c5a\l0x00003fd7      mov edx, r13d                                          ; int64_t arg3\l0x00003fda      xor edi, edi                                           ; int64_t arg1\l0x00003fdc      mov rsi, r15                                           ; int64_t arg2\l0x00003fdf      call dbg.dump_remainder\l0x00003fe4      test rax, rax\l0x00003fe7      setne dl\l0x00003fea      add qword [r14 + 8], rax\l0x00003fee      or byte [size], dl\l"]
	"0x00003ff2" [URL="dbg.main/0x00003ff2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x4006, 0x439c, 0x43a9, 0x43ca, 0x4546\l0x00003ff2      add rbx, 1\l0x00003ff6      add r14, 0x60\l0x00003ffa      cmp qword [errname], rbx\l; DATA XREF from dbg.fremote @ 0x55ba\l0x00003fff      je 0x402e\l"]
	"0x00004001" [URL="dbg.main/0x00004001", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3f46, 0x402c\l0x00004001      cmp byte [r14 + 0x34], 0\l; DATA XREF from dbg.fremote @ 0x55ad\l0x00004006      jne 0x3ff2\l"]
	"0x00004008" [URL="dbg.main/0x00004008", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004008      mov r13d, dword [r14 + 0x38]\l0x0000400c      test r13d, r13d\l0x0000400f      jns 0x3f50\l"]
	"0x00004015" [URL="dbg.main/0x00004015", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004015      mov rdi, r14                                           ; int64_t arg1\l0x00004018      mov esi, ebp                                           ; int64_t arg2\l0x0000401a      add rbx, 1\l0x0000401e      add r14, 0x60\l0x00004022      call dbg.recheck\l0x00004027      cmp qword [errname], rbx\l0x0000402c      jne 0x4001\l"]
	"0x0000402e" [URL="dbg.main/0x0000402e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3fff\l0x0000402e      movzx edx, byte [obj.reopen_inaccessible_files]        ; [0x1311a:1]=0\l0x00004035      test dl, dl\l0x00004037      je 0x4046\l"]
	"0x00004039" [URL="dbg.main/0x00004039", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004039      cmp dword [obj.follow_mode], 1                         ; [0x13020:4]=2\l0x00004040      je 0x443d\l"]
	"0x00004046" [URL="dbg.main/0x00004046", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4037\l0x00004046      mov rax, qword [var_58h]\l0x0000404b      mov rcx, qword [var_20h]\l0x00004050      add rax, 0x34\l0x00004054      nop dword [rax]\l"]
	"0x00004058" [URL="dbg.main/0x00004058", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4077\l0x00004058      mov esi, dword [rax + 4]\l0x0000405b      test esi, esi\l0x0000405d      jns 0x443d\l"]
	"0x00004063" [URL="dbg.main/0x00004063", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004063      cmp byte [rax], 1\l0x00004066      je 0x4070\l"]
	"0x00004068" [URL="dbg.main/0x00004068", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004068      test dl, dl\l0x0000406a      jne 0x443d\l"]
	"0x00004070" [URL="dbg.main/0x00004070", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4066\l0x00004070      add rax, 0x60\l0x00004074      cmp rax, rcx\l0x00004077      jne 0x4058\l"]
	"0x00004079" [URL="dbg.main/0x00004079", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004079      xor edi, edi\l0x0000407b      mov edx, 5\l0x00004080      lea rsi, str.no_files_remaining                        ; 0xe24d ; \"no files remaining\"\l0x00004087      call sym.imp.dcgettext\l0x0000408c      xor esi, esi                                           ; int errname\l0x0000408e      xor edi, edi                                           ; int status\l0x00004090      mov rdx, rax                                           ; char *format\l0x00004093      xor eax, eax\l0x00004095      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x0000409a      jmp 0x3a1f\l"]
	"0x0000409f" [URL="dbg.main/0x0000409f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3e2a\l0x0000409f      mov dword [r12 + 0x38], 0xffffffff                     ; [0xffffffff:4]=0 ; -1\l0x000040a8      mov byte [r12 + 0x34], 1\l0x000040ae      jmp 0x3e34\l"]
	"0x000040b3" [URL="dbg.main/0x000040b3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x36fc\l0x000040b3      movzx eax, byte [obj.reopen_inaccessible_files]        ; [0x1311a:1]=0\l0x000040ba      mov rcx, qword [size]\l0x000040bf      lea rbx, [0x0000ea41]\l0x000040c6      xor eax, 1\l0x000040c9      mov dword [rcx + 0x3c], 0xffffffff                     ; [0xffffffff:4]=0 ; -1\l0x000040d0      mov byte [rcx + 0x36], 0\l0x000040d4      mov byte [rcx + 0x34], al\l0x000040d7      test al, al\l0x000040d9      jne 0x4205\l"]
	"0x000040df" [URL="dbg.main/0x000040df", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x421b\l0x000040df      mov rax, qword [size]\l0x000040e4      lea rsi, [0x0000e0f4]                                  ; u\"-b\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u2500\\u3a73\\u2520s\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u696c\\u656es\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u7962\\u6574s\\u6b62\\u6d4b\\u474d\\u5054\\u5a45\\u3059\\u2d00\\u662d\\u6c6f\\u6f6cw\\u6e69\\u6176\\u696c\\u2064\\u4950D\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\" ; const char *s2\l0x000040eb      mov r12, qword [rax]\l0x000040ee      mov rdi, r12                                           ; const char *s1\l0x000040f1      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x000040f6      test eax, eax\l0x000040f8      je 0x4220\l"]
	"0x000040fe" [URL="dbg.main/0x000040fe", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4236\l0x000040fe      mov rdx, r12                                           ; int64_t arg3\l0x00004101      xor edi, edi                                           ; int64_t arg1\l0x00004103      mov esi, 3                                             ; int64_t arg2\l0x00004108      call sym.quotearg_n_style_colon\l0x0000410d      xor edi, edi\l0x0000410f      mov edx, 5\l0x00004114      lea rsi, str._s:_cannot_follow_end_of_this_type_of_file_s ; 0xde10 ; \"%s: cannot follow end of this type of file%s\"\l0x0000411b      mov r12, rax\l0x0000411e      call sym.imp.dcgettext\l0x00004123      mov r8, rbx\l0x00004126      mov rcx, r12\l0x00004129      xor esi, esi                                           ; int errname\l0x0000412b      mov rdx, rax                                           ; char *format\l0x0000412e      xor edi, edi                                           ; int status\l0x00004130      xor eax, eax\l0x00004132      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00004137      jmp 0x38da\l"]
	"0x0000413c" [URL="dbg.main/0x0000413c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 58...69:                                                      ; from 0x00002b84\l;-- case 71:                                                           ; from 0x00002b84\l;-- case 72...98:                                                      ; from 0x00002b84\l;-- case 100:                                                          ; from 0x00002b84\l;-- case 101:                                                          ; from 0x00002b84\l;-- case 104...109:                                                    ; from 0x00002b84\l;-- case 111:                                                          ; from 0x00002b84\l;-- case 112:                                                          ; from 0x00002b84\l;-- case 116...117:                                                    ; from 0x00002b84\l;-- case 119:                                                          ; from 0x00002b84\l;-- case 120...121:                                                    ; from 0x00002b84\l;-- case 123:                                                          ; from 0x00002b84\l;-- default:                                                           ; from 0x2b84\l; CODE XREFS from dbg.main @ 0x2b61, 0x2b76, 0x2b84, 0x2df6\l0x0000413c      mov edi, 1                                             ; int64_t arg1\l0x00004141      call dbg.usage\l"]
	"0x00004146" [URL="dbg.main/0x00004146", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 48...57:                                                      ; from 0x00002b84\l; CODE XREF from dbg.main @ 0x2b84\l0x00004146      mov edx, 5\l0x0000414b      lea rsi, str.option_used_in_invalid_context_____c      ; 0xdcb8 ; \"option used in invalid context -- %c\"\l0x00004152      xor edi, edi\l0x00004154      mov dword [errname], eax\l0x00004158      call sym.imp.dcgettext\l0x0000415d      mov ecx, dword [errname]\l0x00004161      xor esi, esi                                           ; int errname\l0x00004163      mov edi, 1                                             ; int status\l0x00004168      mov rdx, rax                                           ; char *format\l0x0000416b      xor eax, eax\l0x0000416d      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00004172" [URL="dbg.main/0x00004172", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3c8e\l0x00004172      mov rsi, r12\l0x00004175      call sym.xwrite_stdout.part.0\l0x0000417a      jmp 0x3c94\l"]
	"0x0000417f" [URL="dbg.main/0x0000417f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2f7f\l0x0000417f      call sym.imp.__errno_location\l0x00004184      cmp dword [rax], 0x26\l0x00004187      jne 0x2f85\l"]
	"0x0000418d" [URL="dbg.main/0x0000418d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000418d      mov edx, 5\l0x00004192      lea rsi, str.warning:___pidPID_is_not_supported_on_this_system ; 0xdd98 ; \"warning: --pid=PID is not supported on this system\"\l0x00004199      xor edi, edi\l0x0000419b      call sym.imp.dcgettext\l0x000041a0      xor esi, esi                                           ; int errname\l0x000041a2      xor edi, edi                                           ; int status\l0x000041a4      mov rdx, rax                                           ; char *format\l0x000041a7      xor eax, eax\l0x000041a9      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x000041ae      mov dword [obj.pid], 0                                 ; [0x13110:4]=0\l0x000041b8      jmp 0x2f85\l"]
	"0x000041bd" [URL="dbg.main/0x000041bd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3612\l0x000041bd      mov edx, 5\l0x000041c2      lea rsi, str.standard_input                            ; 0xdf7d ; \"standard input\"\l0x000041c9      xor edi, edi\l0x000041cb      call sym.imp.dcgettext\l0x000041d0      mov rbp, rax\l0x000041d3      jmp 0x3618\l"]
	"0x000041d8" [URL="dbg.main/0x000041d8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3ba2\l0x000041d8      mov rbx, qword [var_30h]\l0x000041dd      mov edx, 2\l0x000041e2      mov edi, r15d\l0x000041e5      mov rsi, rbx\l0x000041e8      neg rsi\l0x000041eb      call sym.imp.lseek\l0x000041f0      mov rbp, rax\l0x000041f3      cmp rax, 0xffffffffffffffff\l0x000041f7      je 0x392f\l"]
	"0x000041fd" [URL="dbg.main/0x000041fd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000041fd      add rbx, rax\l0x00004200      jmp 0x3bb4\l"]
	"0x00004205" [URL="dbg.main/0x00004205", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x40d9\l0x00004205      mov edx, 5\l0x0000420a      lea rsi, str.__giving_up_on_this_name                  ; 0xdff3 ; \"; giving up on this name\"\l0x00004211      xor edi, edi\l0x00004213      call sym.imp.dcgettext\l0x00004218      mov rbx, rax\l0x0000421b      jmp 0x40df\l"]
	"0x00004220" [URL="dbg.main/0x00004220", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x40f8\l0x00004220      mov edx, 5\l0x00004225      lea rsi, str.standard_input                            ; 0xdf7d ; \"standard input\"\l0x0000422c      xor edi, edi\l0x0000422e      call sym.imp.dcgettext\l0x00004233      mov r12, rax\l0x00004236      jmp 0x40fe\l"]
	"0x00004240" [URL="dbg.main/0x00004240", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3fd1\l0x00004240      lea rsi, [buf]                                         ; void *buf\l0x00004248      mov edi, r13d                                          ; int fildes\l0x0000424b      call sym.imp.fstat                                     ; int fstat(int fildes, void *buf)\l0x00004250      test eax, eax\l0x00004252      jne 0x4502\l"]
	"0x00004258" [URL="dbg.main/0x00004258", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004258      mov eax, dword [var_1a8h]\l0x0000425f      cmp dword [r14 + 0x30], eax\l0x00004263      je 0x4335\l"]
	"0x00004269" [URL="dbg.main/0x00004269", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x4383, 0x45e9\l0x00004269      mov rdx, qword [var_1e8h]\l0x00004271      and r12d, 0xf000\l0x00004278      mov dword [r14 + 0x30], eax\l0x0000427c      mov qword [r14 + 0x58], 0\l0x00004284      mov qword [r14 + 0x10], rdx\l0x00004288      mov rdx, qword [var_1f0h]\l0x00004290      mov qword [r14 + 0x18], rdx\l0x00004294      cmp r12d, sym.hash_get_n_entries                       ; 0x8000\l0x0000429b      je 0x43cf\l"]
	"0x000042a1" [URL="dbg.main/0x000042a1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x43db, 0x4438\l0x000042a1      cmp rbx, qword [s1]\l0x000042a6      je 0x42b5\l"]
	"0x000042a8" [URL="dbg.main/0x000042a8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000042a8      cmp byte [obj.print_headers], 0                        ; [0x13115:1]=1\l0x000042af      jne 0x454b\l"]
	"0x000042b5" [URL="dbg.main/0x000042b5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x42a6, 0x4581\l0x000042b5      mov edi, dword [r14 + 0x40]\l0x000042b9      mov qword [s1], rbx\l0x000042be      test edi, edi\l0x000042c0      jne 0x4c53\l"]
	"0x000042c6" [URL="dbg.main/0x000042c6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000042c6      mov rcx, 0xffffffffffffffff\l0x000042cd      cmp r12d, sym.hash_get_n_entries                       ; 0x8000\l0x000042d4      jne 0x3fd7\l"]
	"0x000042da" [URL="dbg.main/0x000042da", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000042da      cmp byte [r14 + 0x35], 0\l0x000042df      je 0x3fd7\l"]
	"0x000042e5" [URL="dbg.main/0x000042e5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; DATA XREF from sym.quotearg_buffer_restyled @ 0xa323\l0x000042e5      mov rcx, qword [var_1c0h]\l0x000042ed      sub rcx, qword [r14 + 8]\l0x000042f1      jmp 0x3fd7\l"]
	"0x00004300" [URL="dbg.main/0x00004300", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3f93\l0x00004300      test eax, eax\l0x00004302      jns 0x3fc2\l"]
	"0x00004308" [URL="dbg.main/0x00004308", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3f9b, 0x3fbc\l0x00004308      call sym.imp.__errno_location\l0x0000430d      mov edx, dword [r14 + 0x30]\l0x00004311      and edx, 0xf000\l0x00004317      cmp edx, sym.hash_get_n_entries                        ; 0x8000\l0x0000431d      jne 0x4b15\l"]
	"0x00004323" [URL="dbg.main/0x00004323", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004323      cmp dword [rax], 1\l0x00004326      jne 0x4b15\l"]
	"0x0000432c" [URL="dbg.main/0x0000432c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000432c      mov eax, dword [r14 + 0x40]\l0x00004330      jmp 0x3fc8\l"]
	"0x00004335" [URL="dbg.main/0x00004335", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4263\l0x00004335      mov edx, eax\l0x00004337      and edx, 0xf000\l0x0000433d      cmp edx, sym.hash_get_n_entries                        ; 0x8000\l0x00004343      je 0x45dd\l"]
	"0x00004349" [URL="dbg.main/0x00004349", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x45ef\l0x00004349      mov rcx, qword [r14 + 0x10]\l0x0000434d      cmp qword [var_1e8h], rcx\l0x00004355      setl cl\l0x00004358      setg dl\l0x0000435b      mov rsi, qword [r14 + 0x18]\l0x0000435f      movzx edx, dl\l0x00004362      movzx ecx, cl\l0x00004365      sub ecx, edx\l0x00004367      xor edx, edx\l0x00004369      cmp qword [var_1f0h], rsi\l0x00004371      setg sil\l0x00004375      setl dl\l0x00004378      movzx esi, sil\l0x0000437c      sub edx, esi\l0x0000437e      lea edx, [rdx + rcx*2]\l0x00004381      test edx, edx\l0x00004383      jne 0x4269\l"]
	"0x00004389" [URL="dbg.main/0x00004389", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004389      mov rax, qword [r14 + 0x58]\l0x0000438d      cmp rax, qword [obj.max_n_unchanged_stats_between_opens] ; [0x13018:8]=2\l0x00004394      lea rdx, [rax + 1]\l0x00004398      mov qword [r14 + 0x58], rdx\l0x0000439c      jb 0x3ff2\l"]
	"0x000043a2" [URL="dbg.main/0x000043a2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000043a2      cmp dword [obj.follow_mode], 1                         ; [0x13020:4]=2\l0x000043a9      jne 0x3ff2\l"]
	"0x000043af" [URL="dbg.main/0x000043af", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000043af      xor esi, esi                                           ; int64_t arg2\l0x000043b1      cmp dword [r14 + 0x40], 0\l0x000043b6      mov rdi, r14                                           ; int64_t arg1\l0x000043b9      setne sil\l0x000043bd      call dbg.recheck\l0x000043c2      mov qword [r14 + 0x58], 0\l0x000043ca      jmp 0x3ff2\l"]
	"0x000043cf" [URL="dbg.main/0x000043cf", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x429b\l0x000043cf      mov rax, qword [r14 + 8]\l0x000043d3      cmp qword [var_1c0h], rax\l0x000043db      jge 0x42a1\l"]
	"0x000043e1" [URL="dbg.main/0x000043e1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000043e1      xor edi, edi                                           ; int64_t arg1\l0x000043e3      mov rdx, r15                                           ; int64_t arg3\l0x000043e6      mov esi, 3                                             ; int64_t arg2\l0x000043eb      call sym.quotearg_n_style_colon\l0x000043f0      xor edi, edi\l0x000043f2      mov edx, 5\l0x000043f7      lea rsi, str._s:_file_truncated                        ; 0xdf9a ; \"%s: file truncated\"\l0x000043fe      mov qword [var_30h], rax\l0x00004403      call sym.imp.dcgettext\l0x00004408      mov rcx, qword [var_30h]\l0x0000440d      xor esi, esi                                           ; int errname\l0x0000440f      xor edi, edi                                           ; int status\l0x00004411      mov rdx, rax                                           ; char *format\l0x00004414      xor eax, eax\l0x00004416      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x0000441b      xor edx, edx\l0x0000441d      xor esi, esi\l0x0000441f      mov edi, r13d\l0x00004422      call sym.imp.lseek\l0x00004427      test rax, rax\l0x0000442a      js 0x4bc7\l"]
	"0x00004430" [URL="dbg.main/0x00004430", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004430      mov qword [r14 + 8], 0\l0x00004438      jmp 0x42a1\l"]
	"0x0000443d" [URL="dbg.main/0x0000443d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x4040, 0x405d, 0x406a\l0x0000443d      cmp byte [size], 1\l0x00004442      jne 0x4586\l"]
	"0x00004448" [URL="dbg.main/0x00004448", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004448      cmp byte [var_28h], 0\l0x0000444d      jne 0x4586\l"]
	"0x00004453" [URL="dbg.main/0x00004453", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004453      cmp byte [obj.monitor_output], 0                       ; [0x13117:1]=0\l0x0000445a      je 0x3f3a\l"]
	"0x00004460" [URL="dbg.main/0x00004460", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004460      xor edx, edx\l0x00004462      mov esi, 1\l0x00004467      lea rdi, [var_a0h]\l0x0000446f      mov dword [var_a0h], 1\l0x0000447a      mov word [var_a4h], 8\l0x00004484      call sym.imp.poll\l0x00004489      test eax, eax\l0x0000448b      js 0x3f3a\l"]
	"0x00004491" [URL="dbg.main/0x00004491", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x45d2\l0x00004491      test byte [var_a6h], 8\l0x00004499      jne 0x4c13\l"]
	"0x0000449f" [URL="dbg.main/0x0000449f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x45a1, 0x45d8\l0x0000449f      cmp byte [size], 0\l0x000044a4      jne 0x3f3a\l"]
	"0x000044aa" [URL="dbg.main/0x000044aa", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000044aa      cmp byte [var_3ch], 0\l0x000044af      jne 0x3a1f\l"]
	"0x000044b5" [URL="dbg.main/0x000044b5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000044b5      mov edi, dword [obj.pid]                               ; [0x13110:4]=0\l0x000044bb      test edi, edi\l0x000044bd      jne 0x45f4\l"]
	"0x000044c3" [URL="dbg.main/0x000044c3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x45fd, 0x460b\l0x000044c3      movsd xmm0, qword [var_48h]\l0x000044c9      call dbg.xnanosleep\l0x000044ce      test eax, eax\l0x000044d0      je 0x3f3a\l"]
	"0x000044d6" [URL="dbg.main/0x000044d6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000044d6      mov edx, 5\l0x000044db      lea rsi, str.cannot_read_realtime_clock                ; 0xe27c ; \"cannot read realtime clock\"\l0x000044e2      xor edi, edi\l0x000044e4      call sym.imp.dcgettext\l0x000044e9      mov r12, rax\l0x000044ec      call sym.imp.__errno_location\l0x000044f1      mov rdx, r12                                           ; char *format\l0x000044f4      mov edi, 1                                             ; int status\l0x000044f9      mov esi, dword [rax]                                   ; int errname\l0x000044fb      xor eax, eax\l0x000044fd      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00004502" [URL="dbg.main/0x00004502", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4252\l0x00004502      mov dword [r14 + 0x38], 0xffffffff                     ; [0xffffffff:4]=0 ; -1\l0x0000450a      call sym.imp.__errno_location\l0x0000450f      mov rdx, r15                                           ; int64_t arg3\l0x00004512      xor edi, edi                                           ; int64_t arg1\l0x00004514      mov esi, 3                                             ; int64_t arg2\l0x00004519      mov r12, rax\l0x0000451c      mov eax, dword [rax]\l0x0000451e      mov dword [r14 + 0x3c], eax\l0x00004522      call sym.quotearg_n_style_colon\l0x00004527      mov esi, dword [r12]                                   ; int errname\l0x0000452b      xor edi, edi                                           ; int status\l0x0000452d      lea rdx, [0x0000e503]                                  ; \"%s\" ; char *format\l0x00004534      mov rcx, rax\l0x00004537      xor eax, eax\l0x00004539      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x0000453e      mov edi, r13d                                          ; int fildes\l0x00004541      call sym.imp.close                                     ; int close(int fildes)\l0x00004546      jmp 0x3ff2\l"]
	"0x0000454b" [URL="dbg.main/0x0000454b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x42af\l0x0000454b      cmp byte [obj.first_file.2], 0                         ; [0x13010:1]=0\l0x00004552      lea rax, [0x0000ea41]\l0x00004559      mov rcx, r15\l0x0000455c      mov edi, 1\l0x00004561      lea rdx, [0x0000ea40]                                  ; \"\\n\"\l0x00004568      lea rsi, str._s___s___n                                ; 0xdf8c ; \"%s==> %s <==\\n\"\l0x0000456f      cmovne rdx, rax\l0x00004573      xor eax, eax\l0x00004575      call sym.imp.__printf_chk\l0x0000457a      mov byte [obj.first_file.2], 0                         ; [0x13010:1]=0\l0x00004581      jmp 0x42b5\l"]
	"0x00004586" [URL="dbg.main/0x00004586", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x4442, 0x444d\l0x00004586      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0x130c8:8]=0\l0x0000458d      call sym.imp.fflush_unlocked\l0x00004592      test eax, eax\l0x00004594      jne 0x4c27\l"]
	"0x0000459a" [URL="dbg.main/0x0000459a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000459a      cmp byte [obj.monitor_output], 0                       ; [0x13117:1]=0\l0x000045a1      je 0x449f\l"]
	"0x000045a7" [URL="dbg.main/0x000045a7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000045a7      xor edx, edx\l0x000045a9      mov esi, 1\l0x000045ae      lea rdi, [var_a0h]\l0x000045b6      mov dword [var_a0h], 1\l0x000045c1      mov word [var_a4h], 8\l0x000045cb      call sym.imp.poll\l0x000045d0      test eax, eax\l0x000045d2      jns 0x4491\l"]
	"0x000045d8" [URL="dbg.main/0x000045d8", fillcolor="white",color="#767676", fontname="Courier",label="0x000045d8      jmp 0x449f\l"]
	"0x000045dd" [URL="dbg.main/0x000045dd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4343\l0x000045dd      mov rcx, qword [var_1c0h]\l0x000045e5      cmp qword [r14 + 8], rcx\l0x000045e9      jne 0x4269\l"]
	"0x000045ef" [URL="dbg.main/0x000045ef", fillcolor="white",color="#767676", fontname="Courier",label="0x000045ef      jmp 0x4349\l"]
	"0x000045f4" [URL="dbg.main/0x000045f4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x44bd\l0x000045f4      xor esi, esi                                           ; int sig\l0x000045f6      call sym.imp.kill                                      ; int kill(pid_t pid, int sig)\l0x000045fb      test eax, eax\l0x000045fd      je 0x44c3\l"]
	"0x00004603" [URL="dbg.main/0x00004603", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004603      call sym.imp.__errno_location\l0x00004608      cmp dword [rax], 1\l0x0000460b      je 0x44c3\l"]
	"0x00004611" [URL="dbg.main/0x00004611", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004611      movzx eax, byte [var_40h]\l0x00004616      mov byte [var_3ch], al\l0x0000461a      jmp 0x3f3a\l"]
	"0x0000461f" [URL="dbg.main/0x0000461f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x39b3\l0x0000461f      mov r12, rdx\l0x00004622      mov rdi, rbp                                           ; void *ptr\l0x00004625      mov rbp, r13\l0x00004628      call sym.imp.free                                      ; void free(void *ptr)\l0x0000462d      add r12, 1\l0x00004631      mov rdx, qword [var_30h]\l0x00004636      jne 0x4647\l"]
	"0x00004638" [URL="dbg.main/0x00004638", fillcolor="white",color="#767676", fontname="Courier",label="0x00004638      jmp 0x4841\l"]
	"0x0000463d" [URL="dbg.main/0x0000463d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4657\l0x0000463d      mov rbp, qword [rbp + 0x2008]\l0x00004644      mov rbx, rax\l"]
	"0x00004647" [URL="dbg.main/0x00004647", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4636\l0x00004647      mov rsi, qword [rbp + sym._init]                       ; [0x2000:8]=0x200\l0x0000464e      mov rax, rbx\l0x00004651      sub rax, rsi\l0x00004654      cmp rdx, rax\l0x00004657      jb 0x463d\l"]
	"0x00004659" [URL="dbg.main/0x00004659", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004659      mov rcx, qword [var_30h]\l0x0000465e      xor eax, eax\l0x00004660      cmp rcx, rbx\l0x00004663      jae 0x466b\l"]
	"0x00004665" [URL="dbg.main/0x00004665", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004665      mov rax, rbx\l0x00004668      sub rax, rcx\l"]
	"0x0000466b" [URL="dbg.main/0x0000466b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4663\l0x0000466b      sub rsi, rax\l0x0000466e      je 0x467a\l"]
	"0x00004670" [URL="dbg.main/0x00004670", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004670      lea rdi, [rbp + rax]                                   ; int64_t arg2\l0x00004675      call sym.xwrite_stdout.part.0\l"]
	"0x0000467a" [URL="dbg.main/0x0000467a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x466e\l0x0000467a      mov rbx, qword [rbp + 0x2008]\l0x00004681      jmp 0x469e\l"]
	"0x00004683" [URL="dbg.main/0x00004683", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x46a1\l0x00004683      mov rsi, qword [rbx + sym._init]                       ; [0x2000:8]=0x200\l0x0000468a      test rsi, rsi\l0x0000468d      je 0x4697\l"]
	"0x0000468f" [URL="dbg.main/0x0000468f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000468f      mov rdi, rbx                                           ; int64_t arg2\l0x00004692      call sym.xwrite_stdout.part.0\l"]
	"0x00004697" [URL="dbg.main/0x00004697", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x468d\l0x00004697      mov rbx, qword [rbx + 0x2008]\l"]
	"0x0000469e" [URL="dbg.main/0x0000469e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4681\l0x0000469e      test rbx, rbx\l0x000046a1      jne 0x4683\l"]
	"0x000046a3" [URL="dbg.main/0x000046a3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000046a3      mov byte [var_20h], 1\l0x000046a8      mov rdi, r13\l0x000046ab      jmp 0x46bc\l"]
	"0x000046ad" [URL="dbg.main/0x000046ad", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x46bf\l0x000046ad      mov rbx, qword [rdi + 0x2008]\l0x000046b4      call sym.imp.free                                      ; void free(void *ptr)\l0x000046b9      mov rdi, rbx\l"]
	"0x000046bc" [URL="dbg.main/0x000046bc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x46ab, 0x4882\l0x000046bc      test rdi, rdi\l0x000046bf      jne 0x46ad\l"]
	"0x000046c1" [URL="dbg.main/0x000046c1", fillcolor="white",color="#767676", fontname="Courier",label="0x000046c1      jmp 0x35d1\l"]
	"0x000046c6" [URL="dbg.main/0x000046c6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3be3\l0x000046c6      mov edx, 1\l0x000046cb      xor esi, esi\l0x000046cd      mov edi, r15d\l0x000046d0      call sym.imp.lseek\l0x000046d5      mov rbp, rax\l0x000046d8      test rax, rax\l0x000046db      jns 0x3be9\l"]
	"0x000046e1" [URL="dbg.main/0x000046e1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000046e1      mov rdx, qword [var_40h]\l0x000046e6      mov esi, 1                                             ; int64_t arg3\l0x000046eb      xor edi, edi                                           ; int64_t arg2\l0x000046ed      call sym.xlseek.part.0\l"]
	"0x000046f2" [URL="dbg.main/0x000046f2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3782\l0x000046f2      mov edx, 5\l0x000046f7      lea rsi, str.standard_input                            ; 0xdf7d ; \"standard input\"\l0x000046fe      xor edi, edi\l0x00004700      call sym.imp.dcgettext\l0x00004705      mov rbp, rax\l0x00004708      jmp 0x3788\l"]
	"0x0000470d" [URL="dbg.main/0x0000470d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3822\l0x0000470d      mov rsi, qword [var_40h]                               ; int64_t arg2\l0x00004712      mov edi, 4                                             ; int64_t arg1\l0x00004717      call sym.quotearg_style\l0x0000471c      xor edi, edi\l0x0000471e      mov edx, 5\l0x00004723      lea rsi, str.error_reading__s                          ; 0xdf4f ; \"error reading %s\"\l0x0000472a      mov r14, rax\l0x0000472d      call sym.imp.dcgettext\l0x00004732      mov r12, rax\l0x00004735      call sym.imp.__errno_location\l0x0000473a      mov rcx, r14\l0x0000473d      mov rdx, r12                                           ; char *format\l0x00004740      xor edi, edi                                           ; int status\l0x00004742      mov esi, dword [rax]                                   ; int errname\l0x00004744      xor eax, eax\l0x00004746      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x0000474b      jmp 0x384f\l"]
	"0x00004750" [URL="dbg.main/0x00004750", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x38a0\l0x00004750      mov edx, 5\l0x00004755      lea rsi, str.standard_input                            ; 0xdf7d ; \"standard input\"\l0x0000475c      xor edi, edi\l0x0000475e      call sym.imp.dcgettext\l0x00004763      mov rbp, rax\l0x00004766      jmp 0x38a6\l"]
	"0x0000476b" [URL="dbg.main/0x0000476b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3585\l0x0000476b      call sym.imp.lseek\l0x00004770      test rax, rax\l0x00004773      jns 0x359a\l"]
	"0x00004779" [URL="dbg.main/0x00004779", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004779      mov rdx, qword [var_40h]\l0x0000477e      mov rdi, qword [var_30h]                               ; int64_t arg2\l0x00004783      mov esi, 1                                             ; int64_t arg3\l0x00004788      call sym.xlseek.part.0\l"]
	"0x0000478d" [URL="dbg.main/0x0000478d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3bf9\l0x0000478d      sub rbx, qword [var_30h]\l0x00004792      xor edx, edx\l0x00004794      mov edi, r15d\l0x00004797      mov rsi, rbx\l0x0000479a      mov rbp, rbx\l0x0000479d      call sym.imp.lseek\l0x000047a2      test rax, rax\l0x000047a5      jns 0x3bff\l"]
	"0x000047ab" [URL="dbg.main/0x000047ab", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000047ab      mov rdx, qword [var_40h]\l0x000047b0      xor esi, esi                                           ; int64_t arg3\l0x000047b2      mov rdi, rbx                                           ; int64_t arg2\l0x000047b5      call sym.xlseek.part.0\l"]
	"0x000047ba" [URL="dbg.main/0x000047ba", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3d59\l0x000047ba      xor edx, edx\l0x000047bc      mov rsi, r12\l0x000047bf      mov edi, r15d\l0x000047c2      call sym.imp.lseek\l0x000047c7      test rax, rax\l0x000047ca      jns 0x32df\l"]
	"0x000047d0" [URL="dbg.main/0x000047d0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000047d0      mov rdx, qword [var_40h]\l; DATA XREF from sym.quotearg_buffer_restyled @ 0x9e35\l0x000047d5      xor esi, esi                                           ; int64_t arg3\l0x000047d7      mov rdi, r12                                           ; int64_t arg2\l0x000047da      call sym.xlseek.part.0\l"]
	"0x000047df" [URL="dbg.main/0x000047df", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2f66\l0x000047df      mov edx, 5\l0x000047e4      lea rsi, str.warning:___retry_only_effective_for_the_initial_open ; 0xdd20 ; \"warning: --retry only effective for the initial open\"\l0x000047eb      jmp 0x344d\l"]
	"0x000047f0" [URL="dbg.main/0x000047f0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3c3c\l0x000047f0      mov rbx, qword [var_28h]\l0x000047f5      mov r14, r13\l0x000047f8      jmp 0x3c60\l"]
	"0x000047fd" [URL="dbg.main/0x000047fd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3f02\l0x000047fd      cmp dword [obj.follow_mode], 2                         ; [0x13020:4]=2\l0x00004804      jne 0x3f0a\l"]
	"0x0000480a" [URL="dbg.main/0x0000480a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000480a      cmp qword [errname], 1\l0x00004810      jne 0x3f0a\l"]
	"0x00004816" [URL="dbg.main/0x00004816", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004816      mov rax, qword [var_58h]\l0x0000481b      cmp dword [rax + 0x38], 0xffffffff\l0x0000481f      je 0x3f0a\l"]
	"0x00004825" [URL="dbg.main/0x00004825", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004825      mov eax, dword [rax + 0x30]\l0x00004828      xor ebp, ebp\l0x0000482a      mov dword [size], eax\l0x0000482e      and eax, 0xf000\l0x00004833      cmp eax, sym.hash_get_n_entries                        ; 0x8000\l0x00004838      setne bpl\l0x0000483c      jmp 0x3f0a\l"]
	"0x00004841" [URL="dbg.main/0x00004841", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4638\l0x00004841      mov rsi, qword [var_40h]                               ; int64_t arg2\l0x00004846      mov edi, 4                                             ; int64_t arg1\l0x0000484b      call sym.quotearg_style\l0x00004850      mov edx, 5\l0x00004855      lea rsi, str.error_reading__s                          ; 0xdf4f ; \"error reading %s\"\l0x0000485c      xor edi, edi\l0x0000485e      mov r14, rax\l0x00004861      call sym.imp.dcgettext\l0x00004866      mov r12, rax\l0x00004869      call sym.imp.__errno_location\l0x0000486e      xor edi, edi                                           ; int status\l0x00004870      mov rcx, r14\l0x00004873      mov rdx, r12                                           ; char *format\l0x00004876      mov esi, dword [rax]                                   ; int errname\l0x00004878      xor eax, eax\l0x0000487a      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x0000487f      mov rdi, r13\l0x00004882      jmp 0x46bc\l"]
	"0x00004887" [URL="dbg.main/0x00004887", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3ee2\l0x00004887      mov byte [var_3ch], cl\l0x0000488b      mov rbx, qword [var_58h]\l0x00004890      lea r15, [buf]\l"]
	"0x00004898" [URL="dbg.main/0x00004898", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x48c7\l0x00004898      mov rdi, qword [rbx]                                   ; const char *path\l0x0000489b      mov rsi, r15                                           ; void *buf\l0x0000489e      call sym.imp.lstat                                     ; void lstat(const char *path, void *buf)\l0x000048a3      test eax, eax\l0x000048a5      jne 0x48be\l"]
	"0x000048a7" [URL="dbg.main/0x000048a7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000048a7      mov eax, dword [var_1a8h]\l0x000048ae      and eax, 0xf000\l0x000048b3      cmp eax, 0xa000\l0x000048b8      je 0x3ef3\l"]
	"0x000048be" [URL="dbg.main/0x000048be", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x48a5\l0x000048be      add rbx, 0x60\l0x000048c2      cmp rbx, qword [var_50h]\l0x000048c7      jne 0x4898\l"]
	"0x000048c9" [URL="dbg.main/0x000048c9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000048c9      mov rcx, qword [var_58h]\l0x000048ce      xor eax, eax\l"]
	"0x000048d0" [URL="dbg.main/0x000048d0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x48fe\l0x000048d0      cmp dword [rcx + rax + 0x38], 0\l0x000048d5      js 0x48f5\l"]
	"0x000048d7" [URL="dbg.main/0x000048d7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000048d7      mov edx, dword [rcx + rax + 0x30]\l0x000048db      and edx, 0xf000\l0x000048e1      cmp edx, sym.hash_get_n_entries                        ; 0x8000\l0x000048e7      je 0x48f5\l"]
	"0x000048e9" [URL="dbg.main/0x000048e9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000048e9      cmp edx, 0x1000\l0x000048ef      jne 0x3ef3\l"]
	"0x000048f5" [URL="dbg.main/0x000048f5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x48d5, 0x48e7\l0x000048f5      add rax, 0x60\l0x000048f9      cmp rax, qword [var_70h]\l0x000048fe      jne 0x48d0\l"]
	"0x00004900" [URL="dbg.main/0x00004900", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004900      cmp byte [var_8bh], 0\l0x00004908      jne 0x4917\l"]
	"0x0000490a" [URL="dbg.main/0x0000490a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000490a      cmp dword [obj.follow_mode], 2                         ; [0x13020:4]=2\l0x00004911      je 0x3ef3\l"]
	"0x00004917" [URL="dbg.main/0x00004917", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4908\l0x00004917      call sym.imp.inotify_init\l0x0000491c      mov r14d, eax\l0x0000491f      test eax, eax\l0x00004921      js 0x4ab4\l"]
	"0x00004927" [URL="dbg.main/0x00004927", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004927      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0x130c8:8]=0\l0x0000492e      call sym.imp.fflush_unlocked\l0x00004933      test eax, eax\l0x00004935      jne 0x53bc\l"]
	"0x0000493b" [URL="dbg.main/0x0000493b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000493b      mov rdi, qword [errname]                               ; int64_t arg1\l0x00004940      xor r8d, r8d                                           ; int64_t arg5\l0x00004943      lea rcx, [dbg.wd_comparator]                           ; 0x5500 ; int64_t arg4\l0x0000494a      xor esi, esi                                           ; int64_t arg2\l0x0000494c      lea rdx, [dbg.wd_hasher]                               ; 0x54e0 ; int64_t arg3\l0x00004953      call dbg.hash_initialize\l0x00004958      mov r13, rax\l0x0000495b      test rax, rax\l0x0000495e      je 0x51aa\l"]
	"0x00004964" [URL="dbg.main/0x00004964", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004964      mov edx, 2\l0x00004969      mov eax, 0xc06\l0x0000496e      mov r12, qword [var_58h]\l0x00004973      cmp dword [obj.follow_mode], 1                         ; [0x13020:4]=2\l0x0000497a      cmovne eax, edx\l0x0000497d      mov byte [s1], 0\l0x00004982      mov byte [var_20h], 0\l0x00004987      mov rbp, r12\l0x0000498a      mov dword [var_30h], eax\l0x0000498e      mov qword [size], 0\l0x00004997      mov qword [var_28h], r15\l"]
	"0x0000499c" [URL="dbg.main/0x0000499c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4c85\l0x0000499c      cmp byte [rbp + 0x34], 0\l0x000049a0      mov r12d, dword [obj.follow_mode]                      ; [0x13020:4]=2\l0x000049a7      jne 0x4c7c\l"]
	"0x000049ad" [URL="dbg.main/0x000049ad", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000049ad      mov r15, qword [rbp]\l0x000049b1      mov rdi, r15                                           ; const char *s\l0x000049b4      call sym.imp.strlen                                    ; size_t strlen(const char *s)\l0x000049b9      mov rbx, qword [size]\l0x000049be      mov dword [rbp + 0x44], 0xffffffff                     ; -1\l0x000049c5      cmp rbx, rax\l0x000049c8      cmovae rax, rbx\l0x000049cc      sub r12d, 1\l0x000049d0      mov qword [size], rax\l0x000049d5      jne 0x4a38\l"]
	"0x000049d7" [URL="dbg.main/0x000049d7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000049d7      mov rdi, r15                                           ; int64_t arg1\l0x000049da      call sym.dir_len\l0x000049df      mov rdi, r15                                           ; int64_t arg1\l0x000049e2      lea rsi, [r15 + rax]\l0x000049e6      mov rbx, rax\l0x000049e9      movzx r12d, byte [rsi]\l0x000049ed      mov qword [var_60h], rsi\l0x000049f2      call dbg.last_component\l0x000049f7      mov rsi, qword [var_60h]\l0x000049fc      sub rax, r15\l0x000049ff      mov qword [var_50h], rax\l0x00004a03      mov byte [rsi], 0\l0x00004a06      lea rsi, [0x0000e0d9]                                  ; \".\"\l0x00004a0d      test rbx, rbx\l0x00004a10      je 0x4a16\l"]
	"0x00004a12" [URL="dbg.main/0x00004a12", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004a12      mov rsi, qword [rbp]\l"]
	"0x00004a16" [URL="dbg.main/0x00004a16", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4a10\l0x00004a16      mov edx, 0x784\l0x00004a1b      mov edi, r14d\l0x00004a1e      call sym.imp.inotify_add_watch\l0x00004a23      mov dword [var_48h], eax\l0x00004a26      mov rax, qword [rbp]\l0x00004a2a      mov byte [rax + rbx], r12b\l0x00004a2e      cmp dword [var_48h], 0\l0x00004a32      js 0x5371\l"]
	"0x00004a38" [URL="dbg.main/0x00004a38", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x49d5\l0x00004a38      mov edx, dword [var_30h]\l0x00004a3c      mov rsi, qword [rbp]\l0x00004a40      mov edi, r14d\l0x00004a43      call sym.imp.inotify_add_watch\l0x00004a48      mov dword [rbp + 0x44], eax\l0x00004a4b      test eax, eax\l0x00004a4d      jns 0x4c5f\l"]
	"0x00004a53" [URL="dbg.main/0x00004a53", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004a53      movzx eax, byte [s1]\l0x00004a58      movzx ebx, byte [var_40h]\l0x00004a5d      cmp dword [rbp + 0x38], 0xffffffff\l0x00004a61      cmovne eax, ebx\l0x00004a64      mov byte [s1], al\l0x00004a68      call sym.imp.__errno_location\l0x00004a6d      mov r12, rax\l0x00004a70      mov eax, dword [rax]\l0x00004a72      mov edx, eax\l0x00004a74      and edx, 0xffffffef                                    ; 4294967279\l0x00004a77      cmp edx, 0xc\l0x00004a7a      jne 0x4d32\l"]
	"0x00004a80" [URL="dbg.main/0x00004a80", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x537c\l0x00004a80      mov edx, 5\l0x00004a85      lea rsi, str.inotify_resources_exhausted               ; 0xe211 ; \"inotify resources exhausted\"\l0x00004a8c      xor edi, edi\l0x00004a8e      call sym.imp.dcgettext\l0x00004a93      xor esi, esi                                           ; int errname\l0x00004a95      xor edi, edi                                           ; int status\l0x00004a97      mov rdx, rax                                           ; char *format\l0x00004a9a      xor eax, eax\l0x00004a9c      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00004aa1" [URL="dbg.main/0x00004aa1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x5239\l; CODE XREF from case.0x2b84.48 @ +0x1271\l0x00004aa1      mov rdi, r13                                           ; int64_t arg1\l0x00004aa4      call dbg.hash_free\l0x00004aa9      call sym.imp.__errno_location\l0x00004aae      mov dword [rax], 0\l"]
	"0x00004ab4" [URL="dbg.main/0x00004ab4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x4921, 0x5220, 0x5301\l; CODE XREF from case.0x2b84.48 @ +0x11fa\l0x00004ab4      mov edx, 5\l0x00004ab9      lea rsi, str.inotify_cannot_be_used__reverting_to_polling ; 0xdec8 ; \"inotify cannot be used, reverting to polling\"\l0x00004ac0      xor edi, edi\l0x00004ac2      call sym.imp.dcgettext\l0x00004ac7      mov r12, rax\l0x00004aca      call sym.imp.__errno_location\l0x00004acf      mov rdx, r12                                           ; char *format\l0x00004ad2      xor edi, edi                                           ; int status\l0x00004ad4      mov esi, dword [rax]                                   ; int errname\l0x00004ad6      xor eax, eax\l0x00004ad8      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00004add      mov rbx, qword [var_58h]\l0x00004ae2      mov rbp, qword [var_50h]\l"]
	"0x00004ae7" [URL="dbg.main/0x00004ae7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4b0e\l0x00004ae7      mov esi, dword [rbx + 0x44]\l0x00004aea      cmp esi, 0xffffffff\l0x00004aed      je 0x4af7\l"]
	"0x00004aef" [URL="dbg.main/0x00004aef", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004aef      mov edi, r14d\l0x00004af2      call sym.imp.inotify_rm_watch\l"]
	"0x00004af7" [URL="dbg.main/0x00004af7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4aed\l0x00004af7      mov esi, dword [rbx + 0x48]\l0x00004afa      cmp esi, 0xffffffff\l0x00004afd      je 0x4b07\l"]
	"0x00004aff" [URL="dbg.main/0x00004aff", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004aff      mov edi, r14d\l0x00004b02      call sym.imp.inotify_rm_watch\l"]
	"0x00004b07" [URL="dbg.main/0x00004b07", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4afd\l0x00004b07      add rbx, 0x60\l0x00004b0b      cmp rbp, rbx\l0x00004b0e      jne 0x4ae7\l"]
	"0x00004b10" [URL="dbg.main/0x00004b10", fillcolor="white",color="#767676", fontname="Courier",label="0x00004b10      jmp 0x3ef3\l"]
	"0x00004b15" [URL="dbg.main/0x00004b15", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x431d, 0x4326\l0x00004b15      mov rdx, r15                                           ; int64_t arg3\l0x00004b18      mov esi, 3                                             ; int64_t arg2\l0x00004b1d      xor edi, edi                                           ; int64_t arg1\l0x00004b1f      mov qword [errname], rax\l0x00004b24      call sym.quotearg_n_style_colon\l0x00004b29      mov edx, 5\l0x00004b2e      lea rsi, str._s:_cannot_change_nonblocking_mode        ; 0xdef8 ; \"%s: cannot change nonblocking mode\"\l0x00004b35      xor edi, edi\l0x00004b37      mov r12, rax\l0x00004b3a      call sym.imp.dcgettext\l0x00004b3f      mov r11, qword [errname]\l0x00004b44      mov rcx, r12\l0x00004b47      mov edi, 1                                             ; int status\l0x00004b4c      mov rdx, rax                                           ; char *format\l0x00004b4f      xor eax, eax\l0x00004b51      mov esi, dword [r11]                                   ; int errname\l0x00004b54      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00004b59" [URL="dbg.main/0x00004b59", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3e5a\l0x00004b59      mov edx, 5\l0x00004b5e      lea rsi, str.standard_output                           ; 0xdf2e ; \"standard output\"\l0x00004b65      xor edi, edi\l0x00004b67      call sym.imp.dcgettext\l0x00004b6c      mov r12, rax\l0x00004b6f      call sym.imp.__errno_location\l0x00004b74      mov rdx, r12                                           ; char *format\l0x00004b77      mov edi, 1                                             ; int status\l0x00004b7c      mov esi, dword [rax]                                   ; int errname\l0x00004b7e      xor eax, eax\l0x00004b80      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00004b85" [URL="dbg.main/0x00004b85", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2edd\l0x00004b85      mov rdi, qword [rbp + 8]                               ; int64_t arg1\l0x00004b89      call dbg.quote\l0x00004b8e      mov edx, 5\l0x00004b93      lea rsi, str.invalid_number                            ; 0xe0f8 ; \"invalid number\"\l0x00004b9a      xor edi, edi\l0x00004b9c      mov rbx, rax\l0x00004b9f      call sym.imp.dcgettext\l0x00004ba4      mov r12, rax\l0x00004ba7      call sym.imp.__errno_location\l0x00004bac      mov r8, rbx\l0x00004baf      mov rcx, r12\l0x00004bb2      mov edi, 1                                             ; int status\l0x00004bb7      mov esi, dword [rax]                                   ; int errname\l0x00004bb9      lea rdx, str._s:__s                                    ; 0xe107 ; \"%s: %s\" ; char *format\l0x00004bc0      xor eax, eax\l0x00004bc2      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00004bc7" [URL="dbg.main/0x00004bc7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x442a\l0x00004bc7      mov rdx, r15\l0x00004bca      xor esi, esi                                           ; int64_t arg3\l0x00004bcc      xor edi, edi                                           ; int64_t arg2\l0x00004bce      call sym.xlseek.part.0\l"]
	"0x00004bd3" [URL="dbg.main/0x00004bd3", fillcolor="white",color="#767676", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3a4b\l0x00004bd3      call sym.imp.__stack_chk_fail                          ; void __stack_chk_fail(void)\l"]
	"0x00004bd8" [URL="dbg.main/0x00004bd8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3005\l0x00004bd8      lea rsi, [0x0000e0f4]                                  ; u\"-b\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u2500\\u3a73\\u2520s\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u696c\\u656es\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\\u7962\\u6574s\\u6b62\\u6d4b\\u474d\\u5054\\u5a45\\u3059\\u2d00\\u662d\\u6c6f\\u6f6cw\\u6e69\\u6176\\u696c\\u2064\\u4950D\\u6e69\\u6176\\u696c\\u2064\\u756e\\u626d\\u7265\\u6f20\\u2066\" ; int64_t arg2\l0x00004bdf      mov edi, 4                                             ; int64_t arg1\l0x00004be4      call sym.quotearg_style\l0x00004be9      mov edx, 5\l0x00004bee      lea rsi, str.cannot_follow__s_by_name                  ; 0xe1cd ; \"cannot follow %s by name\"\l0x00004bf5      xor edi, edi\l0x00004bf7      mov r12, rax\l0x00004bfa      call sym.imp.dcgettext\l0x00004bff      mov rcx, r12\l0x00004c02      xor esi, esi                                           ; int errname\l0x00004c04      mov edi, 1                                             ; int status\l0x00004c09      mov rdx, rax                                           ; char *format\l0x00004c0c      xor eax, eax\l0x00004c0e      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00004c13" [URL="dbg.main/0x00004c13", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x4499, 0x5032\l0x00004c13      mov edi, 0xd                                           ; int sig\l0x00004c18      call sym.imp.raise                                     ; int raise(int sig)\l0x00004c1d      mov edi, 1                                             ; int status\l0x00004c22      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x00004c27" [URL="dbg.main/0x00004c27", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4594\l0x00004c27      mov edx, 5\l0x00004c2c      lea rsi, str.write_error                               ; 0xdfad ; \"write error\"\l0x00004c33      xor edi, edi\l0x00004c35      call sym.imp.dcgettext\l0x00004c3a      mov r12, rax\l0x00004c3d      call sym.imp.__errno_location\l0x00004c42      mov rdx, r12                                           ; char *format\l0x00004c45      mov edi, 1                                             ; int status\l0x00004c4a      mov esi, dword [rax]                                   ; int errname\l0x00004c4c      xor eax, eax\l0x00004c4e      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00004c53" [URL="dbg.main/0x00004c53", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x42c0\l0x00004c53      mov rcx, 0xfffffffffffffffe\l0x00004c5a      jmp 0x3fd7\l"]
	"0x00004c5f" [URL="dbg.main/0x00004c5f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4a4d\l0x00004c5f      mov rsi, rbp\l0x00004c62      mov rdi, r13                                           ; int64_t arg2\l0x00004c65      call dbg.hash_insert\l0x00004c6a      test rax, rax\l0x00004c6d      je 0x51aa\l"]
	"0x00004c73" [URL="dbg.main/0x00004c73", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004c73      movzx eax, byte [var_40h]\l0x00004c78      mov byte [var_20h], al\l"]
	"0x00004c7c" [URL="dbg.main/0x00004c7c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x49a7, 0x4d35, 0x4d72\l0x00004c7c      add rbp, 0x60\l0x00004c80      cmp qword [var_50h], rbp\l0x00004c85      jne 0x499c\l"]
	"0x00004c8b" [URL="dbg.main/0x00004c8b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004c8b      cmp dword [obj.follow_mode], 2                         ; [0x13020:4]=2\l0x00004c92      mov r15, qword [var_28h]\l0x00004c97      je 0x5234\l"]
	"0x00004c9d" [URL="dbg.main/0x00004c9d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x5244\l0x00004c9d      mov r12, qword [var_58h]\l0x00004ca2      mov rax, qword [var_70h]\l0x00004ca7      lea rbx, [var_98h]\l0x00004caf      mov rbp, qword [var_50h]\l0x00004cb4      lea rax, [r12 + rax - 0x60]\l0x00004cb9      mov qword [var_98h], rax\l0x00004cc1      jmp 0x4d15\l"]
	"0x00004cc3" [URL="dbg.main/0x00004cc3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4d24\l0x00004cc3      cmp dword [r12 + 0x38], 0xffffffff\l0x00004cc9      je 0x4d01\l"]
	"0x00004ccb" [URL="dbg.main/0x00004ccb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004ccb      mov rdi, qword [r12]\l0x00004ccf      mov rsi, r15\l0x00004cd2      call sym.imp.stat\l0x00004cd7      test eax, eax\l0x00004cd9      jne 0x4d01\l"]
	"0x00004cdb" [URL="dbg.main/0x00004cdb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004cdb      mov rax, qword [buf]\l0x00004ce3      cmp qword [r12 + 0x20], rax\l0x00004ce8      jne 0x52ab\l"]
	"0x00004cee" [URL="dbg.main/0x00004cee", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004cee      mov rax, qword [var_198h]\l0x00004cf6      cmp qword [r12 + 0x28], rax\l0x00004cfb      jne 0x52ab\l"]
	"0x00004d01" [URL="dbg.main/0x00004d01", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x4cc9, 0x4cd9, 0x4d30\l0x00004d01      mov rsi, rbx                                           ; int64_t arg2\l0x00004d04      mov rdi, r12                                           ; int64_t arg1\l0x00004d07      call dbg.check_fspec\l"]
	"0x00004d0c" [URL="dbg.main/0x00004d0c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4d1b\l0x00004d0c      add r12, 0x60\l0x00004d10      cmp rbp, r12\l0x00004d13      je 0x4d77\l"]
	"0x00004d15" [URL="dbg.main/0x00004d15", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4cc1\l0x00004d15      cmp byte [r12 + 0x34], 0\l0x00004d1b      jne 0x4d0c\l"]
	"0x00004d1d" [URL="dbg.main/0x00004d1d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004d1d      cmp dword [obj.follow_mode], 1                         ; [0x13020:4]=2\l0x00004d24      jne 0x4cc3\l"]
	"0x00004d26" [URL="dbg.main/0x00004d26", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004d26      xor esi, esi                                           ; int64_t arg2\l0x00004d28      mov rdi, r12                                           ; int64_t arg1\l0x00004d2b      call dbg.recheck\l0x00004d30      jmp 0x4d01\l"]
	"0x00004d32" [URL="dbg.main/0x00004d32", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4a7a\l0x00004d32      cmp eax, dword [var_3ch]\l0x00004d35      je 0x4c7c\l"]
	"0x00004d3b" [URL="dbg.main/0x00004d3b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004d3b      mov rsi, qword [rbp]                                   ; int64_t arg2\l0x00004d3f      mov edi, 4                                             ; int64_t arg1\l; DATA XREF from dbg.fremote @ 0x59ff\l0x00004d44      call sym.quotearg_style\l0x00004d49      xor edi, edi\l0x00004d4b      mov edx, 5\l0x00004d50      lea rsi, str.cannot_watch__s                           ; 0xe22d ; \"cannot watch %s\"\l0x00004d57      mov rbx, rax\l; DATA XREF from dbg.fremote @ 0x5808\l0x00004d5a      call sym.imp.dcgettext\l0x00004d5f      mov esi, dword [r12]                                   ; int errname\l0x00004d63      mov rcx, rbx\l0x00004d66      xor edi, edi                                           ; int status\l0x00004d68      mov rdx, rax                                           ; char *format\l0x00004d6b      xor eax, eax\l0x00004d6d      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00004d72      jmp 0x4c7c\l"]
	"0x00004d77" [URL="dbg.main/0x00004d77", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4d13\l0x00004d77      mov r12, qword [size]\l0x00004d7c      add r12, 0x11                                          ; \"-00\"\l0x00004d80      mov rdi, r12                                           ; size_t size\l0x00004d83      call sym.xmalloc                                       ;  void *xmalloc(size_t size)\l0x00004d88      mov dword [var_28h], 3\l0x00004d90      mov qword [s1], rax\l0x00004d95      mov qword [var_20h], 0\l0x00004d9e      mov qword [size], 0\l"]
	"0x00004da7" [URL="dbg.main/0x00004da7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x00004ec0  CODE 0x00004eec  CODE 0x00004f4a  \l; XREFS: CODE 0x0000501a  CODE 0x00005147  CODE 0x0000528d  \l0x00004da7      cmp dword [obj.follow_mode], 1                         ; [0x13020:4]=2\l0x00004dae      je 0x4ef1\l"]
	"0x00004db4" [URL="dbg.main/0x00004db4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x4ef8, 0x4f09\l0x00004db4      mov rbx, qword [var_20h]\l0x00004db9      cmp qword [size], rbx\l0x00004dbe      jae 0x4f4f\l"]
	"0x00004dc4" [URL="dbg.main/0x00004dc4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from case.0x2b84.48 @ +0xf1d\l0x00004dc4      mov rcx, qword [size]\l0x00004dc9      mov rbx, qword [s1]\l0x00004dce      add rbx, rcx\l0x00004dd1      mov edx, dword [rbx + 0xc]\l0x00004dd4      mov r8d, dword [rbx + 4]\l0x00004dd8      lea rcx, [rcx + rdx + 0x10]\l0x00004ddd      mov qword [size], rcx\l0x00004de2      mov ecx, dword [rbx]\l0x00004de4      test r8d, 0x400\l0x00004deb      je 0x4ec5\l"]
	"0x00004df1" [URL="dbg.main/0x00004df1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004df1      test edx, edx\l0x00004df3      je 0x51ca\l"]
	"0x00004df9" [URL="dbg.main/0x00004df9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4ec7\l0x00004df9      mov rdx, qword [var_58h]\l0x00004dfe      mov qword [var_60h], r12\l0x00004e03      lea rdi, [rbx + 0x10]\l0x00004e07      xor ebp, ebp\l0x00004e09      mov qword [var_78h], rbx\l0x00004e0e      mov r12, qword [errname]\l0x00004e13      mov qword [var_68h], r15\l0x00004e18      mov rbx, rdx\l0x00004e1b      mov r15, r13\l0x00004e1e      mov r13d, ecx\l0x00004e21      jmp 0x4e34\l"]
	"0x00004e23" [URL="dbg.main/0x00004e23", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x4e38, 0x4e68\l0x00004e23      add rbp, 1\l0x00004e27      add rbx, 0x60\l0x00004e2b      cmp r12, rbp\l0x00004e2e      je 0x500d\l"]
	"0x00004e34" [URL="dbg.main/0x00004e34", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4e21\l0x00004e34      cmp r13d, dword [rbx + 0x48]\l0x00004e38      jne 0x4e23\l"]
	"0x00004e3a" [URL="dbg.main/0x00004e3a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004e3a      mov rsi, qword [rbx + 0x50]\l0x00004e3e      add rsi, qword [rbx]                                   ; const char *s2\l0x00004e41      mov dword [var_8ch], r8d\l0x00004e49      mov qword [var_80h], rdi\l0x00004e51      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x00004e56      mov rdi, qword [var_80h]\l0x00004e5e      mov r8d, dword [var_8ch]\l0x00004e66      test eax, eax\l0x00004e68      jne 0x4e23\l"]
	"0x00004e6a" [URL="dbg.main/0x00004e6a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004e6a      imul rbp, rbp, 0x60\l0x00004e6e      add rbp, qword [var_58h]\l0x00004e73      mov r13, r15\l0x00004e76      and r8d, 0x200\l0x00004e7d      mov r12, qword [var_60h]\l0x00004e82      mov rbx, qword [var_78h]\l0x00004e87      mov r15, qword [var_68h]\l0x00004e8c      je 0x50a3\l"]
	"0x00004e92" [URL="dbg.main/0x00004e92", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from case.0x2b84.48 @ +0xfda, +0x105e\l0x00004e92      cmp dword [obj.follow_mode], 1                         ; [0x13020:4]=2\l0x00004e99      je 0x5225\l"]
	"0x00004e9f" [URL="dbg.main/0x00004e9f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x4eea, 0x522f\l0x00004e9f      mov eax, dword [rbx + 4]\l0x00004ea2      test eax, 0xe04                                        ; \"flush\"\l0x00004ea7      je 0x4f3a\l"]
	"0x00004ec5" [URL="dbg.main/0x00004ec5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4deb\l0x00004ec5      test edx, edx\l0x00004ec7      jne 0x4df9\l"]
	"0x00004ecd" [URL="dbg.main/0x00004ecd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x51d7\l0x00004ecd      lea rsi, [var_a0h]                                     ; int64_t arg2\l0x00004ed5      mov rdi, r13                                           ; int64_t arg1\l0x00004ed8      mov dword [var_e4h], ecx\l0x00004edf      call sym.hash_lookup\l0x00004ee4      mov rbp, rax\l0x00004ee7      test rax, rax\l0x00004eea      jne 0x4e9f\l"]
	"0x00004eec" [URL="dbg.main/0x00004eec", fillcolor="white",color="#767676", fontname="Courier",label="0x00004eec      jmp 0x4da7\l"]
	"0x00004ef1" [URL="dbg.main/0x00004ef1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4dae\l0x00004ef1      cmp byte [obj.reopen_inaccessible_files], 0            ; [0x1311a:1]=0\l0x00004ef8      jne 0x4db4\l"]
	"0x00004efe" [URL="dbg.main/0x00004efe", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004efe      mov rdi, r13                                           ; int64_t arg1\l0x00004f01      call sym.hash_get_n_entries\l0x00004f06      test rax, rax\l0x00004f09      jne 0x4db4\l"]
	"0x00004f0f" [URL="dbg.main/0x00004f0f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004f0f      mov edx, 5\l0x00004f14      lea rsi, str.no_files_remaining                        ; 0xe24d ; \"no files remaining\"\l0x00004f1b      xor edi, edi\l0x00004f1d      call sym.imp.dcgettext\l0x00004f22      xor esi, esi                                           ; int errname\l0x00004f24      xor edi, edi                                           ; int status\l0x00004f26      mov rdx, rax                                           ; char *format\l0x00004f29      xor eax, eax\l0x00004f2b      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00004f30" [URL="dbg.main/0x00004f30", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x524a\l0x00004f30      mov eax, 1\l0x00004f35      jmp 0x3a3a\l"]
	"0x00004f4f" [URL="dbg.main/0x00004f4f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4dbe\l0x00004f4f      movzx ebx, byte [var_3ch]\l0x00004f54      jmp 0x4fb4\l"]
	"0x00004f56" [URL="dbg.main/0x00004f56", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4fbc\l0x00004f56      test bl, bl\l0x00004f58      jne 0x524f\l"]
	"0x00004f5e" [URL="dbg.main/0x00004f5e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004f5e      xor esi, esi                                           ; int sig\l0x00004f60      call sym.imp.kill                                      ; int kill(pid_t pid, int sig)\l0x00004f65      test eax, eax\l0x00004f67      je 0x4fc3\l"]
	"0x00004f69" [URL="dbg.main/0x00004f69", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004f69      call sym.imp.__errno_location\l0x00004f6e      cmp dword [rax], 1\l0x00004f71      je 0x4fc3\l"]
	"0x00004f73" [URL="dbg.main/0x00004f73", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004f73      movzx ebx, byte [var_40h]\l0x00004f78      xor edx, edx\l"]
	"0x00004f7a" [URL="dbg.main/0x00004f7a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x4fc1, 0x4fcf, 0x5008\l0x00004f7a      movzx eax, byte [obj.monitor_output]                   ; [0x13117:1]=0\l0x00004f81      mov ecx, 0x10                                          ; \"'-00\"\l0x00004f86      mov rdi, r15\l0x00004f89      mov dword [buf], r14d\l0x00004f91      mov word [var_194h], 1\l0x00004f9b      mov qword [var_198h], 1\l0x00004fa7      lea rsi, [rax + 1]\l0x00004fab      call sym.imp.__poll_chk\l0x00004fb0      test eax, eax\l0x00004fb2      jne 0x501f\l"]
	"0x00004fb4" [URL="dbg.main/0x00004fb4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4f54\l0x00004fb4      mov edi, dword [obj.pid]                               ; [0x13110:4]=0\l0x00004fba      test edi, edi\l0x00004fbc      jne 0x4f56\l"]
	"0x00004fbe" [URL="dbg.main/0x00004fbe", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4fe3\l0x00004fbe      or edx, 0xffffffff                                     ; -1\l0x00004fc1      jmp 0x4f7a\l"]
	"0x00004fc3" [URL="dbg.main/0x00004fc3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x4f67, 0x4f71\l0x00004fc3      xor edx, edx\l0x00004fc5      pxor xmm7, xmm7\l0x00004fc9      comisd xmm7, xmmword [rsp + 0x48]\l0x00004fcf      jae 0x4f7a\l"]
	"0x00004fd1" [URL="dbg.main/0x00004fd1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004fd1      movsd xmm6, qword [0x0000e498]                         ; [0xe498:8]=0x4140624d00000000\l0x00004fd9      movsd xmm5, qword [var_48h]\l0x00004fdf      comisd xmm6, xmm5\l0x00004fe3      jbe 0x4fbe\l"]
	"0x00004fe5" [URL="dbg.main/0x00004fe5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00004fe5      movsd xmm0, qword [0x0000e4a0]                         ; [0xe4a0:8]=0x408f400000000000\l0x00004fed      pxor xmm1, xmm1\l0x00004ff1      xor eax, eax\l0x00004ff3      mulsd xmm0, xmm5\l0x00004ff7      cvttsd2si edx, xmm0\l0x00004ffb      cvtsi2sd xmm1, edx\l0x00004fff      comisd xmm0, xmm1\l0x00005003      seta al\l0x00005006      add edx, eax\l0x00005008      jmp 0x4f7a\l"]
	"0x0000500d" [URL="dbg.main/0x0000500d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4e2e\l0x0000500d      mov r13, r15\l0x00005010      mov r12, qword [var_60h]\l0x00005015      mov r15, qword [var_68h]\l0x0000501a      jmp 0x4da7\l"]
	"0x0000501f" [URL="dbg.main/0x0000501f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4fb2\l0x0000501f      mov byte [var_3ch], bl\l0x00005023      js 0x5345\l"]
	"0x00005029" [URL="dbg.main/0x00005029", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00005029      cmp word [var_19eh], 0\l0x00005032      jne 0x4c13\l"]
	"0x000050a3" [URL="dbg.main/0x000050a3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4e8c\l0x000050a3      mov edx, dword [var_30h]\l0x000050a7      mov rsi, qword [rbp]\l0x000050ab      mov edi, r14d\l0x000050ae      call sym.imp.inotify_add_watch\l0x000050b3      mov dword [var_60h], eax\l0x000050b7      test eax, eax\l0x000050b9      jns 0x5115\l"]
	"0x000050bb" [URL="dbg.main/0x000050bb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000050bb      call sym.imp.__errno_location\l0x000050c0      mov r8, rax\l0x000050c3      mov eax, dword [rax]\l0x000050c5      and eax, 0xffffffef                                    ; 4294967279\l0x000050c8      cmp eax, 0xc\l0x000050cb      je 0x5306\l"]
	"0x00005115" [URL="dbg.main/0x00005115", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x50b9\l0x00005115      mov esi, dword [rbp + 0x44]\l0x00005118      test esi, esi\l0x0000511a      js 0x513d\l"]
	"0x000051aa" [URL="dbg.main/0x000051aa", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x495e, 0x4c6d\l0x000051aa      call dbg.xalloc_die\l"]
	"0x000051ca" [URL="dbg.main/0x000051ca", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4df3\l0x000051ca      xor eax, eax\l0x000051cc      jmp 0x51dd\l"]
	"0x000051ce" [URL="dbg.main/0x000051ce", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x51ea\l0x000051ce      add rax, 1\l0x000051d2      cmp qword [errname], rax\l0x000051d7      je 0x4ecd\l"]
	"0x000051dd" [URL="dbg.main/0x000051dd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x51cc\l0x000051dd      imul rdx, rax, 0x60\l0x000051e1      mov rsi, qword [var_58h]\l0x000051e6      cmp ecx, dword [rsi + rdx + 0x48]\l0x000051ea      jne 0x51ce\l"]
	"0x000051ec" [URL="dbg.main/0x000051ec", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000051ec      mov rdi, r13                                           ; int64_t arg1\l0x000051ef      call dbg.hash_free\l0x000051f4      mov edx, 5\l0x000051f9      lea rsi, str.directory_containing_watched_file_was_removed ; 0xde98 ; \"directory containing watched file was removed\"\l0x00005200      xor edi, edi\l0x00005202      call sym.imp.dcgettext\l0x00005207      xor esi, esi                                           ; int errname\l0x00005209      xor edi, edi                                           ; int status\l0x0000520b      mov rdx, rax                                           ; char *format\l0x0000520e      xor eax, eax\l0x00005210      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00005215      call sym.imp.__errno_location\l0x0000521a      mov dword [rax], 0\l0x00005220      jmp 0x4ab4\l"]
	"0x00005225" [URL="dbg.main/0x00005225", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4e99\l0x00005225      xor esi, esi                                           ; int64_t arg2\l0x00005227      mov rdi, rbp                                           ; int64_t arg1\l0x0000522a      call dbg.recheck\l0x0000522f      jmp 0x4e9f\l"]
	"0x00005234" [URL="dbg.main/0x00005234", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4c97\l0x00005234      cmp byte [s1], 0\l0x00005239      jne 0x4aa1\l"]
	"0x0000523f" [URL="dbg.main/0x0000523f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000523f      cmp byte [var_20h], 0\l0x00005244      jne 0x4c9d\l"]
	"0x0000524a" [URL="dbg.main/0x0000524a", fillcolor="white",color="#767676", fontname="Courier",label="0x0000524a      jmp 0x4f30\l"]
	"0x0000524f" [URL="dbg.main/0x0000524f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4f58\l0x0000524f      xor edi, edi                                           ; int status\l0x00005251      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x000052ab" [URL="dbg.main/0x000052ab", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x4ce8, 0x4cfb\l0x000052ab      mov rdi, qword [r12]                                   ; int64_t arg1\l0x000052af      call sym.pretty_name.isra.0\l0x000052b4      mov edi, 4                                             ; int64_t arg1\l0x000052b9      mov rsi, rax                                           ; int64_t arg2\l0x000052bc      call sym.quotearg_style\l0x000052c1      mov edx, 5\l0x000052c6      lea rsi, str._s_was_replaced                           ; 0xe23d ; \"%s was replaced\"\l0x000052cd      xor edi, edi\l0x000052cf      mov r15, rax\l0x000052d2      call sym.imp.dcgettext\l0x000052d7      mov r12, rax\l0x000052da      call sym.imp.__errno_location\l0x000052df      mov rcx, r15\l0x000052e2      mov rdx, r12                                           ; char *format\l0x000052e5      xor edi, edi                                           ; int status\l0x000052e7      mov esi, dword [rax]                                   ; int errname\l0x000052e9      mov rbx, rax\l0x000052ec      xor eax, eax\l0x000052ee      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x000052f3      mov rdi, r13                                           ; int64_t arg1\l0x000052f6      call dbg.hash_free\l0x000052fb      mov dword [rbx], 0\l0x00005301      jmp 0x4ab4\l"]
	"0x00005345" [URL="dbg.main/0x00005345", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x5023\l0x00005345      mov edx, 5\l0x0000534a      lea rsi, str.error_waiting_for_inotify_and_output_events ; 0xde68 ; \"error waiting for inotify and output events\"\l0x00005351      xor edi, edi\l0x00005353      call sym.imp.dcgettext\l0x00005358      mov r12, rax\l0x0000535b      call sym.imp.__errno_location\l0x00005360      mov rdx, r12                                           ; char *format\l0x00005363      mov edi, 1                                             ; int status\l0x00005368      mov esi, dword [rax]                                   ; int errname\l0x0000536a      xor eax, eax\l0x0000536c      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00005371" [URL="dbg.main/0x00005371", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4a32\l0x00005371      call sym.imp.__errno_location\l0x00005376      cmp dword [rax], 0x1c\l0x00005379      mov rbx, rax\l0x0000537c      je 0x4a80\l"]
	"0x000053bc" [URL="dbg.main/0x000053bc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x4935\l0x000053bc      mov edx, 5\l0x000053c1      lea rsi, str.write_error                               ; 0xdfad ; \"write error\"\l0x000053c8      xor edi, edi\l0x000053ca      call sym.imp.dcgettext\l0x000053cf      mov r12, rax\l0x000053d2      call sym.imp.__errno_location\l0x000053d7      mov rdx, r12                                           ; char *format\l0x000053da      mov edi, 1                                             ; int status\l0x000053df      mov esi, dword [rax]                                   ; int errname\l0x000053e1      xor eax, eax\l0x000053e3      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x000053e8      nop dword [rax + rax]\l"]
        "0x00002a10" -> "0x00002ae0" [color="#13a10e"];
        "0x00002a10" -> "0x00002abe" [color="#c50f1f"];
        "0x00002abe" -> "0x00002f1d" [color="#13a10e"];
        "0x00002abe" -> "0x00002ac7" [color="#c50f1f"];
        "0x00002ac7" -> "0x00002b02" [color="#13a10e"];
        "0x00002ac7" -> "0x00002acc" [color="#c50f1f"];
        "0x00002acc" -> "0x00002ad0" [color="#3a96dd"];
        "0x00002ad0" -> "0x00002b02" [color="#13a10e"];
        "0x00002ad0" -> "0x00002ae0" [color="#c50f1f"];
        "0x00002ae0" -> "0x00002f02" [color="#13a10e"];
        "0x00002ae0" -> "0x00002af9" [color="#c50f1f"];
        "0x00002af9" -> "0x00002e28" [color="#13a10e"];
        "0x00002af9" -> "0x00002b02" [color="#c50f1f"];
        "0x00002b02" -> "0x00002b04" [color="#3a96dd"];
        "0x00002b04" -> "0x00002b40" [color="#3a96dd"];
        "0x00002b40" -> "0x00002f45" [color="#13a10e"];
        "0x00002b40" -> "0x00002b5c" [color="#c50f1f"];
        "0x00002b5c" -> "0x0000413c" [color="#13a10e"];
        "0x00002b5c" -> "0x00002b67" [color="#c50f1f"];
        "0x00002b67" -> "0x00002d98" [color="#13a10e"];
        "0x00002b67" -> "0x00002b70" [color="#c50f1f"];
        "0x00002b70" -> "0x0000413c" [color="#13a10e"];
        "0x00002b70" -> "0x00002b7c" [color="#c50f1f"];
        "0x00002b7c" -> "0x00004146" [color="#3a96dd"];
        "0x00002b7c" -> "0x00004146" [color="#3a96dd"];
        "0x00002b7c" -> "0x00004146" [color="#3a96dd"];
        "0x00002b7c" -> "0x00004146" [color="#3a96dd"];
        "0x00002b7c" -> "0x00004146" [color="#3a96dd"];
        "0x00002b7c" -> "0x00004146" [color="#3a96dd"];
        "0x00002b7c" -> "0x00004146" [color="#3a96dd"];
        "0x00002b7c" -> "0x00004146" [color="#3a96dd"];
        "0x00002b7c" -> "0x00004146" [color="#3a96dd"];
        "0x00002b7c" -> "0x00004146" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x00002c59" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x00002be8" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x00002b90" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x00002be8" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x00003420" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x00002d1d" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000342d" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x00002d11" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x0000413c" [color="#3a96dd"];
        "0x00002b7c" -> "0x00002d05" [color="#3a96dd"];
        "0x00002b7c" -> "0x00002cc8" [color="#3a96dd"];
        "0x00002b7c" -> "0x00002c8e" [color="#3a96dd"];
        "0x00002b7c" -> "0x00002c82" [color="#3a96dd"];
        "0x00002b7c" -> "0x00002b90" [color="#3a96dd"];
        "0x00002b7c" -> "0x00002c76" [color="#3a96dd"];
        "0x00002b90" -> "0x00002e19" [color="#13a10e"];
        "0x00002b90" -> "0x00002ba7" [color="#c50f1f"];
        "0x00002ba7" -> "0x00002b40" [color="#3a96dd"];
        "0x00002be8" -> "0x00002f39" [color="#13a10e"];
        "0x00002be8" -> "0x00002c05" [color="#c50f1f"];
        "0x00002c05" -> "0x00003410" [color="#13a10e"];
        "0x00002c05" -> "0x00002c0e" [color="#c50f1f"];
        "0x00002c0e" -> "0x00002e03" [color="#13a10e"];
        "0x00002c0e" -> "0x00002c1c" [color="#c50f1f"];
        "0x00002c1c" -> "0x00002c2d" [color="#3a96dd"];
        "0x00002c2d" -> "0x00002b40" [color="#3a96dd"];
        "0x00002c59" -> "0x00002b40" [color="#3a96dd"];
        "0x00002c76" -> "0x00002b40" [color="#3a96dd"];
        "0x00002c82" -> "0x00002b40" [color="#3a96dd"];
        "0x00002c8e" -> "0x00002b40" [color="#3a96dd"];
        "0x00002cc8" -> "0x00002b40" [color="#3a96dd"];
        "0x00002d05" -> "0x00002b40" [color="#3a96dd"];
        "0x00002d11" -> "0x00002b40" [color="#3a96dd"];
        "0x00002d1d" -> "0x00002d5b" [color="#13a10e"];
        "0x00002d1d" -> "0x00002d3e" [color="#c50f1f"];
        "0x00002d3e" -> "0x00002b40" [color="#13a10e"];
        "0x00002d3e" -> "0x00002d5b" [color="#c50f1f"];
        "0x00002d5b" -> "0x00002d98" [color="#3a96dd"];
        "0x00002d98" -> "0x00002df1" [color="#13a10e"];
        "0x00002d98" -> "0x00002d9f" [color="#c50f1f"];
        "0x00002df1" -> "0x0000413c" [color="#13a10e"];
        "0x00002df1" -> "0x00002dfc" [color="#c50f1f"];
        "0x00002dfc" -> "0x00002e03" [color="#3a96dd"];
        "0x00002e03" -> "0x00002c2d" [color="#3a96dd"];
        "0x00002e19" -> "0x00002b40" [color="#3a96dd"];
        "0x00002e28" -> "0x00002e43" [color="#13a10e"];
        "0x00002e28" -> "0x00002e2f" [color="#c50f1f"];
        "0x00002e2f" -> "0x00002b02" [color="#13a10e"];
        "0x00002e2f" -> "0x00002e43" [color="#c50f1f"];
        "0x00002e43" -> "0x00002e46" [color="#3a96dd"];
        "0x00002e46" -> "0x00002e72" [color="#13a10e"];
        "0x00002e46" -> "0x00002e57" [color="#c50f1f"];
        "0x00002e57" -> "0x00002e60" [color="#3a96dd"];
        "0x00002e60" -> "0x00002e60" [color="#13a10e"];
        "0x00002e60" -> "0x00002e72" [color="#c50f1f"];
        "0x00002e72" -> "0x00003cce" [color="#13a10e"];
        "0x00002e72" -> "0x00002e7b" [color="#c50f1f"];
        "0x00002e7b" -> "0x00003abd" [color="#13a10e"];
        "0x00002e7b" -> "0x00002e84" [color="#c50f1f"];
        "0x00002e84" -> "0x00003aac" [color="#13a10e"];
        "0x00002e84" -> "0x00002e8d" [color="#c50f1f"];
        "0x00002e8d" -> "0x00002e9b" [color="#3a96dd"];
        "0x00002e9b" -> "0x00002ead" [color="#13a10e"];
        "0x00002e9b" -> "0x00002ea3" [color="#c50f1f"];
        "0x00002ea3" -> "0x00002ead" [color="#3a96dd"];
        "0x00002ead" -> "0x00002b02" [color="#13a10e"];
        "0x00002ead" -> "0x00002eb6" [color="#c50f1f"];
        "0x00002eb6" -> "0x000034a3" [color="#13a10e"];
        "0x00002eb6" -> "0x00002ebf" [color="#c50f1f"];
        "0x00002ebf" -> "0x00004b85" [color="#13a10e"];
        "0x00002ebf" -> "0x00002ee3" [color="#c50f1f"];
        "0x00002ee3" -> "0x00002b04" [color="#3a96dd"];
        "0x00002f02" -> "0x00002e46" [color="#13a10e"];
        "0x00002f02" -> "0x00002f18" [color="#c50f1f"];
        "0x00002f18" -> "0x00002b02" [color="#3a96dd"];
        "0x00002f1d" -> "0x00002ae0" [color="#13a10e"];
        "0x00002f1d" -> "0x00002f2a" [color="#c50f1f"];
        "0x00002f2a" -> "0x00002ad0" [color="#13a10e"];
        "0x00002f2a" -> "0x00002f34" [color="#c50f1f"];
        "0x00002f34" -> "0x00002ae0" [color="#3a96dd"];
        "0x00002f39" -> "0x00002c0e" [color="#3a96dd"];
        "0x00002f45" -> "0x00003462" [color="#13a10e"];
        "0x00002f45" -> "0x00002f52" [color="#c50f1f"];
        "0x00002f52" -> "0x0000343a" [color="#13a10e"];
        "0x00002f52" -> "0x00002f5f" [color="#c50f1f"];
        "0x00002f5f" -> "0x000047df" [color="#13a10e"];
        "0x00002f5f" -> "0x00002f6c" [color="#c50f1f"];
        "0x00002f6c" -> "0x00002f85" [color="#13a10e"];
        "0x00002f6c" -> "0x00002f76" [color="#c50f1f"];
        "0x00002f76" -> "0x0000417f" [color="#13a10e"];
        "0x00002f76" -> "0x00002f85" [color="#c50f1f"];
        "0x00002f85" -> "0x00002fa7" [color="#13a10e"];
        "0x00002f85" -> "0x00002f8e" [color="#c50f1f"];
        "0x00002f8e" -> "0x00002fa7" [color="#13a10e"];
        "0x00002f8e" -> "0x00002f9b" [color="#c50f1f"];
        "0x00002f9b" -> "0x00002fa7" [color="#3a96dd"];
        "0x00002fa7" -> "0x00003ae5" [color="#13a10e"];
        "0x00002fa7" -> "0x00002fb6" [color="#c50f1f"];
        "0x00002fb6" -> "0x00002fc4" [color="#3a96dd"];
        "0x00002fc4" -> "0x00002fe0" [color="#3a96dd"];
        "0x00002fe0" -> "0x00002fef" [color="#13a10e"];
        "0x00002fe0" -> "0x00002fe8" [color="#c50f1f"];
        "0x00002fe8" -> "0x00002fef" [color="#3a96dd"];
        "0x00002fef" -> "0x00002fe0" [color="#13a10e"];
        "0x00002fef" -> "0x00002ff8" [color="#c50f1f"];
        "0x00002ff8" -> "0x0000306b" [color="#13a10e"];
        "0x00002ff8" -> "0x00002ffc" [color="#c50f1f"];
        "0x00002ffc" -> "0x00004bd8" [color="#13a10e"];
        "0x00002ffc" -> "0x0000300b" [color="#c50f1f"];
        "0x0000300b" -> "0x00003d05" [color="#13a10e"];
        "0x0000300b" -> "0x00003018" [color="#c50f1f"];
        "0x00003018" -> "0x000034b2" [color="#13a10e"];
        "0x00003018" -> "0x00003025" [color="#c50f1f"];
        "0x00003025" -> "0x000034b2" [color="#13a10e"];
        "0x00003025" -> "0x00003031" [color="#c50f1f"];
        "0x00003031" -> "0x000034b2" [color="#13a10e"];
        "0x00003031" -> "0x0000303a" [color="#c50f1f"];
        "0x0000303a" -> "0x000034b2" [color="#13a10e"];
        "0x0000303a" -> "0x00003054" [color="#c50f1f"];
        "0x00003054" -> "0x000034b2" [color="#13a10e"];
        "0x00003054" -> "0x0000306b" [color="#c50f1f"];
        "0x0000306b" -> "0x00003083" [color="#13a10e"];
        "0x0000306b" -> "0x00003076" [color="#c50f1f"];
        "0x00003076" -> "0x00003d14" [color="#13a10e"];
        "0x00003076" -> "0x00003083" [color="#c50f1f"];
        "0x00003083" -> "0x000030a0" [color="#3a96dd"];
        "0x000030a0" -> "0x000030a0" [color="#13a10e"];
        "0x000030a0" -> "0x000030b4" [color="#c50f1f"];
        "0x000030b4" -> "0x000034e7" [color="#13a10e"];
        "0x000030b4" -> "0x000030c1" [color="#c50f1f"];
        "0x000030c1" -> "0x000030d1" [color="#13a10e"];
        "0x000030c1" -> "0x000030c5" [color="#c50f1f"];
        "0x000030c5" -> "0x000034e7" [color="#13a10e"];
        "0x000030c5" -> "0x000030d1" [color="#c50f1f"];
        "0x000030d1" -> "0x000031eb" [color="#3a96dd"];
        "0x00003101" -> "0x000037fa" [color="#13a10e"];
        "0x00003101" -> "0x00003126" [color="#c50f1f"];
        "0x00003126" -> "0x0000322e" [color="#13a10e"];
        "0x00003126" -> "0x00003136" [color="#c50f1f"];
        "0x00003136" -> "0x0000313f" [color="#3a96dd"];
        "0x0000313f" -> "0x00003179" [color="#13a10e"];
        "0x0000313f" -> "0x00003150" [color="#c50f1f"];
        "0x00003150" -> "0x00003179" [color="#3a96dd"];
        "0x00003179" -> "0x00003a63" [color="#13a10e"];
        "0x00003179" -> "0x00003190" [color="#c50f1f"];
        "0x00003190" -> "0x000031c9" [color="#3a96dd"];
        "0x000031c9" -> "0x00003a0c" [color="#13a10e"];
        "0x000031c9" -> "0x000031eb" [color="#c50f1f"];
        "0x000031eb" -> "0x00003101" [color="#13a10e"];
        "0x000031eb" -> "0x00003214" [color="#c50f1f"];
        "0x00003214" -> "0x00003101" [color="#13a10e"];
        "0x00003214" -> "0x00003224" [color="#c50f1f"];
        "0x00003224" -> "0x0000322e" [color="#3a96dd"];
        "0x0000322e" -> "0x00003237" [color="#3a96dd"];
        "0x00003237" -> "0x000037a0" [color="#13a10e"];
        "0x00003237" -> "0x00003244" [color="#c50f1f"];
        "0x00003244" -> "0x0000326d" [color="#13a10e"];
        "0x00003244" -> "0x0000324f" [color="#c50f1f"];
        "0x0000324f" -> "0x0000326d" [color="#13a10e"];
        "0x0000324f" -> "0x00003255" [color="#c50f1f"];
        "0x00003255" -> "0x0000326d" [color="#3a96dd"];
        "0x0000326d" -> "0x0000352c" [color="#13a10e"];
        "0x0000326d" -> "0x0000329f" [color="#c50f1f"];
        "0x0000329f" -> "0x00003afa" [color="#13a10e"];
        "0x0000329f" -> "0x000032ac" [color="#c50f1f"];
        "0x000032ac" -> "0x00003a7e" [color="#13a10e"];
        "0x000032ac" -> "0x000032bf" [color="#c50f1f"];
        "0x000032bf" -> "0x000032df" [color="#13a10e"];
        "0x000032bf" -> "0x000032c8" [color="#c50f1f"];
        "0x000032c8" -> "0x00003d28" [color="#13a10e"];
        "0x000032c8" -> "0x000032df" [color="#c50f1f"];
        "0x000032df" -> "0x00003330" [color="#3a96dd"];
        "0x00003330" -> "0x00003813" [color="#13a10e"];
        "0x00003330" -> "0x00003351" [color="#c50f1f"];
        "0x00003351" -> "0x0000339c" [color="#3a96dd"];
        "0x00003390" -> "0x0000339c" [color="#3a96dd"];
        "0x0000339c" -> "0x00003390" [color="#13a10e"];
        "0x0000339c" -> "0x000033ae" [color="#c50f1f"];
        "0x000033ae" -> "0x000034f3" [color="#13a10e"];
        "0x000033ae" -> "0x000033d6" [color="#c50f1f"];
        "0x000033d6" -> "0x00003695" [color="#13a10e"];
        "0x000033d6" -> "0x000033fc" [color="#c50f1f"];
        "0x000033fc" -> "0x00003330" [color="#3a96dd"];
        "0x00003410" -> "0x00002c0e" [color="#3a96dd"];
        "0x00003420" -> "0x00002b40" [color="#3a96dd"];
        "0x0000342d" -> "0x00002b40" [color="#3a96dd"];
        "0x0000343a" -> "0x0000344d" [color="#3a96dd"];
        "0x0000344d" -> "0x00003462" [color="#3a96dd"];
        "0x00003462" -> "0x00002f85" [color="#13a10e"];
        "0x00003462" -> "0x00003470" [color="#c50f1f"];
        "0x00003470" -> "0x00002f76" [color="#13a10e"];
        "0x00003470" -> "0x0000347d" [color="#c50f1f"];
        "0x0000347d" -> "0x00002f85" [color="#3a96dd"];
        "0x000034a3" -> "0x00002ee3" [color="#3a96dd"];
        "0x000034b2" -> "0x0000306b" [color="#13a10e"];
        "0x000034b2" -> "0x000034c1" [color="#c50f1f"];
        "0x000034c1" -> "0x0000306b" [color="#3a96dd"];
        "0x000034e7" -> "0x000030d1" [color="#3a96dd"];
        "0x000034f3" -> "0x00003330" [color="#3a96dd"];
        "0x0000352c" -> "0x00003b42" [color="#13a10e"];
        "0x0000352c" -> "0x00003539" [color="#c50f1f"];
        "0x00003539" -> "0x00003927" [color="#13a10e"];
        "0x00003539" -> "0x00003553" [color="#c50f1f"];
        "0x00003553" -> "0x0000365e" [color="#13a10e"];
        "0x00003553" -> "0x0000355b" [color="#c50f1f"];
        "0x0000355b" -> "0x0000365e" [color="#13a10e"];
        "0x0000355b" -> "0x00003567" [color="#c50f1f"];
        "0x00003567" -> "0x0000476b" [color="#13a10e"];
        "0x00003567" -> "0x0000358b" [color="#c50f1f"];
        "0x0000358b" -> "0x0000365e" [color="#13a10e"];
        "0x0000358b" -> "0x0000359a" [color="#c50f1f"];
        "0x0000359a" -> "0x000035b0" [color="#3a96dd"];
        "0x000035b0" -> "0x000035d1" [color="#3a96dd"];
        "0x000035d1" -> "0x000036b1" [color="#13a10e"];
        "0x000035d1" -> "0x000035de" [color="#c50f1f"];
        "0x000035de" -> "0x000031c9" [color="#13a10e"];
        "0x000035de" -> "0x000035e9" [color="#c50f1f"];
        "0x000035e9" -> "0x000031c9" [color="#13a10e"];
        "0x000035e9" -> "0x000035f9" [color="#c50f1f"];
        "0x000035f9" -> "0x000041bd" [color="#13a10e"];
        "0x000035f9" -> "0x00003618" [color="#c50f1f"];
        "0x00003618" -> "0x000031c9" [color="#3a96dd"];
        "0x0000365e" -> "0x000035b0" [color="#13a10e"];
        "0x0000365e" -> "0x00003689" [color="#c50f1f"];
        "0x00003689" -> "0x000035d1" [color="#3a96dd"];
        "0x00003695" -> "0x00003330" [color="#3a96dd"];
        "0x000036b1" -> "0x0000387a" [color="#13a10e"];
        "0x000036b1" -> "0x000036d6" [color="#c50f1f"];
        "0x000036d6" -> "0x00003702" [color="#13a10e"];
        "0x000036d6" -> "0x000036f0" [color="#c50f1f"];
        "0x000036f0" -> "0x000040b3" [color="#13a10e"];
        "0x000036f0" -> "0x00003702" [color="#c50f1f"];
        "0x00003702" -> "0x000038da" [color="#13a10e"];
        "0x00003702" -> "0x0000370d" [color="#c50f1f"];
        "0x0000370d" -> "0x000046f2" [color="#13a10e"];
        "0x0000370d" -> "0x00003788" [color="#c50f1f"];
        "0x00003788" -> "0x000031c9" [color="#3a96dd"];
        "0x000037a0" -> "0x00003aca" [color="#13a10e"];
        "0x000037a0" -> "0x000037b7" [color="#c50f1f"];
        "0x000037b7" -> "0x00003244" [color="#3a96dd"];
        "0x000037fa" -> "0x0000313f" [color="#13a10e"];
        "0x000037fa" -> "0x0000380e" [color="#c50f1f"];
        "0x0000380e" -> "0x00003237" [color="#3a96dd"];
        "0x00003813" -> "0x0000470d" [color="#13a10e"];
        "0x00003813" -> "0x00003828" [color="#c50f1f"];
        "0x00003828" -> "0x00003c0c" [color="#13a10e"];
        "0x00003828" -> "0x0000384f" [color="#c50f1f"];
        "0x0000384f" -> "0x0000386c" [color="#13a10e"];
        "0x0000384f" -> "0x00003854" [color="#c50f1f"];
        "0x00003854" -> "0x00003858" [color="#3a96dd"];
        "0x00003858" -> "0x00003858" [color="#13a10e"];
        "0x00003858" -> "0x0000386c" [color="#c50f1f"];
        "0x0000386c" -> "0x000035d1" [color="#3a96dd"];
        "0x0000387a" -> "0x00004750" [color="#13a10e"];
        "0x0000387a" -> "0x000038a6" [color="#c50f1f"];
        "0x000038a6" -> "0x000038da" [color="#3a96dd"];
        "0x000038da" -> "0x00003cdb" [color="#13a10e"];
        "0x000038da" -> "0x00003906" [color="#c50f1f"];
        "0x00003906" -> "0x000031c9" [color="#3a96dd"];
        "0x00003927" -> "0x00003b85" [color="#13a10e"];
        "0x00003927" -> "0x0000392f" [color="#c50f1f"];
        "0x0000392f" -> "0x00003998" [color="#3a96dd"];
        "0x0000396b" -> "0x00003cf6" [color="#13a10e"];
        "0x0000396b" -> "0x00003985" [color="#c50f1f"];
        "0x00003985" -> "0x00003992" [color="#3a96dd"];
        "0x00003992" -> "0x00003998" [color="#3a96dd"];
        "0x00003998" -> "0x0000461f" [color="#13a10e"];
        "0x00003998" -> "0x000039b9" [color="#c50f1f"];
        "0x000039b9" -> "0x0000396b" [color="#13a10e"];
        "0x000039b9" -> "0x000039ea" [color="#c50f1f"];
        "0x000039ea" -> "0x00003992" [color="#3a96dd"];
        "0x00003a0c" -> "0x00003de8" [color="#13a10e"];
        "0x00003a0c" -> "0x00003a1f" [color="#c50f1f"];
        "0x00003a1f" -> "0x00003dbf" [color="#13a10e"];
        "0x00003a1f" -> "0x00003a2c" [color="#c50f1f"];
        "0x00003a2c" -> "0x00003a3a" [color="#3a96dd"];
        "0x00003a3a" -> "0x00004bd3" [color="#13a10e"];
        "0x00003a3a" -> "0x00003a51" [color="#c50f1f"];
        "0x00003a63" -> "0x00003190" [color="#3a96dd"];
        "0x00003a7e" -> "0x00003d9f" [color="#13a10e"];
        "0x00003a7e" -> "0x00003aa0" [color="#c50f1f"];
        "0x00003aa0" -> "0x0000386c" [color="#3a96dd"];
        "0x00003aac" -> "0x00003ab4" [color="#3a96dd"];
        "0x00003ab4" -> "0x00002e9b" [color="#3a96dd"];
        "0x00003abd" -> "0x00003ab4" [color="#3a96dd"];
        "0x00003aca" -> "0x000037b7" [color="#3a96dd"];
        "0x00003ae5" -> "0x00002fc4" [color="#3a96dd"];
        "0x00003afa" -> "0x0000386c" [color="#3a96dd"];
        "0x00003b42" -> "0x000035d1" [color="#3a96dd"];
        "0x00003b85" -> "0x0000392f" [color="#13a10e"];
        "0x00003b85" -> "0x00003b91" [color="#c50f1f"];
        "0x00003b91" -> "0x000041d8" [color="#13a10e"];
        "0x00003b91" -> "0x00003ba8" [color="#c50f1f"];
        "0x00003ba8" -> "0x00003bb4" [color="#3a96dd"];
        "0x00003bb4" -> "0x0000392f" [color="#13a10e"];
        "0x00003bb4" -> "0x00003bdf" [color="#c50f1f"];
        "0x00003bdf" -> "0x000046c6" [color="#13a10e"];
        "0x00003bdf" -> "0x00003be9" [color="#c50f1f"];
        "0x00003be9" -> "0x00003bff" [color="#13a10e"];
        "0x00003be9" -> "0x00003bee" [color="#c50f1f"];
        "0x00003bee" -> "0x0000478d" [color="#13a10e"];
        "0x00003bee" -> "0x00003bff" [color="#c50f1f"];
        "0x00003bff" -> "0x000035b0" [color="#3a96dd"];
        "0x00003c0c" -> "0x00003c28" [color="#13a10e"];
        "0x00003c0c" -> "0x00003c1a" [color="#c50f1f"];
        "0x00003c1a" -> "0x00003c28" [color="#3a96dd"];
        "0x00003c28" -> "0x000047f0" [color="#13a10e"];
        "0x00003c28" -> "0x00003c42" [color="#c50f1f"];
        "0x00003c42" -> "0x00003c4a" [color="#3a96dd"];
        "0x00003c47" -> "0x00003c4a" [color="#3a96dd"];
        "0x00003c4a" -> "0x00003c47" [color="#13a10e"];
        "0x00003c4a" -> "0x00003c60" [color="#c50f1f"];
        "0x00003c60" -> "0x00003c8b" [color="#13a10e"];
        "0x00003c60" -> "0x00003c77" [color="#c50f1f"];
        "0x00003c77" -> "0x00003c7a" [color="#3a96dd"];
        "0x00003c7a" -> "0x00003c7a" [color="#13a10e"];
        "0x00003c7a" -> "0x00003c8b" [color="#c50f1f"];
        "0x00003c8b" -> "0x00004172" [color="#13a10e"];
        "0x00003c8b" -> "0x00003c94" [color="#c50f1f"];
        "0x00003c94" -> "0x00003cc0" [color="#13a10e"];
        "0x00003c94" -> "0x00003ca0" [color="#c50f1f"];
        "0x00003ca0" -> "0x00003cb4" [color="#13a10e"];
        "0x00003ca0" -> "0x00003cac" [color="#c50f1f"];
        "0x00003cac" -> "0x00003cb4" [color="#3a96dd"];
        "0x00003cb4" -> "0x00003ca0" [color="#13a10e"];
        "0x00003cb4" -> "0x00003cc0" [color="#c50f1f"];
        "0x00003cc0" -> "0x00003858" [color="#3a96dd"];
        "0x00003cce" -> "0x00003ab4" [color="#3a96dd"];
        "0x00003cdb" -> "0x00003906" [color="#3a96dd"];
        "0x00003cf6" -> "0x00003992" [color="#3a96dd"];
        "0x00003d05" -> "0x00003083" [color="#13a10e"];
        "0x00003d05" -> "0x00003d14" [color="#c50f1f"];
        "0x00003d14" -> "0x00003083" [color="#13a10e"];
        "0x00003d14" -> "0x00003d23" [color="#c50f1f"];
        "0x00003d23" -> "0x00003a3a" [color="#3a96dd"];
        "0x00003d28" -> "0x000032df" [color="#13a10e"];
        "0x00003d28" -> "0x00003d44" [color="#c50f1f"];
        "0x00003d44" -> "0x000047ba" [color="#13a10e"];
        "0x00003d44" -> "0x00003d5f" [color="#c50f1f"];
        "0x00003d5f" -> "0x0000386c" [color="#13a10e"];
        "0x00003d5f" -> "0x00003d79" [color="#c50f1f"];
        "0x00003d79" -> "0x0000386c" [color="#3a96dd"];
        "0x00003d9f" -> "0x0000386c" [color="#3a96dd"];
        "0x00003dbf" -> "0x00003a2c" [color="#13a10e"];
        "0x00003dbf" -> "0x00003dce" [color="#c50f1f"];
        "0x00003dce" -> "0x00003de8" [color="#3a96dd"];
        "0x00003de8" -> "0x00003dfb" [color="#3a96dd"];
        "0x00003dfb" -> "0x00003e30" [color="#13a10e"];
        "0x00003dfb" -> "0x00003e0b" [color="#c50f1f"];
        "0x00003e0b" -> "0x00003e30" [color="#13a10e"];
        "0x00003e0b" -> "0x00003e13" [color="#c50f1f"];
        "0x00003e13" -> "0x00003e30" [color="#13a10e"];
        "0x00003e13" -> "0x00003e1b" [color="#c50f1f"];
        "0x00003e1b" -> "0x0000409f" [color="#13a10e"];
        "0x00003e1b" -> "0x00003e30" [color="#c50f1f"];
        "0x00003e30" -> "0x00003e34" [color="#3a96dd"];
        "0x00003e34" -> "0x00003dfb" [color="#13a10e"];
        "0x00003e34" -> "0x00003e3d" [color="#c50f1f"];
        "0x00003e3d" -> "0x00003a1f" [color="#13a10e"];
        "0x00003e3d" -> "0x00003e46" [color="#c50f1f"];
        "0x00003e46" -> "0x00004b59" [color="#13a10e"];
        "0x00003e46" -> "0x00003e60" [color="#c50f1f"];
        "0x00003e60" -> "0x00003ef3" [color="#13a10e"];
        "0x00003e60" -> "0x00003e81" [color="#c50f1f"];
        "0x00003e81" -> "0x00003e8b" [color="#3a96dd"];
        "0x00003e8b" -> "0x00003ea1" [color="#13a10e"];
        "0x00003e8b" -> "0x00003e91" [color="#c50f1f"];
        "0x00003e91" -> "0x00003ef3" [color="#13a10e"];
        "0x00003e91" -> "0x00003ea1" [color="#c50f1f"];
        "0x00003ea1" -> "0x00003e8b" [color="#13a10e"];
        "0x00003ea1" -> "0x00003eaa" [color="#c50f1f"];
        "0x00003eaa" -> "0x00003eb6" [color="#3a96dd"];
        "0x00003eb6" -> "0x00003ec4" [color="#13a10e"];
        "0x00003eb6" -> "0x00003ebd" [color="#c50f1f"];
        "0x00003ebd" -> "0x00003ef3" [color="#13a10e"];
        "0x00003ebd" -> "0x00003ec4" [color="#c50f1f"];
        "0x00003ec4" -> "0x00003eb6" [color="#13a10e"];
        "0x00003ec4" -> "0x00003ecd" [color="#c50f1f"];
        "0x00003ecd" -> "0x00003ed4" [color="#3a96dd"];
        "0x00003ed4" -> "0x00003ee8" [color="#13a10e"];
        "0x00003ed4" -> "0x00003edb" [color="#c50f1f"];
        "0x00003edb" -> "0x00004887" [color="#13a10e"];
        "0x00003edb" -> "0x00003ee8" [color="#c50f1f"];
        "0x00003ee8" -> "0x00003ed4" [color="#13a10e"];
        "0x00003ee8" -> "0x00003ef3" [color="#c50f1f"];
        "0x00003ef3" -> "0x000047fd" [color="#13a10e"];
        "0x00003ef3" -> "0x00003f08" [color="#c50f1f"];
        "0x00003f08" -> "0x00003f0a" [color="#3a96dd"];
        "0x00003f0a" -> "0x00003f3a" [color="#3a96dd"];
        "0x00003f3a" -> "0x00004001" [color="#3a96dd"];
        "0x00003f50" -> "0x00003f76" [color="#13a10e"];
        "0x00003f50" -> "0x00003f59" [color="#c50f1f"];
        "0x00003f59" -> "0x00003f76" [color="#13a10e"];
        "0x00003f59" -> "0x00003f60" [color="#c50f1f"];
        "0x00003f60" -> "0x00003f76" [color="#3a96dd"];
        "0x00003f76" -> "0x00003fc8" [color="#13a10e"];
        "0x00003f76" -> "0x00003f82" [color="#c50f1f"];
        "0x00003f82" -> "0x00004300" [color="#13a10e"];
        "0x00003f82" -> "0x00003f99" [color="#c50f1f"];
        "0x00003f99" -> "0x00004308" [color="#13a10e"];
        "0x00003f99" -> "0x00003fa1" [color="#c50f1f"];
        "0x00003fa1" -> "0x00003fc2" [color="#13a10e"];
        "0x00003fa1" -> "0x00003faa" [color="#c50f1f"];
        "0x00003faa" -> "0x00004308" [color="#13a10e"];
        "0x00003faa" -> "0x00003fc2" [color="#c50f1f"];
        "0x00003fc2" -> "0x00003fc8" [color="#3a96dd"];
        "0x00003fc8" -> "0x00004240" [color="#13a10e"];
        "0x00003fc8" -> "0x00003fd7" [color="#c50f1f"];
        "0x00003fd7" -> "0x00003ff2" [color="#3a96dd"];
        "0x00003ff2" -> "0x0000402e" [color="#13a10e"];
        "0x00003ff2" -> "0x00004001" [color="#c50f1f"];
        "0x00004001" -> "0x00003ff2" [color="#13a10e"];
        "0x00004001" -> "0x00004008" [color="#c50f1f"];
        "0x00004008" -> "0x00003f50" [color="#13a10e"];
        "0x00004008" -> "0x00004015" [color="#c50f1f"];
        "0x00004015" -> "0x00004001" [color="#13a10e"];
        "0x00004015" -> "0x0000402e" [color="#c50f1f"];
        "0x0000402e" -> "0x00004046" [color="#13a10e"];
        "0x0000402e" -> "0x00004039" [color="#c50f1f"];
        "0x00004039" -> "0x0000443d" [color="#13a10e"];
        "0x00004039" -> "0x00004046" [color="#c50f1f"];
        "0x00004046" -> "0x00004058" [color="#3a96dd"];
        "0x00004058" -> "0x0000443d" [color="#13a10e"];
        "0x00004058" -> "0x00004063" [color="#c50f1f"];
        "0x00004063" -> "0x00004070" [color="#13a10e"];
        "0x00004063" -> "0x00004068" [color="#c50f1f"];
        "0x00004068" -> "0x0000443d" [color="#13a10e"];
        "0x00004068" -> "0x00004070" [color="#c50f1f"];
        "0x00004070" -> "0x00004058" [color="#13a10e"];
        "0x00004070" -> "0x00004079" [color="#c50f1f"];
        "0x00004079" -> "0x00003a1f" [color="#3a96dd"];
        "0x0000409f" -> "0x00003e34" [color="#3a96dd"];
        "0x000040b3" -> "0x00004205" [color="#13a10e"];
        "0x000040b3" -> "0x000040df" [color="#c50f1f"];
        "0x000040df" -> "0x00004220" [color="#13a10e"];
        "0x000040df" -> "0x000040fe" [color="#c50f1f"];
        "0x000040fe" -> "0x000038da" [color="#3a96dd"];
        "0x0000413c" -> "0x00004146" [color="#3a96dd"];
        "0x00004146" -> "0x00004172" [color="#3a96dd"];
        "0x00004172" -> "0x00003c94" [color="#3a96dd"];
        "0x0000417f" -> "0x00002f85" [color="#13a10e"];
        "0x0000417f" -> "0x0000418d" [color="#c50f1f"];
        "0x0000418d" -> "0x00002f85" [color="#3a96dd"];
        "0x000041bd" -> "0x00003618" [color="#3a96dd"];
        "0x000041d8" -> "0x0000392f" [color="#13a10e"];
        "0x000041d8" -> "0x000041fd" [color="#c50f1f"];
        "0x000041fd" -> "0x00003bb4" [color="#3a96dd"];
        "0x00004205" -> "0x000040df" [color="#3a96dd"];
        "0x00004220" -> "0x000040fe" [color="#3a96dd"];
        "0x00004240" -> "0x00004502" [color="#13a10e"];
        "0x00004240" -> "0x00004258" [color="#c50f1f"];
        "0x00004258" -> "0x00004335" [color="#13a10e"];
        "0x00004258" -> "0x00004269" [color="#c50f1f"];
        "0x00004269" -> "0x000043cf" [color="#13a10e"];
        "0x00004269" -> "0x000042a1" [color="#c50f1f"];
        "0x000042a1" -> "0x000042b5" [color="#13a10e"];
        "0x000042a1" -> "0x000042a8" [color="#c50f1f"];
        "0x000042a8" -> "0x0000454b" [color="#13a10e"];
        "0x000042a8" -> "0x000042b5" [color="#c50f1f"];
        "0x000042b5" -> "0x00004c53" [color="#13a10e"];
        "0x000042b5" -> "0x000042c6" [color="#c50f1f"];
        "0x000042c6" -> "0x00003fd7" [color="#13a10e"];
        "0x000042c6" -> "0x000042da" [color="#c50f1f"];
        "0x000042da" -> "0x00003fd7" [color="#13a10e"];
        "0x000042da" -> "0x000042e5" [color="#c50f1f"];
        "0x000042e5" -> "0x00003fd7" [color="#3a96dd"];
        "0x00004300" -> "0x00003fc2" [color="#13a10e"];
        "0x00004300" -> "0x00004308" [color="#c50f1f"];
        "0x00004308" -> "0x00004b15" [color="#13a10e"];
        "0x00004308" -> "0x00004323" [color="#c50f1f"];
        "0x00004323" -> "0x00004b15" [color="#13a10e"];
        "0x00004323" -> "0x0000432c" [color="#c50f1f"];
        "0x0000432c" -> "0x00003fc8" [color="#3a96dd"];
        "0x00004335" -> "0x000045dd" [color="#13a10e"];
        "0x00004335" -> "0x00004349" [color="#c50f1f"];
        "0x00004349" -> "0x00004269" [color="#13a10e"];
        "0x00004349" -> "0x00004389" [color="#c50f1f"];
        "0x00004389" -> "0x00003ff2" [color="#13a10e"];
        "0x00004389" -> "0x000043a2" [color="#c50f1f"];
        "0x000043a2" -> "0x00003ff2" [color="#13a10e"];
        "0x000043a2" -> "0x000043af" [color="#c50f1f"];
        "0x000043af" -> "0x00003ff2" [color="#3a96dd"];
        "0x000043cf" -> "0x000042a1" [color="#13a10e"];
        "0x000043cf" -> "0x000043e1" [color="#c50f1f"];
        "0x000043e1" -> "0x00004bc7" [color="#13a10e"];
        "0x000043e1" -> "0x00004430" [color="#c50f1f"];
        "0x00004430" -> "0x000042a1" [color="#3a96dd"];
        "0x0000443d" -> "0x00004586" [color="#13a10e"];
        "0x0000443d" -> "0x00004448" [color="#c50f1f"];
        "0x00004448" -> "0x00004586" [color="#13a10e"];
        "0x00004448" -> "0x00004453" [color="#c50f1f"];
        "0x00004453" -> "0x00003f3a" [color="#13a10e"];
        "0x00004453" -> "0x00004460" [color="#c50f1f"];
        "0x00004460" -> "0x00003f3a" [color="#13a10e"];
        "0x00004460" -> "0x00004491" [color="#c50f1f"];
        "0x00004491" -> "0x00004c13" [color="#13a10e"];
        "0x00004491" -> "0x0000449f" [color="#c50f1f"];
        "0x0000449f" -> "0x00003f3a" [color="#13a10e"];
        "0x0000449f" -> "0x000044aa" [color="#c50f1f"];
        "0x000044aa" -> "0x00003a1f" [color="#13a10e"];
        "0x000044aa" -> "0x000044b5" [color="#c50f1f"];
        "0x000044b5" -> "0x000045f4" [color="#13a10e"];
        "0x000044b5" -> "0x000044c3" [color="#c50f1f"];
        "0x000044c3" -> "0x00003f3a" [color="#13a10e"];
        "0x000044c3" -> "0x000044d6" [color="#c50f1f"];
        "0x000044d6" -> "0x00004502" [color="#3a96dd"];
        "0x00004502" -> "0x00003ff2" [color="#3a96dd"];
        "0x0000454b" -> "0x000042b5" [color="#3a96dd"];
        "0x00004586" -> "0x00004c27" [color="#13a10e"];
        "0x00004586" -> "0x0000459a" [color="#c50f1f"];
        "0x0000459a" -> "0x0000449f" [color="#13a10e"];
        "0x0000459a" -> "0x000045a7" [color="#c50f1f"];
        "0x000045a7" -> "0x00004491" [color="#13a10e"];
        "0x000045a7" -> "0x000045d8" [color="#c50f1f"];
        "0x000045d8" -> "0x0000449f" [color="#3a96dd"];
        "0x000045dd" -> "0x00004269" [color="#13a10e"];
        "0x000045dd" -> "0x000045ef" [color="#c50f1f"];
        "0x000045ef" -> "0x00004349" [color="#3a96dd"];
        "0x000045f4" -> "0x000044c3" [color="#13a10e"];
        "0x000045f4" -> "0x00004603" [color="#c50f1f"];
        "0x00004603" -> "0x000044c3" [color="#13a10e"];
        "0x00004603" -> "0x00004611" [color="#c50f1f"];
        "0x00004611" -> "0x00003f3a" [color="#3a96dd"];
        "0x0000461f" -> "0x00004647" [color="#13a10e"];
        "0x0000461f" -> "0x00004638" [color="#c50f1f"];
        "0x00004638" -> "0x00004841" [color="#3a96dd"];
        "0x0000463d" -> "0x00004647" [color="#3a96dd"];
        "0x00004647" -> "0x0000463d" [color="#13a10e"];
        "0x00004647" -> "0x00004659" [color="#c50f1f"];
        "0x00004659" -> "0x0000466b" [color="#13a10e"];
        "0x00004659" -> "0x00004665" [color="#c50f1f"];
        "0x00004665" -> "0x0000466b" [color="#3a96dd"];
        "0x0000466b" -> "0x0000467a" [color="#13a10e"];
        "0x0000466b" -> "0x00004670" [color="#c50f1f"];
        "0x00004670" -> "0x0000467a" [color="#3a96dd"];
        "0x0000467a" -> "0x0000469e" [color="#3a96dd"];
        "0x00004683" -> "0x00004697" [color="#13a10e"];
        "0x00004683" -> "0x0000468f" [color="#c50f1f"];
        "0x0000468f" -> "0x00004697" [color="#3a96dd"];
        "0x00004697" -> "0x0000469e" [color="#3a96dd"];
        "0x0000469e" -> "0x00004683" [color="#13a10e"];
        "0x0000469e" -> "0x000046a3" [color="#c50f1f"];
        "0x000046a3" -> "0x000046bc" [color="#3a96dd"];
        "0x000046ad" -> "0x000046bc" [color="#3a96dd"];
        "0x000046bc" -> "0x000046ad" [color="#13a10e"];
        "0x000046bc" -> "0x000046c1" [color="#c50f1f"];
        "0x000046c1" -> "0x000035d1" [color="#3a96dd"];
        "0x000046c6" -> "0x00003be9" [color="#13a10e"];
        "0x000046c6" -> "0x000046e1" [color="#c50f1f"];
        "0x000046e1" -> "0x000046f2" [color="#3a96dd"];
        "0x000046f2" -> "0x00003788" [color="#3a96dd"];
        "0x0000470d" -> "0x0000384f" [color="#3a96dd"];
        "0x00004750" -> "0x000038a6" [color="#3a96dd"];
        "0x0000476b" -> "0x0000359a" [color="#13a10e"];
        "0x0000476b" -> "0x00004779" [color="#c50f1f"];
        "0x00004779" -> "0x0000478d" [color="#3a96dd"];
        "0x0000478d" -> "0x00003bff" [color="#13a10e"];
        "0x0000478d" -> "0x000047ab" [color="#c50f1f"];
        "0x000047ab" -> "0x000047ba" [color="#3a96dd"];
        "0x000047ba" -> "0x000032df" [color="#13a10e"];
        "0x000047ba" -> "0x000047d0" [color="#c50f1f"];
        "0x000047d0" -> "0x000047df" [color="#3a96dd"];
        "0x000047df" -> "0x0000344d" [color="#3a96dd"];
        "0x000047f0" -> "0x00003c60" [color="#3a96dd"];
        "0x000047fd" -> "0x00003f0a" [color="#13a10e"];
        "0x000047fd" -> "0x0000480a" [color="#c50f1f"];
        "0x0000480a" -> "0x00003f0a" [color="#13a10e"];
        "0x0000480a" -> "0x00004816" [color="#c50f1f"];
        "0x00004816" -> "0x00003f0a" [color="#13a10e"];
        "0x00004816" -> "0x00004825" [color="#c50f1f"];
        "0x00004825" -> "0x00003f0a" [color="#3a96dd"];
        "0x00004841" -> "0x000046bc" [color="#3a96dd"];
        "0x00004887" -> "0x00004898" [color="#3a96dd"];
        "0x00004898" -> "0x000048be" [color="#13a10e"];
        "0x00004898" -> "0x000048a7" [color="#c50f1f"];
        "0x000048a7" -> "0x00003ef3" [color="#13a10e"];
        "0x000048a7" -> "0x000048be" [color="#c50f1f"];
        "0x000048be" -> "0x00004898" [color="#13a10e"];
        "0x000048be" -> "0x000048c9" [color="#c50f1f"];
        "0x000048c9" -> "0x000048d0" [color="#3a96dd"];
        "0x000048d0" -> "0x000048f5" [color="#13a10e"];
        "0x000048d0" -> "0x000048d7" [color="#c50f1f"];
        "0x000048d7" -> "0x000048f5" [color="#13a10e"];
        "0x000048d7" -> "0x000048e9" [color="#c50f1f"];
        "0x000048e9" -> "0x00003ef3" [color="#13a10e"];
        "0x000048e9" -> "0x000048f5" [color="#c50f1f"];
        "0x000048f5" -> "0x000048d0" [color="#13a10e"];
        "0x000048f5" -> "0x00004900" [color="#c50f1f"];
        "0x00004900" -> "0x00004917" [color="#13a10e"];
        "0x00004900" -> "0x0000490a" [color="#c50f1f"];
        "0x0000490a" -> "0x00003ef3" [color="#13a10e"];
        "0x0000490a" -> "0x00004917" [color="#c50f1f"];
        "0x00004917" -> "0x00004ab4" [color="#13a10e"];
        "0x00004917" -> "0x00004927" [color="#c50f1f"];
        "0x00004927" -> "0x000053bc" [color="#13a10e"];
        "0x00004927" -> "0x0000493b" [color="#c50f1f"];
        "0x0000493b" -> "0x000051aa" [color="#13a10e"];
        "0x0000493b" -> "0x00004964" [color="#c50f1f"];
        "0x00004964" -> "0x0000499c" [color="#3a96dd"];
        "0x0000499c" -> "0x00004c7c" [color="#13a10e"];
        "0x0000499c" -> "0x000049ad" [color="#c50f1f"];
        "0x000049ad" -> "0x00004a38" [color="#13a10e"];
        "0x000049ad" -> "0x000049d7" [color="#c50f1f"];
        "0x000049d7" -> "0x00004a16" [color="#13a10e"];
        "0x000049d7" -> "0x00004a12" [color="#c50f1f"];
        "0x00004a12" -> "0x00004a16" [color="#3a96dd"];
        "0x00004a16" -> "0x00005371" [color="#13a10e"];
        "0x00004a16" -> "0x00004a38" [color="#c50f1f"];
        "0x00004a38" -> "0x00004c5f" [color="#13a10e"];
        "0x00004a38" -> "0x00004a53" [color="#c50f1f"];
        "0x00004a53" -> "0x00004d32" [color="#13a10e"];
        "0x00004a53" -> "0x00004a80" [color="#c50f1f"];
        "0x00004a80" -> "0x00004aa1" [color="#3a96dd"];
        "0x00004aa1" -> "0x00004ab4" [color="#3a96dd"];
        "0x00004ab4" -> "0x00004ae7" [color="#3a96dd"];
        "0x00004ae7" -> "0x00004af7" [color="#13a10e"];
        "0x00004ae7" -> "0x00004aef" [color="#c50f1f"];
        "0x00004aef" -> "0x00004af7" [color="#3a96dd"];
        "0x00004af7" -> "0x00004b07" [color="#13a10e"];
        "0x00004af7" -> "0x00004aff" [color="#c50f1f"];
        "0x00004aff" -> "0x00004b07" [color="#3a96dd"];
        "0x00004b07" -> "0x00004ae7" [color="#13a10e"];
        "0x00004b07" -> "0x00004b10" [color="#c50f1f"];
        "0x00004b10" -> "0x00003ef3" [color="#3a96dd"];
        "0x00004b15" -> "0x00004b59" [color="#3a96dd"];
        "0x00004b59" -> "0x00004b85" [color="#3a96dd"];
        "0x00004b85" -> "0x00004bc7" [color="#3a96dd"];
        "0x00004bc7" -> "0x00004bd3" [color="#3a96dd"];
        "0x00004bd8" -> "0x00004c13" [color="#3a96dd"];
        "0x00004c27" -> "0x00004c53" [color="#3a96dd"];
        "0x00004c53" -> "0x00003fd7" [color="#3a96dd"];
        "0x00004c5f" -> "0x000051aa" [color="#13a10e"];
        "0x00004c5f" -> "0x00004c73" [color="#c50f1f"];
        "0x00004c73" -> "0x00004c7c" [color="#3a96dd"];
        "0x00004c7c" -> "0x0000499c" [color="#13a10e"];
        "0x00004c7c" -> "0x00004c8b" [color="#c50f1f"];
        "0x00004c8b" -> "0x00005234" [color="#13a10e"];
        "0x00004c8b" -> "0x00004c9d" [color="#c50f1f"];
        "0x00004c9d" -> "0x00004d15" [color="#3a96dd"];
        "0x00004cc3" -> "0x00004d01" [color="#13a10e"];
        "0x00004cc3" -> "0x00004ccb" [color="#c50f1f"];
        "0x00004ccb" -> "0x00004d01" [color="#13a10e"];
        "0x00004ccb" -> "0x00004cdb" [color="#c50f1f"];
        "0x00004cdb" -> "0x000052ab" [color="#13a10e"];
        "0x00004cdb" -> "0x00004cee" [color="#c50f1f"];
        "0x00004cee" -> "0x000052ab" [color="#13a10e"];
        "0x00004cee" -> "0x00004d01" [color="#c50f1f"];
        "0x00004d01" -> "0x00004d0c" [color="#3a96dd"];
        "0x00004d0c" -> "0x00004d77" [color="#13a10e"];
        "0x00004d0c" -> "0x00004d15" [color="#c50f1f"];
        "0x00004d15" -> "0x00004d0c" [color="#13a10e"];
        "0x00004d15" -> "0x00004d1d" [color="#c50f1f"];
        "0x00004d1d" -> "0x00004cc3" [color="#13a10e"];
        "0x00004d1d" -> "0x00004d26" [color="#c50f1f"];
        "0x00004d26" -> "0x00004d01" [color="#3a96dd"];
        "0x00004d32" -> "0x00004c7c" [color="#13a10e"];
        "0x00004d32" -> "0x00004d3b" [color="#c50f1f"];
        "0x00004d3b" -> "0x00004c7c" [color="#3a96dd"];
        "0x00004d77" -> "0x00004da7" [color="#3a96dd"];
        "0x00004da7" -> "0x00004ef1" [color="#13a10e"];
        "0x00004da7" -> "0x00004db4" [color="#c50f1f"];
        "0x00004db4" -> "0x00004f4f" [color="#13a10e"];
        "0x00004db4" -> "0x00004dc4" [color="#c50f1f"];
        "0x00004dc4" -> "0x00004ec5" [color="#13a10e"];
        "0x00004dc4" -> "0x00004df1" [color="#c50f1f"];
        "0x00004df1" -> "0x000051ca" [color="#13a10e"];
        "0x00004df1" -> "0x00004df9" [color="#c50f1f"];
        "0x00004df9" -> "0x00004e34" [color="#3a96dd"];
        "0x00004e23" -> "0x0000500d" [color="#13a10e"];
        "0x00004e23" -> "0x00004e34" [color="#c50f1f"];
        "0x00004e34" -> "0x00004e23" [color="#13a10e"];
        "0x00004e34" -> "0x00004e3a" [color="#c50f1f"];
        "0x00004e3a" -> "0x00004e23" [color="#13a10e"];
        "0x00004e3a" -> "0x00004e6a" [color="#c50f1f"];
        "0x00004e6a" -> "0x000050a3" [color="#13a10e"];
        "0x00004e6a" -> "0x00004e92" [color="#c50f1f"];
        "0x00004e92" -> "0x00005225" [color="#13a10e"];
        "0x00004e92" -> "0x00004e9f" [color="#c50f1f"];
        "0x00004e9f" -> "0x00004f3a" [color="#13a10e"];
        "0x00004e9f" -> "0x00004ead" [color="#c50f1f"];
        "0x00004ec5" -> "0x00004df9" [color="#13a10e"];
        "0x00004ec5" -> "0x00004ecd" [color="#c50f1f"];
        "0x00004ecd" -> "0x00004e9f" [color="#13a10e"];
        "0x00004ecd" -> "0x00004eec" [color="#c50f1f"];
        "0x00004eec" -> "0x00004da7" [color="#3a96dd"];
        "0x00004ef1" -> "0x00004db4" [color="#13a10e"];
        "0x00004ef1" -> "0x00004efe" [color="#c50f1f"];
        "0x00004efe" -> "0x00004db4" [color="#13a10e"];
        "0x00004efe" -> "0x00004f0f" [color="#c50f1f"];
        "0x00004f0f" -> "0x00004f30" [color="#3a96dd"];
        "0x00004f30" -> "0x00003a3a" [color="#3a96dd"];
        "0x00004f4f" -> "0x00004fb4" [color="#3a96dd"];
        "0x00004f56" -> "0x0000524f" [color="#13a10e"];
        "0x00004f56" -> "0x00004f5e" [color="#c50f1f"];
        "0x00004f5e" -> "0x00004fc3" [color="#13a10e"];
        "0x00004f5e" -> "0x00004f69" [color="#c50f1f"];
        "0x00004f69" -> "0x00004fc3" [color="#13a10e"];
        "0x00004f69" -> "0x00004f73" [color="#c50f1f"];
        "0x00004f73" -> "0x00004f7a" [color="#3a96dd"];
        "0x00004f7a" -> "0x0000501f" [color="#13a10e"];
        "0x00004f7a" -> "0x00004fb4" [color="#c50f1f"];
        "0x00004fb4" -> "0x00004f56" [color="#13a10e"];
        "0x00004fb4" -> "0x00004fbe" [color="#c50f1f"];
        "0x00004fbe" -> "0x00004f7a" [color="#3a96dd"];
        "0x00004fc3" -> "0x00004f7a" [color="#13a10e"];
        "0x00004fc3" -> "0x00004fd1" [color="#c50f1f"];
        "0x00004fd1" -> "0x00004fbe" [color="#13a10e"];
        "0x00004fd1" -> "0x00004fe5" [color="#c50f1f"];
        "0x00004fe5" -> "0x00004f7a" [color="#3a96dd"];
        "0x0000500d" -> "0x00004da7" [color="#3a96dd"];
        "0x0000501f" -> "0x00005345" [color="#13a10e"];
        "0x0000501f" -> "0x00005029" [color="#c50f1f"];
        "0x00005029" -> "0x00004c13" [color="#13a10e"];
        "0x00005029" -> "0x00005038" [color="#c50f1f"];
        "0x000050a3" -> "0x00005115" [color="#13a10e"];
        "0x000050a3" -> "0x000050bb" [color="#c50f1f"];
        "0x000050bb" -> "0x00005306" [color="#13a10e"];
        "0x000050bb" -> "0x000050d1" [color="#c50f1f"];
        "0x00005115" -> "0x0000513d" [color="#13a10e"];
        "0x00005115" -> "0x0000511c" [color="#c50f1f"];
        "0x000051ca" -> "0x000051dd" [color="#3a96dd"];
        "0x000051ce" -> "0x00004ecd" [color="#13a10e"];
        "0x000051ce" -> "0x000051dd" [color="#c50f1f"];
        "0x000051dd" -> "0x000051ce" [color="#13a10e"];
        "0x000051dd" -> "0x000051ec" [color="#c50f1f"];
        "0x000051ec" -> "0x00004ab4" [color="#3a96dd"];
        "0x00005225" -> "0x00004e9f" [color="#3a96dd"];
        "0x00005234" -> "0x00004aa1" [color="#13a10e"];
        "0x00005234" -> "0x0000523f" [color="#c50f1f"];
        "0x0000523f" -> "0x00004c9d" [color="#13a10e"];
        "0x0000523f" -> "0x0000524a" [color="#c50f1f"];
        "0x0000524a" -> "0x00004f30" [color="#3a96dd"];
        "0x000052ab" -> "0x00004ab4" [color="#3a96dd"];
        "0x00005345" -> "0x00005371" [color="#3a96dd"];
        "0x00005371" -> "0x00004a80" [color="#13a10e"];
        "0x00005371" -> "0x00005382" [color="#c50f1f"];
        "0x000053bc" -> "0x000053f0" [color="#3a96dd"];
}
