digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x000060c0" [URL="dbg.dump_remainder/0x000060c0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- dump_remainder:\l  ; XREFS: CALL 0x000035bf  CALL 0x00003dad  CALL 0x00003fdf  \l  ; XREFS: CALL 0x000063ef  CALL 0x0000649a  CALL 0x00006568  \l349: dbg.dump_remainder (int64_t arg1, void **arg2, int64_t arg3, signed int arg4);\l; var char[8192] buffer @ rbp-0x2040\l; var void **var_8h @ rsp+0x8\l; var int64_t var_10h @ rsp+0x10\l; var int64_t var_2018h @ rsp+0x2018\l; arg int64_t arg1 @ rdi\l; arg void **arg2 @ rsi\l; arg int64_t arg3 @ rdx\l; arg signed int arg4 @ rcx\l0x000060c0      push r15                                               ; uintmax_t dump_remainder(_Bool want_header,char const * pretty_filename,int fd,uintmax_t n_bytes);\l0x000060c2      push r14\l0x000060c4      push r13\l0x000060c6      push r12\l0x000060c8      push rbp\l0x000060c9      push rbx\l0x000060ca      sub rsp, 0x1000\l0x000060d1      or qword [rsp], 0\l0x000060d6      sub rsp, 0x1000\l0x000060dd      or qword [rsp], 0\l0x000060e2      sub rsp, 0x28\l0x000060e6      xor r12d, r12d\l0x000060e9      mov qword [var_8h], rsi                                ; arg2\l0x000060ee      mov r15d, edx                                          ; arg3\l0x000060f1      mov ebp, edi                                           ; arg1\l0x000060f3      mov rbx, rcx                                           ; arg4\l0x000060f6      mov qword [rsp], rcx                                   ; arg4\l0x000060fa      lea r13, [var_10h]\l0x000060ff      mov rax, qword fs:[0x28]\l0x00006108      mov qword [var_2018h], rax\l0x00006110      xor eax, eax\l0x00006112      nop word [rax + rax]\l"]
	"0x00006118" [URL="dbg.dump_remainder/0x00006118", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.dump_remainder @ 0x6167\l0x00006118      mov edx, sym._init                                     ; 0x2000\l0x0000611d      mov rsi, r13                                           ; int64_t arg2\l0x00006120      mov edi, r15d                                          ; int64_t arg1\l0x00006123      cmp rbx, rdx\l0x00006126      cmovbe rdx, rbx                                        ; int64_t arg3\l0x0000612a      call dbg.safe_read\l0x0000612f      mov r14, rax\l0x00006132      cmp rax, 0xffffffffffffffff\l0x00006136      je 0x6170\l"]
	"0x00006138" [URL="dbg.dump_remainder/0x00006138", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00006138      test rax, rax\l0x0000613b      je 0x617d\l"]
	"0x0000613d" [URL="dbg.dump_remainder/0x0000613d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000613d      test bpl, bpl\l0x00006140      jne 0x61b0\l"]
	"0x00006142" [URL="dbg.dump_remainder/0x00006142", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.dump_remainder @ 0x61e8\l0x00006142      mov rsi, r14\l0x00006145      mov rdi, r13                                           ; int64_t arg2\l0x00006148      add r12, r14\l0x0000614b      call sym.xwrite_stdout.part.0\l0x00006150      mov rax, qword [rsp]\l0x00006154      cmp rax, 0xffffffffffffffff\l0x00006158      je 0x6165\l"]
	"0x0000615a" [URL="dbg.dump_remainder/0x0000615a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000615a      sub rbx, r14\l0x0000615d      je 0x617d\l"]
	"0x0000615f" [URL="dbg.dump_remainder/0x0000615f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000615f      cmp rax, 0xfffffffffffffffe\l0x00006163      je 0x617d\l"]
	"0x00006165" [URL="dbg.dump_remainder/0x00006165", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.dump_remainder @ 0x6158\l0x00006165      xor ebp, ebp\l0x00006167      jmp 0x6118\l"]
	"0x00006170" [URL="dbg.dump_remainder/0x00006170", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.dump_remainder @ 0x6136\l0x00006170      call sym.imp.__errno_location\l0x00006175      cmp dword [rax], 0xb\l0x00006178      mov rbx, rax\l0x0000617b      jne 0x61ed\l"]
	"0x0000617d" [URL="dbg.dump_remainder/0x0000617d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.dump_remainder @ 0x613b, 0x615d, 0x6163\l0x0000617d      mov rax, qword [var_2018h]\l0x00006185      sub rax, qword fs:[0x28]\l0x0000618e      jne 0x6226\l"]
	"0x00006194" [URL="dbg.dump_remainder/0x00006194", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00006194      add rsp, 0x2028\l0x0000619b      mov rax, r12\l0x0000619e      pop rbx\l0x0000619f      pop rbp\l0x000061a0      pop r12\l0x000061a2      pop r13\l0x000061a4      pop r14\l0x000061a6      pop r15\l0x000061a8      ret\l"]
	"0x000061b0" [URL="dbg.dump_remainder/0x000061b0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.dump_remainder @ 0x6140\l0x000061b0      cmp byte [obj.first_file.2], 0                         ; [0x13010:1]=0\l0x000061b7      mov rcx, qword [var_8h]\l0x000061bc      lea rax, [0x0000ea41]\l0x000061c3      lea rdx, [0x0000ea40]                                  ; \"\\n\"\l0x000061ca      cmovne rdx, rax\l0x000061ce      lea rsi, str._s___s___n                                ; 0xdf8c ; \"%s==> %s <==\\n\"\l0x000061d5      mov edi, 1\l; DATA XREFS from dbg.usage @ 0x6fa7, 0x6fcf\l0x000061da      xor eax, eax\l0x000061dc      call sym.imp.__printf_chk\l0x000061e1      mov byte [obj.first_file.2], 0                         ; [0x13010:1]=0\l0x000061e8      jmp 0x6142\l"]
	"0x000061ed" [URL="dbg.dump_remainder/0x000061ed", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.dump_remainder @ 0x617b\l0x000061ed      mov rsi, qword [var_8h]                                ; int64_t arg2\l0x000061f2      mov edi, 4                                             ; int64_t arg1\l0x000061f7      call sym.quotearg_style\l0x000061fc      mov edx, 5\l0x00006201      lea rsi, str.error_reading__s                          ; 0xdf4f ; \"error reading %s\"\l0x00006208      xor edi, edi\l0x0000620a      mov r12, rax\l0x0000620d      call sym.imp.dcgettext\l0x00006212      mov esi, dword [rbx]                                   ; int errname\l0x00006214      mov rcx, r12\l0x00006217      mov edi, 1                                             ; int status\l0x0000621c      mov rdx, rax                                           ; char *format\l0x0000621f      xor eax, eax\l0x00006221      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00006226" [URL="dbg.dump_remainder/0x00006226", fillcolor="white",color="#767676", fontname="Courier",label="; CODE XREF from dbg.dump_remainder @ 0x618e\l0x00006226      call sym.imp.__stack_chk_fail                          ; void __stack_chk_fail(void)\l"]
        "0x000060c0" -> "0x00006118" [color="#3a96dd"];
        "0x00006118" -> "0x00006170" [color="#13a10e"];
        "0x00006118" -> "0x00006138" [color="#c50f1f"];
        "0x00006138" -> "0x0000617d" [color="#13a10e"];
        "0x00006138" -> "0x0000613d" [color="#c50f1f"];
        "0x0000613d" -> "0x000061b0" [color="#13a10e"];
        "0x0000613d" -> "0x00006142" [color="#c50f1f"];
        "0x00006142" -> "0x00006165" [color="#13a10e"];
        "0x00006142" -> "0x0000615a" [color="#c50f1f"];
        "0x0000615a" -> "0x0000617d" [color="#13a10e"];
        "0x0000615a" -> "0x0000615f" [color="#c50f1f"];
        "0x0000615f" -> "0x0000617d" [color="#13a10e"];
        "0x0000615f" -> "0x00006165" [color="#c50f1f"];
        "0x00006165" -> "0x00006118" [color="#3a96dd"];
        "0x00006170" -> "0x000061ed" [color="#13a10e"];
        "0x00006170" -> "0x0000617d" [color="#c50f1f"];
        "0x0000617d" -> "0x00006226" [color="#13a10e"];
        "0x0000617d" -> "0x00006194" [color="#c50f1f"];
        "0x000061b0" -> "0x00006142" [color="#3a96dd"];
        "0x000061ed" -> "0x00006226" [color="#3a96dd"];
}
