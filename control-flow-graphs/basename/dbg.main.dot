digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x000025e0" [URL="dbg.main/0x000025e0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x27f8\l501: int dbg.main (int argc, char **argv);\l; var int64_t var_8h @ rsp+0x10\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x000025e0      endbr64                                                ; int main(int argc,char ** argv);\l0x000025e4      push r15\l0x000025e6      xor r15d, r15d\l0x000025e9      push r14\l0x000025eb      lea r14, obj.longopts                                  ; 0xab60\l0x000025f2      push r13\l0x000025f4      lea r13, str.as:z                                      ; 0x70c8 ; \"+as:z\"\l0x000025fb      push r12\l0x000025fd      lea r12, [0x00007087]                                  ; \"coreutils\"\l0x00002604      push rbp\l0x00002605      mov ebp, edi                                           ; argc\l0x00002607      push rbx\l0x00002608      mov rbx, rsi                                           ; argv\l0x0000260b      sub rsp, 0x18\l0x0000260f      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x00002612      call dbg.set_program_name\l0x00002617      lea rsi, [0x00007961]                                  ; const char *locale\l0x0000261e      mov edi, 6                                             ; int category\l0x00002623      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x00002628      lea rsi, str._usr_local_share_locale                   ; 0x70b0 ; \"/usr/local/share/locale\" ; char *dirname\l0x0000262f      mov rdi, r12                                           ; char *domainname\l0x00002632      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x00002637      mov rdi, r12                                           ; char *domainname\l0x0000263a      xor r12d, r12d\l0x0000263d      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x00002642      lea rdi, [dbg.close_stdout]                            ; 0x2d90 ; func function\l0x00002649      call sym.atexit                                        ; int atexit(func function)\l0x0000264e      mov qword [var_8h], 0\l0x00002657      nop word [rax + rax]\l"]
	"0x00002660" [URL="dbg.main/0x00002660", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x269a, 0x26af\l0x00002660      xor r8d, r8d\l0x00002663      mov rcx, r14\l0x00002666      mov rdx, r13\l0x00002669      mov rsi, rbx\l0x0000266c      mov edi, ebp\l0x0000266e      call sym.imp.getopt_long\l0x00002673      cmp eax, 0xffffffff\l0x00002676      je 0x2705\l"]
	"0x0000267c" [URL="dbg.main/0x0000267c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000267c      cmp eax, 0x61\l0x0000267f      je 0x2694\l"]
	"0x00002681" [URL="dbg.main/0x00002681", fillcolor="white",color="#767676", fontname="Courier",label="0x00002681      jle 0x26b8\l"]
	"0x00002683" [URL="dbg.main/0x00002683", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002683      cmp eax, 0x73\l0x00002686      jne 0x26a0\l"]
	"0x00002688" [URL="dbg.main/0x00002688", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002688      mov rax, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0xb0a0:8]=0\l0x0000268f      mov qword [var_8h], rax\l"]
	"0x00002694" [URL="dbg.main/0x00002694", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x267f\l0x00002694      mov r15d, 1\l0x0000269a      jmp 0x2660\l"]
	"0x000026a0" [URL="dbg.main/0x000026a0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2686\l0x000026a0      cmp eax, 0x7a\l0x000026a3      jne 0x2793\l"]
	"0x000026a9" [URL="dbg.main/0x000026a9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000026a9      mov r12d, 1\l0x000026af      jmp 0x2660\l"]
	"0x000026b8" [URL="dbg.main/0x000026b8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2681\l0x000026b8      cmp eax, 0xffffff7d                                    ; 4294967165\l0x000026bd      jne 0x26f3\l"]
	"0x000026bf" [URL="dbg.main/0x000026bf", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000026bf      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0xb088:8]=0 ; int64_t arg1\l0x000026c6      mov rcx, qword [obj.Version]                           ; [0xb010:8]=0x74db ; int64_t arg5\l0x000026cd      xor eax, eax\l0x000026cf      xor r9d, r9d                                           ; int64_t arg_c0h\l0x000026d2      lea r8, str.David_MacKenzie                            ; 0x70ce ; \"David MacKenzie\" ; int64_t arg6\l0x000026d9      lea rdx, str.GNU_coreutils                             ; 0x7083 ; \"GNU coreutils\" ; int64_t arg3\l0x000026e0      lea rsi, str.basename                                  ; 0x7004 ; \"basename\" ; int64_t arg2\l0x000026e7      call dbg.version_etc\l0x000026ec      xor edi, edi                                           ; int status\l0x000026ee      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x000026f3" [URL="dbg.main/0x000026f3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x26bd\l0x000026f3      cmp eax, 0xffffff7e                                    ; 4294967166\l0x000026f8      jne 0x2793\l"]
	"0x000026fe" [URL="dbg.main/0x000026fe", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000026fe      xor edi, edi                                           ; int64_t arg1\l0x00002700      call dbg.usage\l"]
	"0x00002705" [URL="dbg.main/0x00002705", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2676\l0x00002705      mov eax, dword [obj.optind]                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=1\l0x0000270b      cmp eax, ebp\l0x0000270d      jge 0x2772\l"]
	"0x0000270f" [URL="dbg.main/0x0000270f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000270f      test r15b, r15b\l0x00002712      jne 0x2743\l"]
	"0x00002714" [URL="dbg.main/0x00002714", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002714      movsxd rcx, eax\l0x00002717      add eax, 2\l0x0000271a      cmp eax, ebp\l0x0000271c      jl 0x279d\l"]
	"0x0000271e" [URL="dbg.main/0x0000271e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000271e      movzx edx, r12b\l0x00002722      mov esi, 0\l0x00002727      je 0x276b\l"]
	"0x00002729" [URL="dbg.main/0x00002729", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2770\l0x00002729      mov rdi, qword [rbx + rcx*8]                           ; int64_t arg1\l0x0000272d      call dbg.perform_basename\l"]
	"0x00002732" [URL="dbg.main/0x00002732", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2769\l0x00002732      add rsp, 0x18\l0x00002736      xor eax, eax\l0x00002738      pop rbx\l0x00002739      pop rbp\l0x0000273a      pop r12\l0x0000273c      pop r13\l0x0000273e      pop r14\l0x00002740      pop r15\l0x00002742      ret\l"]
	"0x00002743" [URL="dbg.main/0x00002743", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2712, 0x2767\l0x00002743      cdqe\l0x00002745      mov rsi, qword [var_8h]                                ; int64_t arg2\l0x0000274a      mov edx, r12d                                          ; int64_t arg3\l0x0000274d      mov rdi, qword [rbx + rax*8]                           ; int64_t arg1\l0x00002751      call dbg.perform_basename\l0x00002756      mov eax, dword [obj.optind]                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=1\l0x0000275c      add eax, 1\l0x0000275f      mov dword [obj.optind], eax                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=1\l0x00002765      cmp eax, ebp\l0x00002767      jl 0x2743\l"]
	"0x00002769" [URL="dbg.main/0x00002769", fillcolor="white",color="#767676", fontname="Courier",label="0x00002769      jmp 0x2732\l"]
	"0x0000276b" [URL="dbg.main/0x0000276b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2727\l0x0000276b      mov rsi, qword [rbx + rcx*8 + 8]\l0x00002770      jmp 0x2729\l"]
	"0x00002772" [URL="dbg.main/0x00002772", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x270d\l0x00002772      mov edx, 5\l0x00002777      lea rsi, str.missing_operand                           ; 0x70de ; \"missing operand\"\l0x0000277e      xor edi, edi\l0x00002780      call sym.imp.dcgettext\l0x00002785      xor esi, esi                                           ; int errname\l0x00002787      xor edi, edi                                           ; int status\l0x00002789      mov rdx, rax                                           ; char *format\l0x0000278c      xor eax, eax\l0x0000278e      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002793" [URL="dbg.main/0x00002793", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x26a3, 0x26f8\l0x00002793      mov edi, 1                                             ; int64_t arg1\l0x00002798      call dbg.usage\l"]
	"0x0000279d" [URL="dbg.main/0x0000279d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x271c\l0x0000279d      mov rdi, qword [rbx + rcx*8 + 0x10]                    ; int64_t arg1\l0x000027a2      call dbg.quote\l0x000027a7      mov edx, 5\l0x000027ac      lea rsi, str.extra_operand__s                          ; 0x70ee ; \"extra operand %s\"\l0x000027b3      xor edi, edi\l0x000027b5      mov r12, rax\l0x000027b8      call sym.imp.dcgettext\l0x000027bd      xor edi, edi                                           ; int status\l0x000027bf      mov rcx, r12\l; DATA XREF from dbg.version_etc_arn @ 0x536f\l0x000027c2      xor esi, esi                                           ; int errname\l0x000027c4      mov rdx, rax                                           ; char *format\l0x000027c7      xor eax, eax\l0x000027c9      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x000027ce      mov edi, 1                                             ; int64_t arg1\l0x000027d3      call dbg.usage\l0x000027d8      nop dword [rax + rax]\l"]
        "0x000025e0" -> "0x00002660" [color="#3a96dd"];
        "0x00002660" -> "0x00002705" [color="#13a10e"];
        "0x00002660" -> "0x0000267c" [color="#c50f1f"];
        "0x0000267c" -> "0x00002694" [color="#13a10e"];
        "0x0000267c" -> "0x00002681" [color="#c50f1f"];
        "0x00002681" -> "0x000026b8" [color="#13a10e"];
        "0x00002681" -> "0x00002683" [color="#c50f1f"];
        "0x00002683" -> "0x000026a0" [color="#13a10e"];
        "0x00002683" -> "0x00002688" [color="#c50f1f"];
        "0x00002688" -> "0x00002694" [color="#3a96dd"];
        "0x00002694" -> "0x00002660" [color="#3a96dd"];
        "0x000026a0" -> "0x00002793" [color="#13a10e"];
        "0x000026a0" -> "0x000026a9" [color="#c50f1f"];
        "0x000026a9" -> "0x00002660" [color="#3a96dd"];
        "0x000026b8" -> "0x000026f3" [color="#13a10e"];
        "0x000026b8" -> "0x000026bf" [color="#c50f1f"];
        "0x000026f3" -> "0x00002793" [color="#13a10e"];
        "0x000026f3" -> "0x000026fe" [color="#c50f1f"];
        "0x000026fe" -> "0x00002705" [color="#3a96dd"];
        "0x00002705" -> "0x00002772" [color="#13a10e"];
        "0x00002705" -> "0x0000270f" [color="#c50f1f"];
        "0x0000270f" -> "0x00002743" [color="#13a10e"];
        "0x0000270f" -> "0x00002714" [color="#c50f1f"];
        "0x00002714" -> "0x0000279d" [color="#13a10e"];
        "0x00002714" -> "0x0000271e" [color="#c50f1f"];
        "0x0000271e" -> "0x0000276b" [color="#13a10e"];
        "0x0000271e" -> "0x00002729" [color="#c50f1f"];
        "0x00002729" -> "0x00002732" [color="#3a96dd"];
        "0x00002743" -> "0x00002743" [color="#13a10e"];
        "0x00002743" -> "0x00002769" [color="#c50f1f"];
        "0x00002769" -> "0x00002732" [color="#3a96dd"];
        "0x0000276b" -> "0x00002729" [color="#3a96dd"];
        "0x00002772" -> "0x00002793" [color="#3a96dd"];
        "0x00002793" -> "0x0000279d" [color="#3a96dd"];
        "0x0000279d" -> "0x000027e0" [color="#3a96dd"];
}
