digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00002700" [URL="dbg.main/0x00002700", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x2c28\l1260: int dbg.main (int argc, char **argv);\l; var int64_t var_8h @ rsp+0x10\l; var uint32_t var_10h @ rsp+0x18\l; var size_t *var_18h @ rsp+0x20\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x00002700      endbr64                                                ; int main(int argc,char ** argv);\l0x00002704      push r15\l0x00002706      lea r15, [0x00008ba1]\l0x0000270d      push r14\l0x0000270f      push r13\l0x00002711      push r12\l0x00002713      lea r12, [0x000080b8]                                  ; \"coreutils\"\l0x0000271a      push rbp\l0x0000271b      mov ebp, edi                                           ; argc\l0x0000271d      push rbx\l0x0000271e      mov rbx, rsi                                           ; argv\l0x00002721      sub rsp, 0x28\l0x00002725      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x00002728      call dbg.set_program_name\l0x0000272d      mov rsi, r15                                           ; const char *locale\l0x00002730      mov edi, 6                                             ; int category\l0x00002735      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x0000273a      lea rsi, str._usr_local_share_locale                   ; 0x80e1 ; \"/usr/local/share/locale\" ; char *dirname\l0x00002741      mov rdi, r12                                           ; char *domainname\l0x00002744      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x00002749      mov rdi, r12                                           ; char *domainname\l0x0000274c      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x00002751      lea rdi, [dbg.close_stdout]                            ; 0x41a0 ; func function\l0x00002758      call sym.atexit                                        ; int atexit(func function)\l0x0000275d      mov byte [obj.uniform], 0                              ; [0x17130:1]=1\l0x00002764      mov byte [obj.split], 0                                ; [0x17131:1]=1\l0x0000276b      mov byte [obj.tagged], 0                               ; [0x17132:1]=1\l0x00002772      mov byte [obj.crown], 0                                ; [0x17133:1]=1\l0x00002779      mov dword [obj.max_width], 0x4b                        ; 'K'\l                                                                       ; [0x17120:4]=162\l0x00002783      mov qword [obj.prefix], r15                            ; [0x17128:8]=1\l0x0000278a      mov dword [obj.prefix_full_length], 0                  ; [0x1711c:4]=1\l0x00002794      mov dword [obj.prefix_lead_space], 0                   ; [0x17118:4]=1\l0x0000279e      mov dword [obj.prefix_length], 0                       ; [0x17114:4]=0\l0x000027a8      mov qword [var_8h], 0\l0x000027b1      cmp ebp, 1\l0x000027b4      jle 0x27c3\l"]
	"0x000027b6" [URL="dbg.main/0x000027b6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027b6      mov rax, qword [rbx + 8]\l0x000027ba      cmp byte [rax], 0x2d\l0x000027bd      je 0x2967\l"]
	"0x000027c3" [URL="dbg.main/0x000027c3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x27b4, 0x2971, 0x298e\l0x000027c3      mov qword [var_10h], 0\l0x000027cc      lea r14, obj.long_options                              ; 0xba80 ; \"^\\x81\"\l0x000027d3      lea r13, str.0123456789cstuw:p:g:                      ; 0x8107 ; \"0123456789cstuw:p:g:\"\l0x000027da      lea r12, [0x000086c0]                                  ; \"H\\xa2\\xff\\xff-\\xa4\\xff\\xff-\\xa4\\xff\\xff-\\xa4\\xff\\xff0\\xa2\\xff\\xff-\\xa4\\xff\\xff-\\xa4\\xff\\xff-\\xa4\\xff\\xff-\\xa4\\xff\\xff-\\xa4\\xff\\xff-\\xa4\\xff\\xff-\\xa4\\xff\\xff-\\xa4\\xff\\xff\\xb0\\xa1\\xff\\xff-\\xa4\\xff\\xff-\\xa4\\xff\\xff\\xa0\\xa1\\xff\\xff\\x90\\xa1\\xff\\xff\\x80\\xa1\\xff\\xff-\\xa4\\xff\\xffp\\xa1\\xff\\xff\"\l0x000027e1      nop dword [rax]\l"]
	"0x000027e8" [URL="dbg.main/0x000027e8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x0000283c  CODE 0x00002847  CODE 0x00002857  \l; XREFS: CODE 0x00002867  CODE 0x000028eb  CODE 0x000028fc  \l; XREFS: CODE 0x0000290f  \l0x000027e8      mov rcx, r14\l0x000027eb      xor r8d, r8d\l0x000027ee      mov rdx, r13\l0x000027f1      mov rsi, rbx\l0x000027f4      mov edi, ebp\l0x000027f6      call sym.imp.getopt_long\l0x000027fb      mov ecx, eax\l0x000027fd      cmp eax, 0xffffffff\l0x00002800      je 0x2993\l"]
	"0x00002806" [URL="dbg.main/0x00002806", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002806      cmp ecx, 0x77\l0x00002809      jg case.0x282b.100\l"]
	"0x0000280f" [URL="dbg.main/0x0000280f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000280f      cmp ecx, 0x62\l0x00002812      jle 0x2918\l"]
	"0x00002818" [URL="dbg.main/0x00002818", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002818      lea eax, [rcx - 0x63]\l0x0000281b      cmp eax, 0x14\l0x0000281e      ja case.0x282b.100\l"]
	"0x00002824" [URL="dbg.main/0x00002824", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002824      movsxd rax, dword [r12 + rax*4]\l0x00002828      add rax, r12\l;-- switch\l0x0000282b      jmp rax                                                ; switch table (21 cases) at 0x86c0\l"]
	"0x00002830" [URL="dbg.main/0x00002830", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 119:                                                          ; from 0x0000282b\l; CODE XREF from dbg.main @ 0x282b\l0x00002830      mov rax, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0xc0a0:8]=0\l0x00002837      mov qword [var_8h], rax\l0x0000283c      jmp 0x27e8\l"]
	"0x00002840" [URL="dbg.main/0x00002840", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 117:                                                          ; from 0x0000282b\l; CODE XREF from dbg.main @ 0x282b\l0x00002840      mov byte [obj.uniform], 1                              ; [0x17130:1]=1\l0x00002847      jmp 0x27e8\l"]
	"0x00002850" [URL="dbg.main/0x00002850", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 116:                                                          ; from 0x0000282b\l; CODE XREF from dbg.main @ 0x282b\l0x00002850      mov byte [obj.tagged], 1                               ; [0x17132:1]=1\l0x00002857      jmp 0x27e8\l"]
	"0x00002860" [URL="dbg.main/0x00002860", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 115:                                                          ; from 0x0000282b\l; CODE XREF from dbg.main @ 0x282b\l0x00002860      mov byte [obj.split], 1                                ; [0x17131:1]=1\l0x00002867      jmp 0x27e8\l"]
	"0x00002870" [URL="dbg.main/0x00002870", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 112:                                                          ; from 0x0000282b\l; CODE XREF from dbg.main @ 0x282b\l0x00002870      mov rdx, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0xc0a0:8]=0\l0x00002877      mov dword [obj.prefix_lead_space], 0                   ; [0x17118:4]=1\l0x00002881      cmp byte [rdx], 0x20\l0x00002884      jne 0x28a2\l"]
	"0x00002886" [URL="dbg.main/0x00002886", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002886      mov eax, 1\l0x0000288b      sub eax, edx\l0x0000288d      nop dword [rax]\l"]
	"0x00002890" [URL="dbg.main/0x00002890", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x289a\l0x00002890      lea ecx, [rax + rdx]\l0x00002893      add rdx, 1\l0x00002897      cmp byte [rdx], 0x20\l0x0000289a      je 0x2890\l"]
	"0x0000289c" [URL="dbg.main/0x0000289c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000289c      mov dword [obj.prefix_lead_space], ecx                 ; [0x17118:4]=1\l"]
	"0x000028a2" [URL="dbg.main/0x000028a2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2884\l0x000028a2      mov rdi, rdx                                           ; const char *s\l0x000028a5      mov qword [obj.prefix], rdx                            ; [0x17128:8]=1\l0x000028ac      mov qword [var_18h], rdx\l0x000028b1      call sym.imp.strlen                                    ; size_t strlen(const char *s)\l0x000028b6      mov rdx, qword [var_18h]\l0x000028bb      mov dword [obj.prefix_full_length], eax                ; [0x1711c:4]=1\l0x000028c1      cdqe\l0x000028c3      add rax, rdx\l0x000028c6      cmp rdx, rax\l0x000028c9      jb 0x28d9\l"]
	"0x000028cb" [URL="dbg.main/0x000028cb", fillcolor="white",color="#767676", fontname="Courier",label="0x000028cb      jmp 0x28df\l"]
	"0x000028d0" [URL="dbg.main/0x000028d0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x28dd\l0x000028d0      sub rax, 1\l0x000028d4      cmp rdx, rax\l0x000028d7      je 0x28df\l"]
	"0x000028d9" [URL="dbg.main/0x000028d9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x28c9\l0x000028d9      cmp byte [rax - 1], 0x20\l0x000028dd      je 0x28d0\l"]
	"0x000028df" [URL="dbg.main/0x000028df", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x28cb, 0x28d7\l0x000028df      mov byte [rax], 0\l0x000028e2      sub rax, rdx\l0x000028e5      mov dword [obj.prefix_length], eax                     ; [0x17114:4]=0\l0x000028eb      jmp 0x27e8\l"]
	"0x000028f0" [URL="dbg.main/0x000028f0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 103:                                                          ; from 0x0000282b\l; CODE XREF from dbg.main @ 0x282b\l0x000028f0      mov rax, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0xc0a0:8]=0\l0x000028f7      mov qword [var_10h], rax\l0x000028fc      jmp 0x27e8\l"]
	"0x00002908" [URL="dbg.main/0x00002908", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 99:                                                           ; from 0x0000282b\l; CODE XREF from dbg.main @ 0x282b\l0x00002908      mov byte [obj.crown], 1                                ; [0x17133:1]=1\l0x0000290f      jmp 0x27e8\l"]
	"0x00002918" [URL="dbg.main/0x00002918", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2812\l0x00002918      cmp ecx, 0xffffff7d                                    ; 4294967165\l0x0000291e      jne 0x2954\l"]
	"0x00002920" [URL="dbg.main/0x00002920", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002920      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0xc088:8]=0 ; int64_t arg1\l0x00002927      mov rcx, qword [obj.Version]                           ; [0xc010:8]=0x8726 \"9.0\" ; \"&\\x87\" ; int64_t arg5\l0x0000292e      xor eax, eax\l0x00002930      xor r9d, r9d                                           ; int64_t arg_c0h\l0x00002933      lea r8, str.Ross_Paterson                              ; 0x80f9 ; \"Ross Paterson\" ; int64_t arg6\l0x0000293a      lea rdx, str.GNU_coreutils                             ; 0x80b4 ; \"GNU coreutils\" ; int64_t arg3\l0x00002941      lea rsi, [0x0000803a]                                  ; \"fmt\" ; int64_t arg2\l0x00002948      call dbg.version_etc\l0x0000294d      xor edi, edi                                           ; int status\l0x0000294f      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x00002954" [URL="dbg.main/0x00002954", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x291e\l0x00002954      cmp ecx, 0xffffff7e                                    ; 4294967166\l0x0000295a      jne case.0x282b.100\l"]
	"0x00002960" [URL="dbg.main/0x00002960", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002960      xor edi, edi                                           ; int64_t arg1\l0x00002962      call dbg.usage\l"]
	"0x00002967" [URL="dbg.main/0x00002967", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27bd\l0x00002967      movsx edx, byte [rax + 1]\l0x0000296b      sub edx, 0x30\l0x0000296e      cmp edx, 9\l0x00002971      ja 0x27c3\l"]
	"0x00002977" [URL="dbg.main/0x00002977", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002977      add rax, 1\l0x0000297b      add rbx, 8\l0x0000297f      sub ebp, 1\l0x00002982      mov qword [var_8h], rax\l0x00002987      mov rax, qword [rbx - 8]\l0x0000298b      mov qword [rbx], rax\l0x0000298e      jmp 0x27c3\l"]
	"0x00002993" [URL="dbg.main/0x00002993", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2800\l0x00002993      mov r14, qword [var_8h]\l0x00002998      test r14, r14\l0x0000299b      je 0x2ac8\l"]
	"0x000029a1" [URL="dbg.main/0x000029a1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000029a1      lea r13, str.invalid_width                             ; 0x811c ; \"invalid width\"\l0x000029a8      xor edi, edi\l0x000029aa      mov edx, 5\l0x000029af      mov rsi, r13\l0x000029b2      call sym.imp.dcgettext\l0x000029b7      xor r9d, r9d\l0x000029ba      xor esi, esi                                           ; int64_t arg3\l0x000029bc      mov rcx, r15                                           ; int64_t arg5\l0x000029bf      mov r8, rax                                            ; int64_t arg6\l0x000029c2      mov edx, 0x9c4                                         ; int64_t arg4\l0x000029c7      mov rdi, r14                                           ; int64_t arg2\l0x000029ca      call dbg.xdectoumax\l0x000029cf      cmp qword [var_10h], 0\l0x000029d5      mov dword [obj.max_width], eax                         ; [0x17120:4]=162\l0x000029db      mov r12, rax\l0x000029de      je 0x2ad0\l"]
	"0x000029e4" [URL="dbg.main/0x000029e4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000029e4      mov edx, 5\l0x000029e9      mov rsi, r13\l0x000029ec      xor edi, edi\l0x000029ee      call sym.imp.dcgettext\l0x000029f3      mov rdi, qword [var_10h]                               ; int64_t arg2\l0x000029f8      movsxd rdx, r12d                                       ; int64_t arg4\l0x000029fb      xor r9d, r9d\l0x000029fe      mov r8, rax                                            ; int64_t arg6\l0x00002a01      mov rcx, r15                                           ; int64_t arg5\l0x00002a04      xor esi, esi                                           ; int64_t arg3\l0x00002a06      call dbg.xdectoumax\l0x00002a0b      mov dword [obj.goal_width], eax                        ; [0x17110:4]=152\l"]
	"0x00002a11" [URL="dbg.main/0x00002a11", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2ae8, 0x2b3b\l0x00002a11      mov eax, dword [obj.optind]                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xc098:4]=1\l0x00002a17      cmp eax, ebp\l0x00002a19      je 0x2b40\l"]
	"0x00002a1f" [URL="dbg.main/0x00002a1f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002a1f      mov r13d, 0\l0x00002a25      mov r12d, 1\l0x00002a2b      lea r14, [0x00008038]                                  ; \"r\"\l0x00002a32      jl 0x2a68\l"]
	"0x00002a34" [URL="dbg.main/0x00002a34", fillcolor="white",color="#767676", fontname="Courier",label="0x00002a34      jmp 0x2ab1\l"]
	"0x00002a36" [URL="dbg.main/0x00002a36", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2a72\l0x00002a36      cmp byte [r15 + 1], 0\l0x00002a3b      jne 0x2a74\l"]
	"0x00002a3d" [URL="dbg.main/0x00002a3d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002a3d      mov rdi, qword [obj.stdin]                             ; obj.stdin_GLIBC_2.2.5\l                                                                       ; [0xc090:8]=0 ; int64_t arg1\l0x00002a44      mov rsi, r15                                           ; int64_t arg2\l0x00002a47      mov r13d, 1\l0x00002a4d      call dbg.fmt\l0x00002a52      and r12d, eax\l"]
	"0x00002a55" [URL="dbg.main/0x00002a55", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2a96, 0x2bc9\l0x00002a55      mov eax, dword [obj.optind]                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xc098:4]=1\l0x00002a5b      add eax, 1\l0x00002a5e      mov dword [obj.optind], eax                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xc098:4]=1\l0x00002a64      cmp eax, ebp\l0x00002a66      jge 0x2a98\l"]
	"0x00002a68" [URL="dbg.main/0x00002a68", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2a32\l0x00002a68      cdqe\l0x00002a6a      mov r15, qword [rbx + rax*8]\l0x00002a6e      cmp byte [r15], 0x2d\l0x00002a72      je 0x2a36\l"]
	"0x00002a74" [URL="dbg.main/0x00002a74", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2a3b\l0x00002a74      mov rsi, r14                                           ; const char *mode\l0x00002a77      mov rdi, r15                                           ; const char *filename\l0x00002a7a      call sym.imp.fopen                                     ; file*fopen(const char *filename, const char *mode)\l0x00002a7f      mov rsi, r15\l0x00002a82      mov rdi, rax\l0x00002a85      test rax, rax\l0x00002a88      je 0x2b89\l"]
	"0x00002a8e" [URL="dbg.main/0x00002a8e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002a8e      call dbg.fmt\l0x00002a93      and r12d, eax\l0x00002a96      jmp 0x2a55\l"]
	"0x00002a98" [URL="dbg.main/0x00002a98", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2a66\l0x00002a98      test r13b, r13b\l0x00002a9b      je 0x2ab1\l"]
	"0x00002a9d" [URL="dbg.main/0x00002a9d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2b56\l0x00002a9d      mov rdi, qword [obj.stdin]                             ; obj.stdin_GLIBC_2.2.5\l                                                                       ; [0xc090:8]=0 ; int64_t arg1\l0x00002aa4      call dbg.rpl_fclose\l0x00002aa9      test eax, eax\l0x00002aab      jne 0x2bce\l"]
	"0x00002ab1" [URL="dbg.main/0x00002ab1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2a34, 0x2a9b\l0x00002ab1      add rsp, 0x28\l0x00002ab5      xor r12d, 1\l0x00002ab9      pop rbx\l0x00002aba      movzx eax, r12b\l0x00002abe      pop rbp\l0x00002abf      pop r12\l0x00002ac1      pop r13\l0x00002ac3      pop r14\l0x00002ac5      pop r15\l0x00002ac7      ret\l"]
	"0x00002ac8" [URL="dbg.main/0x00002ac8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x299b\l0x00002ac8      cmp qword [var_10h], 0\l0x00002ace      jne 0x2aff\l"]
	"0x00002ad0" [URL="dbg.main/0x00002ad0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x29de\l0x00002ad0      imul eax, dword [obj.max_width], 0xbb\l0x00002ada      mov ecx, 0xc8\l0x00002adf      cdq\l0x00002ae0      idiv ecx\l0x00002ae2      mov dword [obj.goal_width], eax                        ; [0x17110:4]=152\l0x00002ae8      jmp 0x2a11\l"]
	"0x00002aed" [URL="dbg.main/0x00002aed", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label=";-- case 100...102:                                                    ; from 0x0000282b\l;-- case 104:                                                          ; from 0x0000282b\l;-- case 105...111:                                                    ; from 0x0000282b\l;-- case 113:                                                          ; from 0x0000282b\l;-- case 114:                                                          ; from 0x0000282b\l;-- default:                                                           ; from 0x282b\l; CODE XREFS from dbg.main @ 0x2809, 0x281e, 0x282b, 0x295a\l0x00002aed      lea eax, [rcx - 0x30]\l0x00002af0      cmp eax, 9\l0x00002af3      jbe 0x2b5b\l"]
	"0x00002af5" [URL="dbg.main/0x00002af5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2b84\l0x00002af5      mov edi, 1                                             ; int64_t arg1\l0x00002afa      call dbg.usage\l"]
	"0x00002aff" [URL="dbg.main/0x00002aff", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2ace\l0x00002aff      mov edx, 5\l0x00002b04      lea rsi, str.invalid_width                             ; 0x811c ; \"invalid width\"\l0x00002b0b      xor edi, edi\l0x00002b0d      call sym.imp.dcgettext\l0x00002b12      mov rdi, qword [var_10h]                               ; int64_t arg2\l0x00002b17      xor r9d, r9d\l0x00002b1a      mov rcx, r15                                           ; int64_t arg5\l0x00002b1d      mov r8, rax                                            ; int64_t arg6\l0x00002b20      mov edx, 0x4b                                          ; 'K' ; int64_t arg4\l0x00002b25      xor esi, esi                                           ; int64_t arg3\l0x00002b27      call dbg.xdectoumax\l0x00002b2c      mov dword [obj.goal_width], eax                        ; [0x17110:4]=152\l0x00002b32      add eax, 0xa\l0x00002b35      mov dword [obj.max_width], eax                         ; [0x17120:4]=162\l0x00002b3b      jmp 0x2a11\l"]
	"0x00002b40" [URL="dbg.main/0x00002b40", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2a19\l0x00002b40      mov rdi, qword [obj.stdin]                             ; obj.stdin_GLIBC_2.2.5\l                                                                       ; [0xc090:8]=0 ; int64_t arg1\l0x00002b47      lea rsi, [0x0000812a]                                  ; \"-\" ; int64_t arg2\l0x00002b4e      call dbg.fmt\l0x00002b53      mov r12d, eax\l0x00002b56      jmp 0x2a9d\l"]
	"0x00002b5b" [URL="dbg.main/0x00002b5b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2af3\l0x00002b5b      xor edi, edi\l0x00002b5d      mov edx, 5\l0x00002b62      lea rsi, str.invalid_option_____c___WIDTH_is_recognized_only_when_it_is_the_first_noption__use__w_N_instead ; 0x8660 ; \"invalid option -- %c; -WIDTH is recognized only when it is the first\\noption; use -w N instead\"\l0x00002b69      mov dword [var_8h], ecx\l0x00002b6d      call sym.imp.dcgettext\l0x00002b72      mov ecx, dword [var_8h]\l0x00002b76      xor esi, esi                                           ; int errname\l0x00002b78      xor edi, edi                                           ; int status\l0x00002b7a      mov rdx, rax                                           ; char *format\l0x00002b7d      xor eax, eax\l0x00002b7f      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00002b84      jmp 0x2af5\l"]
	"0x00002b89" [URL="dbg.main/0x00002b89", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2a88\l0x00002b89      mov edi, 4                                             ; int64_t arg1\l0x00002b8e      call sym.quotearg_style\l0x00002b93      mov edx, 5\l0x00002b98      lea rsi, str.cannot_open__s_for_reading                ; 0x812c ; \"cannot open %s for reading\"\l0x00002b9f      xor edi, edi\l0x00002ba1      mov qword [var_8h], rax\l0x00002ba6      call sym.imp.dcgettext\l0x00002bab      mov r12, rax\l0x00002bae      call sym.imp.__errno_location\l0x00002bb3      mov rcx, qword [var_8h]\l0x00002bb8      mov rdx, r12                                           ; char *format\l0x00002bbb      xor edi, edi                                           ; int status\l0x00002bbd      mov esi, dword [rax]                                   ; int errname\l0x00002bbf      xor eax, eax\l0x00002bc1      xor r12d, r12d\l0x00002bc4      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00002bc9      jmp 0x2a55\l"]
	"0x00002bce" [URL="dbg.main/0x00002bce", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2aab\l0x00002bce      mov edx, 5\l0x00002bd3      lea rsi, str.closing_standard_input                    ; 0x8147 ; \"closing standard input\"\l0x00002bda      xor edi, edi\l0x00002bdc      call sym.imp.dcgettext\l0x00002be1      mov r12, rax\l0x00002be4      call sym.imp.__errno_location\l0x00002be9      mov rcx, r12\l0x00002bec      mov edi, 1                                             ; int status\l0x00002bf1      lea rdx, [0x0000873a]                                  ; \"%s\" ; char *format\l0x00002bf8      mov esi, dword [rax]                                   ; int errname\l0x00002bfa      xor eax, eax\l0x00002bfc      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00002c01      nop word cs:[rax + rax]\l0x00002c0b      nop dword [rax + rax]\l"]
        "0x00002700" -> "0x000027c3" [color="#13a10e"];
        "0x00002700" -> "0x000027b6" [color="#c50f1f"];
        "0x000027b6" -> "0x00002967" [color="#13a10e"];
        "0x000027b6" -> "0x000027c3" [color="#c50f1f"];
        "0x000027c3" -> "0x000027e8" [color="#3a96dd"];
        "0x000027e8" -> "0x00002993" [color="#13a10e"];
        "0x000027e8" -> "0x00002806" [color="#c50f1f"];
        "0x00002806" -> "0x00002aed" [color="#13a10e"];
        "0x00002806" -> "0x0000280f" [color="#c50f1f"];
        "0x0000280f" -> "0x00002918" [color="#13a10e"];
        "0x0000280f" -> "0x00002818" [color="#c50f1f"];
        "0x00002818" -> "0x00002aed" [color="#13a10e"];
        "0x00002818" -> "0x00002824" [color="#c50f1f"];
        "0x00002824" -> "0x00002908" [color="#3a96dd"];
        "0x00002824" -> "0x00002aed" [color="#3a96dd"];
        "0x00002824" -> "0x00002aed" [color="#3a96dd"];
        "0x00002824" -> "0x00002aed" [color="#3a96dd"];
        "0x00002824" -> "0x000028f0" [color="#3a96dd"];
        "0x00002824" -> "0x00002aed" [color="#3a96dd"];
        "0x00002824" -> "0x00002aed" [color="#3a96dd"];
        "0x00002824" -> "0x00002aed" [color="#3a96dd"];
        "0x00002824" -> "0x00002aed" [color="#3a96dd"];
        "0x00002824" -> "0x00002aed" [color="#3a96dd"];
        "0x00002824" -> "0x00002aed" [color="#3a96dd"];
        "0x00002824" -> "0x00002aed" [color="#3a96dd"];
        "0x00002824" -> "0x00002aed" [color="#3a96dd"];
        "0x00002824" -> "0x00002870" [color="#3a96dd"];
        "0x00002824" -> "0x00002aed" [color="#3a96dd"];
        "0x00002824" -> "0x00002aed" [color="#3a96dd"];
        "0x00002824" -> "0x00002860" [color="#3a96dd"];
        "0x00002824" -> "0x00002850" [color="#3a96dd"];
        "0x00002824" -> "0x00002840" [color="#3a96dd"];
        "0x00002824" -> "0x00002aed" [color="#3a96dd"];
        "0x00002824" -> "0x00002830" [color="#3a96dd"];
        "0x00002830" -> "0x000027e8" [color="#3a96dd"];
        "0x00002840" -> "0x000027e8" [color="#3a96dd"];
        "0x00002850" -> "0x000027e8" [color="#3a96dd"];
        "0x00002860" -> "0x000027e8" [color="#3a96dd"];
        "0x00002870" -> "0x000028a2" [color="#13a10e"];
        "0x00002870" -> "0x00002886" [color="#c50f1f"];
        "0x00002886" -> "0x00002890" [color="#3a96dd"];
        "0x00002890" -> "0x00002890" [color="#13a10e"];
        "0x00002890" -> "0x0000289c" [color="#c50f1f"];
        "0x0000289c" -> "0x000028a2" [color="#3a96dd"];
        "0x000028a2" -> "0x000028d9" [color="#13a10e"];
        "0x000028a2" -> "0x000028cb" [color="#c50f1f"];
        "0x000028cb" -> "0x000028df" [color="#3a96dd"];
        "0x000028d0" -> "0x000028df" [color="#13a10e"];
        "0x000028d0" -> "0x000028d9" [color="#c50f1f"];
        "0x000028d9" -> "0x000028d0" [color="#13a10e"];
        "0x000028d9" -> "0x000028df" [color="#c50f1f"];
        "0x000028df" -> "0x000027e8" [color="#3a96dd"];
        "0x000028f0" -> "0x000027e8" [color="#3a96dd"];
        "0x00002908" -> "0x000027e8" [color="#3a96dd"];
        "0x00002918" -> "0x00002954" [color="#13a10e"];
        "0x00002918" -> "0x00002920" [color="#c50f1f"];
        "0x00002954" -> "0x00002aed" [color="#13a10e"];
        "0x00002954" -> "0x00002960" [color="#c50f1f"];
        "0x00002960" -> "0x00002967" [color="#3a96dd"];
        "0x00002967" -> "0x000027c3" [color="#13a10e"];
        "0x00002967" -> "0x00002977" [color="#c50f1f"];
        "0x00002977" -> "0x000027c3" [color="#3a96dd"];
        "0x00002993" -> "0x00002ac8" [color="#13a10e"];
        "0x00002993" -> "0x000029a1" [color="#c50f1f"];
        "0x000029a1" -> "0x00002ad0" [color="#13a10e"];
        "0x000029a1" -> "0x000029e4" [color="#c50f1f"];
        "0x000029e4" -> "0x00002a11" [color="#3a96dd"];
        "0x00002a11" -> "0x00002b40" [color="#13a10e"];
        "0x00002a11" -> "0x00002a1f" [color="#c50f1f"];
        "0x00002a1f" -> "0x00002a68" [color="#13a10e"];
        "0x00002a1f" -> "0x00002a34" [color="#c50f1f"];
        "0x00002a34" -> "0x00002ab1" [color="#3a96dd"];
        "0x00002a36" -> "0x00002a74" [color="#13a10e"];
        "0x00002a36" -> "0x00002a3d" [color="#c50f1f"];
        "0x00002a3d" -> "0x00002a55" [color="#3a96dd"];
        "0x00002a55" -> "0x00002a98" [color="#13a10e"];
        "0x00002a55" -> "0x00002a68" [color="#c50f1f"];
        "0x00002a68" -> "0x00002a36" [color="#13a10e"];
        "0x00002a68" -> "0x00002a74" [color="#c50f1f"];
        "0x00002a74" -> "0x00002b89" [color="#13a10e"];
        "0x00002a74" -> "0x00002a8e" [color="#c50f1f"];
        "0x00002a8e" -> "0x00002a55" [color="#3a96dd"];
        "0x00002a98" -> "0x00002ab1" [color="#13a10e"];
        "0x00002a98" -> "0x00002a9d" [color="#c50f1f"];
        "0x00002a9d" -> "0x00002bce" [color="#13a10e"];
        "0x00002a9d" -> "0x00002ab1" [color="#c50f1f"];
        "0x00002ac8" -> "0x00002aff" [color="#13a10e"];
        "0x00002ac8" -> "0x00002ad0" [color="#c50f1f"];
        "0x00002ad0" -> "0x00002a11" [color="#3a96dd"];
        "0x00002aed" -> "0x00002b5b" [color="#13a10e"];
        "0x00002aed" -> "0x00002af5" [color="#c50f1f"];
        "0x00002af5" -> "0x00002aff" [color="#3a96dd"];
        "0x00002aff" -> "0x00002a11" [color="#3a96dd"];
        "0x00002b40" -> "0x00002a9d" [color="#3a96dd"];
        "0x00002b5b" -> "0x00002af5" [color="#3a96dd"];
        "0x00002b89" -> "0x00002a55" [color="#3a96dd"];
        "0x00002bce" -> "0x00002c10" [color="#3a96dd"];
}
