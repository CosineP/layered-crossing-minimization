digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x000026c0" [URL="dbg.main/0x000026c0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x28a8\l448: int dbg.main (int argc, char **argv);\l; var int64_t var_8h @ rsp+0x10\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x000026c0      endbr64                                                ; int main(int argc,char ** argv);\l0x000026c4      push r15\l0x000026c6      lea r15, str.invalid_number                            ; 0x70ee ; \"invalid number\"\l0x000026cd      push r14\l0x000026cf      mov r14d, 2\l0x000026d5      push r13\l0x000026d7      lea r13, [0x0000709b]                                  ; \"coreutils\"\l0x000026de      push r12\l0x000026e0      lea r12, [0x00007020]\l0x000026e7      push rbp\l0x000026e8      mov ebp, edi                                           ; argc\l0x000026ea      push rbx\l0x000026eb      mov rbx, rsi                                           ; argv\l0x000026ee      sub rsp, 0x18\l0x000026f2      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x000026f5      call dbg.set_program_name\l0x000026fa      mov rsi, r12                                           ; const char *locale\l0x000026fd      mov edi, 6                                             ; int category\l0x00002702      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x00002707      lea rsi, str._usr_local_share_locale                   ; 0x70c4 ; \"/usr/local/share/locale\" ; char *dirname\l0x0000270e      mov rdi, r13                                           ; char *domainname\l0x00002711      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x00002716      mov rdi, r13                                           ; char *domainname\l0x00002719      lea r13, obj.longopts                                  ; 0xab40\l0x00002720      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x00002725      lea rdi, [dbg.close_stdout]                            ; 0x2d00 ; func function\l0x0000272c      call sym.atexit                                        ; int atexit(func function)\l0x00002731      mov qword [var_8h], 0\l"]
	"0x0000273a" [URL="dbg.main/0x0000273a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x27dd, 0x27fb\l0x0000273a      xor r8d, r8d\l0x0000273d      mov rcx, r13\l0x00002740      mov rdx, r12\l0x00002743      mov rsi, rbx\l0x00002746      mov edi, ebp\l0x00002748      call sym.imp.getopt_long\l0x0000274d      cmp eax, 0xffffffff\l0x00002750      je 0x2800\l"]
	"0x00002756" [URL="dbg.main/0x00002756", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002756      cmp eax, 0x80\l0x0000275b      je 0x27f8\l"]
	"0x00002761" [URL="dbg.main/0x00002761", fillcolor="white",color="#767676", fontname="Courier",label="0x00002761      jg 0x27a0\l"]
	"0x00002763" [URL="dbg.main/0x00002763", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002763      cmp eax, 0xffffff7d                                    ; 4294967165\l0x00002768      jne 0x27e2\l"]
	"0x0000276a" [URL="dbg.main/0x0000276a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000276a      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0xb088:8]=0 ; int64_t arg1\l0x00002771      mov rcx, qword [obj.Version]                           ; [0xb010:8]=0x735b \"9.0\" ; \"[s\" ; int64_t arg5\l0x00002778      xor eax, eax\l0x0000277a      xor r9d, r9d                                           ; int64_t arg_c0h\l0x0000277d      lea r8, str.Giuseppe_Scrivano                          ; 0x70dc ; \"Giuseppe Scrivano\" ; int64_t arg6\l0x00002784      lea rdx, str.GNU_coreutils                             ; 0x7097 ; \"GNU coreutils\" ; int64_t arg3\l0x0000278b      lea rsi, str.nproc                                     ; 0x7004 ; \"nproc\" ; int64_t arg2\l0x00002792      call dbg.version_etc\l0x00002797      xor edi, edi                                           ; int status\l0x00002799      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x000027a0" [URL="dbg.main/0x000027a0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2761\l0x000027a0      cmp eax, 0x81\l0x000027a5      jne 0x287c\l"]
	"0x000027ab" [URL="dbg.main/0x000027ab", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027ab      mov edx, 5\l0x000027b0      mov rsi, r15\l0x000027b3      xor edi, edi\l0x000027b5      call sym.imp.dcgettext\l0x000027ba      xor r9d, r9d\l0x000027bd      mov rcx, r12                                           ; int64_t arg5\l0x000027c0      xor esi, esi                                           ; int64_t arg3\l0x000027c2      mov rdi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0xb0a0:8]=0 ; int64_t arg2\l0x000027c9      mov r8, rax                                            ; int64_t arg6\l0x000027cc      mov rdx, 0xffffffffffffffff                            ; int64_t arg4\l0x000027d3      call dbg.xdectoumax\l0x000027d8      mov qword [var_8h], rax\l0x000027dd      jmp 0x273a\l"]
	"0x000027e2" [URL="dbg.main/0x000027e2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2768\l0x000027e2      cmp eax, 0xffffff7e                                    ; 4294967166\l0x000027e7      jne 0x287c\l"]
	"0x000027ed" [URL="dbg.main/0x000027ed", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027ed      xor edi, edi                                           ; int64_t arg1\l0x000027ef      call dbg.usage\l"]
	"0x000027f8" [URL="dbg.main/0x000027f8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x275b\l0x000027f8      xor r14d, r14d\l0x000027fb      jmp 0x273a\l"]
	"0x00002800" [URL="dbg.main/0x00002800", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2750\l0x00002800      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=0\l0x00002807      cmp eax, ebp\l0x00002809      jne 0x284c\l"]
	"0x0000280b" [URL="dbg.main/0x0000280b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000280b      mov edi, r14d                                          ; int64_t arg1\l0x0000280e      call dbg.num_processors\l0x00002813      mov rcx, qword [var_8h]\l0x00002818      mov edx, 1\l0x0000281d      cmp rcx, rax\l0x00002820      jae 0x2828\l"]
	"0x00002822" [URL="dbg.main/0x00002822", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002822      sub rax, rcx\l0x00002825      mov rdx, rax\l"]
	"0x00002828" [URL="dbg.main/0x00002828", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2820\l0x00002828      lea rsi, str._lu_n                                     ; 0x710e ; \"%lu\\n\"\l0x0000282f      mov edi, 1\l0x00002834      xor eax, eax\l0x00002836      call sym.imp.__printf_chk\l0x0000283b      add rsp, 0x18\l0x0000283f      xor eax, eax\l0x00002841      pop rbx\l0x00002842      pop rbp\l0x00002843      pop r12\l0x00002845      pop r13\l0x00002847      pop r14\l0x00002849      pop r15\l0x0000284b      ret\l"]
	"0x0000284c" [URL="dbg.main/0x0000284c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2809\l0x0000284c      mov rdi, qword [rbx + rax*8]                           ; int64_t arg1\l0x00002850      call dbg.quote\l0x00002855      mov edx, 5\l0x0000285a      lea rsi, str.extra_operand__s                          ; 0x70fd ; \"extra operand %s\"\l0x00002861      xor edi, edi\l0x00002863      mov r12, rax\l0x00002866      call sym.imp.dcgettext\l0x0000286b      mov rcx, r12\l0x0000286e      xor esi, esi                                           ; int errname\l0x00002870      xor edi, edi                                           ; int status\l0x00002872      mov rdx, rax                                           ; char *format\l0x00002875      xor eax, eax\l0x00002877      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x0000287c" [URL="dbg.main/0x0000287c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x27a5, 0x27e7\l0x0000287c      mov edi, 1                                             ; int64_t arg1\l0x00002881      call dbg.usage\l"]
        "0x000026c0" -> "0x0000273a" [color="#3a96dd"];
        "0x0000273a" -> "0x00002800" [color="#13a10e"];
        "0x0000273a" -> "0x00002756" [color="#c50f1f"];
        "0x00002756" -> "0x000027f8" [color="#13a10e"];
        "0x00002756" -> "0x00002761" [color="#c50f1f"];
        "0x00002761" -> "0x000027a0" [color="#13a10e"];
        "0x00002761" -> "0x00002763" [color="#c50f1f"];
        "0x00002763" -> "0x000027e2" [color="#13a10e"];
        "0x00002763" -> "0x0000276a" [color="#c50f1f"];
        "0x000027a0" -> "0x0000287c" [color="#13a10e"];
        "0x000027a0" -> "0x000027ab" [color="#c50f1f"];
        "0x000027ab" -> "0x0000273a" [color="#3a96dd"];
        "0x000027e2" -> "0x0000287c" [color="#13a10e"];
        "0x000027e2" -> "0x000027ed" [color="#c50f1f"];
        "0x000027f8" -> "0x0000273a" [color="#3a96dd"];
        "0x00002800" -> "0x0000284c" [color="#13a10e"];
        "0x00002800" -> "0x0000280b" [color="#c50f1f"];
        "0x0000280b" -> "0x00002828" [color="#13a10e"];
        "0x0000280b" -> "0x00002822" [color="#c50f1f"];
        "0x00002822" -> "0x00002828" [color="#3a96dd"];
        "0x0000284c" -> "0x0000287c" [color="#3a96dd"];
}
