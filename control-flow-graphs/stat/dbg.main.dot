digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00003bf0" [URL="dbg.main/0x00003bf0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x40f8\l1244: int dbg.main (int argc, char **argv);\l; var statfs statfsbuf @ rbp-0xb0\l; var int64_t var_8h @ rsp+0x8\l; var uint32_t var_10h @ rsp+0x10\l; var int64_t var_18h @ rsp+0x18\l; var int64_t var_20h @ rsp+0x20\l; var int64_t var_98h @ rsp+0x98\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x00003bf0      endbr64                                                ; int main(int argc,char ** argv);\l0x00003bf4      push r15\l0x00003bf6      lea r15, [0x00013501]\l0x00003bfd      push r14\l0x00003bff      lea r14, obj.long_options                              ; 0x17940 ; \"s'\\x01\"\l0x00003c06      push r13\l0x00003c08      mov r13d, edi                                          ; argc\l0x00003c0b      push r12\l0x00003c0d      mov r12, rsi                                           ; argv\l0x00003c10      push rbp\l0x00003c11      lea rbp, [0x000126f3]                                  ; \"coreutils\"\l0x00003c18      push rbx\l0x00003c19      sub rsp, 0xa8\l0x00003c20      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x00003c23      mov rax, qword fs:[0x28]\l0x00003c2c      mov qword [var_98h], rax\l0x00003c34      xor eax, eax\l0x00003c36      call dbg.set_program_name\l0x00003c3b      mov rsi, r15                                           ; const char *locale\l0x00003c3e      mov edi, 6                                             ; int category\l0x00003c43      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x00003c48      lea rsi, str._usr_local_share_locale                   ; 0x1271c ; \"/usr/local/share/locale\" ; char *dirname\l0x00003c4f      mov rdi, rbp                                           ; char *domainname\l0x00003c52      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x00003c57      mov rdi, rbp                                           ; char *domainname\l0x00003c5a      lea rbp, str.c:fLt                                     ; 0x1274c ; \"c:fLt\"\l0x00003c61      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x00003c66      call sym.imp.localeconv                                ; lconv*localeconv(void)\l0x00003c6b      mov rdi, qword [rax]                                   ; const char *s\l0x00003c6e      lea rax, [0x00012b44]                                  ; \".\"\l0x00003c75      cmp byte [rdi], 0\l0x00003c78      cmove rdi, rax\l0x00003c7c      xor ebx, ebx\l0x00003c7e      mov qword [obj.decimal_point], rdi                     ; [0x18198:8]=0x2d532d2d532d2d3f ; \"?--S--S-\"\l0x00003c85      call sym.imp.strlen                                    ; size_t strlen(const char *s)\l0x00003c8a      lea rdi, [dbg.close_stdout]                            ; 0x7820 ; func function\l0x00003c91      mov qword [obj.decimal_point_len], rax                 ; [0x18190:8]=0x12b44 \".\" ; \"D+\\x01\"\l0x00003c98      call sym.atexit                                        ; int atexit(func function)\l0x00003c9d      mov byte [var_10h], 0\l0x00003ca2      mov qword [var_8h], 0\l0x00003cab      nop dword [rax + rax]\l"]
	"0x00003cb0" [URL="dbg.main/0x00003cb0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x00003cf2  CODE 0x00003d22  CODE 0x00003d6d  \l; XREFS: CODE 0x00003d8d  CODE 0x00003db9  CODE 0x00003e04  \l; XREFS: CODE 0x00003e18  CODE 0x00003e2b  CODE 0x00003e3e  \l0x00003cb0      xor r8d, r8d\l0x00003cb3      mov rcx, r14\l0x00003cb6      mov rdx, rbp\l0x00003cb9      mov rsi, r12\l0x00003cbc      mov edi, r13d\l0x00003cbf      call sym.imp.getopt_long\l0x00003cc4      cmp eax, 0xffffffff\l0x00003cc7      je 0x3e43\l"]
	"0x00003ccd" [URL="dbg.main/0x00003ccd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003ccd      cmp eax, 0x63\l0x00003cd0      je 0x3d98\l"]
	"0x00003cd6" [URL="dbg.main/0x00003cd6", fillcolor="white",color="#767676", fontname="Courier",label="0x00003cd6      jg 0x3cf8\l"]
	"0x00003cd8" [URL="dbg.main/0x00003cd8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003cd8      test eax, eax\l0x00003cda      je 0x3dc0\l"]
	"0x00003ce0" [URL="dbg.main/0x00003ce0", fillcolor="white",color="#767676", fontname="Courier",label="0x00003ce0      jle 0x3d24\l"]
	"0x00003ce2" [URL="dbg.main/0x00003ce2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003ce2      cmp eax, 0x4c\l0x00003ce5      jne 0x40cd\l"]
	"0x00003ceb" [URL="dbg.main/0x00003ceb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003ceb      mov byte [obj.follow_links], 1                         ; [0x181a1:1]=1\l0x00003cf2      jmp 0x3cb0\l"]
	"0x00003cf8" [URL="dbg.main/0x00003cf8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3cd6\l0x00003cf8      cmp eax, 0x74\l0x00003cfb      je 0x3d88\l"]
	"0x00003d01" [URL="dbg.main/0x00003d01", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003d01      cmp eax, 0x80\l0x00003d06      jne 0x3d5f\l"]
	"0x00003d08" [URL="dbg.main/0x00003d08", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003d08      mov rax, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x180c0:8]=0\l0x00003d0f      mov byte [obj.interpret_backslash_escapes], 1          ; [0x181a0:1]=0\l0x00003d16      mov qword [obj.trailing_delim], r15                    ; [0x18010:8]=0x13500 \".\"\l0x00003d1d      mov qword [var_8h], rax\l0x00003d22      jmp 0x3cb0\l"]
	"0x00003d24" [URL="dbg.main/0x00003d24", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3ce0\l0x00003d24      cmp eax, 0xffffff7d                                    ; 4294967165\l0x00003d29      jne 0x3d72\l"]
	"0x00003d2b" [URL="dbg.main/0x00003d2b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003d2b      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0x180a8:8]=0 ; int64_t arg1\l0x00003d32      mov rcx, qword [obj.Version]                           ; [0x18018:8]=0x12bae \"9.0\" ; int64_t arg5\l0x00003d39      xor eax, eax\l0x00003d3b      xor r9d, r9d                                           ; int64_t arg_c0h\l0x00003d3e      lea r8, str.Michael_Meskes                             ; 0x1273d ; \"Michael Meskes\" ; int64_t arg6\l0x00003d45      lea rdx, str.GNU_coreutils                             ; 0x126ef ; \"GNU coreutils\" ; int64_t arg3\l0x00003d4c      lea rsi, [global_program]                              ; 0x12674 ; \"stat\" ; int64_t arg2\l0x00003d53      call dbg.version_etc\l0x00003d58      xor edi, edi                                           ; int status\l0x00003d5a      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x00003d5f" [URL="dbg.main/0x00003d5f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3d06\l0x00003d5f      cmp eax, 0x66\l0x00003d62      jne 0x40cd\l"]
	"0x00003d68" [URL="dbg.main/0x00003d68", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003d68      mov ebx, 1\l0x00003d6d      jmp 0x3cb0\l"]
	"0x00003d72" [URL="dbg.main/0x00003d72", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3d29\l0x00003d72      cmp eax, 0xffffff7e                                    ; 4294967166\l0x00003d77      jne 0x40cd\l"]
	"0x00003d7d" [URL="dbg.main/0x00003d7d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003d7d      xor edi, edi                                           ; int64_t arg1\l0x00003d7f      call dbg.usage\l"]
	"0x00003d88" [URL="dbg.main/0x00003d88", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3cfb\l0x00003d88      mov byte [var_10h], 1\l0x00003d8d      jmp 0x3cb0\l"]
	"0x00003d98" [URL="dbg.main/0x00003d98", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3cd0\l0x00003d98      mov rax, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x180c0:8]=0\l0x00003d9f      mov byte [obj.interpret_backslash_escapes], 0          ; [0x181a0:1]=0\l0x00003da6      mov qword [var_8h], rax\l0x00003dab      lea rax, [0x00013500]                                  ; \"\\n\"\l0x00003db2      mov qword [obj.trailing_delim], rax                    ; [0x18010:8]=0x13500 \".\"\l0x00003db9      jmp 0x3cb0\l"]
	"0x00003dc0" [URL="dbg.main/0x00003dc0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3cda\l0x00003dc0      mov r9, qword [obj.argmatch_die]                       ; [0x18020:8]=0x7440 dbg.__argmatch_die ; \"@t\" ; int64_t arg6\l0x00003dc7      mov rsi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0x180c0:8]=0 ; int64_t arg2\l0x00003dce      lea rcx, obj.cached_modes                              ; 0x12a18 ; int64_t arg4\l0x00003dd5      mov r8d, 4                                             ; int64_t arg5\l0x00003ddb      lea rdx, obj.cached_args                               ; 0x17a60 ; int64_t arg3\l0x00003de2      lea rdi, str.__cached                                  ; 0x12734 ; \"--cached\" ; int64_t arg1\l0x00003de9      call dbg.__xargmatch_internal\l0x00003dee      lea rcx, obj.cached_modes                              ; 0x12a18\l0x00003df5      mov eax, dword [rcx + rax*4]\l0x00003df8      cmp eax, 1                                             ; \"\\\"\\\"?\"\l0x00003dfb      je 0x3e30\l"]
	"0x00003dfd" [URL="dbg.main/0x00003dfd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003dfd      cmp eax, 2                                             ; \"\\\"?\"\l0x00003e00      je 0x3e1d\l"]
	"0x00003e02" [URL="dbg.main/0x00003e02", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003e02      test eax, eax\l0x00003e04      jne 0x3cb0\l"]
	"0x00003e0a" [URL="dbg.main/0x00003e0a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003e0a      mov byte [obj.force_sync], 0                           ; [0x1818d:1]=1\l0x00003e11      mov byte [obj.dont_sync], 0                            ; [0x1818e:1]=0\l0x00003e18      jmp 0x3cb0\l"]
	"0x00003e1d" [URL="dbg.main/0x00003e1d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3e00\l0x00003e1d      mov byte [obj.force_sync], 0                           ; [0x1818d:1]=1\l0x00003e24      mov byte [obj.dont_sync], 1                            ; [0x1818e:1]=0\l0x00003e2b      jmp 0x3cb0\l"]
	"0x00003e30" [URL="dbg.main/0x00003e30", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3dfb\l0x00003e30      mov byte [obj.force_sync], 1                           ; [0x1818d:1]=1\l0x00003e37      mov byte [obj.dont_sync], 0                            ; [0x1818e:1]=0\l0x00003e3e      jmp 0x3cb0\l"]
	"0x00003e43" [URL="dbg.main/0x00003e43", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3cc7\l0x00003e43      cmp dword [obj.optind], r13d                           ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x180b0:4]=0\l0x00003e4a      je 0x40ac\l"]
	"0x00003e50" [URL="dbg.main/0x00003e50", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003e50      mov r14, qword [var_8h]\l0x00003e55      test r14, r14\l0x00003e58      je 0x406a\l"]
	"0x00003e5e" [URL="dbg.main/0x00003e5e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003e5e      lea rsi, [0x00012762]                                  ; \"%N\" ; const char *s2\l0x00003e65      mov rdi, r14                                           ; const char *s1\l0x00003e68      call sym.imp.strstr                                    ; char *strstr(const char *s1, const char *s2)\l0x00003e6d      test rax, rax\l0x00003e70      je 0x3ebd\l"]
	"0x00003e72" [URL="dbg.main/0x00003e72", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003e72      lea rdi, str.QUOTING_STYLE                             ; 0x12765 ; \"QUOTING_STYLE\" ; const char *name\l0x00003e79      call sym.imp.getenv                                    ; char *getenv(const char *name)\l0x00003e7e      mov rbp, rax\l0x00003e81      test rax, rax\l0x00003e84      je 0x409b\l"]
	"0x00003e8a" [URL="dbg.main/0x00003e8a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003e8a      lea r15, obj.quoting_style_vals                        ; 0x13480\l0x00003e91      mov ecx, 4                                             ; int64_t arg4\l0x00003e96      lea rsi, obj.quoting_style_args                        ; 0x17a80 ; int64_t arg2\l0x00003e9d      mov rdi, rax                                           ; int64_t arg1\l0x00003ea0      mov rdx, r15                                           ; int64_t arg3\l0x00003ea3      call dbg.argmatch\l0x00003ea8      test eax, eax\l0x00003eaa      js 0x402a\l"]
	"0x00003eb0" [URL="dbg.main/0x00003eb0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003eb0      cdqe\l0x00003eb2      xor edi, edi                                           ; int64_t arg1\l0x00003eb4      mov esi, dword [r15 + rax*4]                           ; int64_t arg2\l0x00003eb8      call dbg.set_quoting_style\l"]
	"0x00003ebd" [URL="dbg.main/0x00003ebd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3e70, 0x4065, 0x4096, 0x40a7\l0x00003ebd      mov eax, dword [obj.optind]                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0x180b0:4]=0\l0x00003ec3      cmp r13d, eax\l0x00003ec6      jle 0x3fac\l"]
	"0x00003ecc" [URL="dbg.main/0x00003ecc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003ecc      sub r13d, eax\l0x00003ecf      movsxd rdx, eax\l0x00003ed2      mov qword [var_18h], r14\l0x00003ed7      lea r15, [0x0001260b]                                  ; \"-\"\l0x00003ede      lea eax, [r13 - 1]\l0x00003ee2      lea rbp, [r12 + rdx*8]\l0x00003ee6      mov r13, qword [var_8h]\l0x00003eeb      add rax, rdx\l0x00003eee      lea rax, [r12 + rax*8 + 8]\l0x00003ef3      mov r12d, 1\l0x00003ef9      mov qword [var_10h], rax\l0x00003efe      jmp 0x3f5a\l"]
	"0x00003f00" [URL="dbg.main/0x00003f00", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3f60\l0x00003f00      mov rsi, r15                                           ; const char *s2\l0x00003f03      mov rdi, r14                                           ; const char *s1\l0x00003f06      call sym.imp.strcmp                                    ; int strcmp(const char *s1, const char *s2)\l0x00003f0b      test eax, eax\l0x00003f0d      je 0x3f74\l"]
	"0x00003f0f" [URL="dbg.main/0x00003f0f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003f0f      lea r8, [var_20h]\l0x00003f14      mov rdi, r14\l0x00003f17      mov rsi, r8\l0x00003f1a      mov qword [var_8h], r8\l0x00003f1f      call sym.imp.statfs\l0x00003f24      mov r8, qword [var_8h]\l0x00003f29      test eax, eax\l0x00003f2b      jne 0x3fe3\l"]
	"0x00003f31" [URL="dbg.main/0x00003f31", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003f31      lea rcx, [dbg.print_statfs]                            ; 0x5330 ; int64_t arg4\l0x00003f38      mov rdx, r14                                           ; int64_t arg3\l0x00003f3b      or esi, 0xffffffff                                     ; -1\l0x00003f3e      mov rdi, r13                                           ; int64_t arg1\l0x00003f41      call dbg.print_it\l0x00003f46      xor eax, 1\l"]
	"0x00003f49" [URL="dbg.main/0x00003f49", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3f72, 0x3faa, 0x4025\l0x00003f49      movzx eax, al\l0x00003f4c      add rbp, 8\l0x00003f50      and r12d, eax\l0x00003f53      cmp qword [var_10h], rbp\l0x00003f58      je 0x3fb2\l"]
	"0x00003f5a" [URL="dbg.main/0x00003f5a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3efe\l0x00003f5a      mov r14, qword [rbp]\l0x00003f5e      test bl, bl\l0x00003f60      jne 0x3f00\l"]
	"0x00003f62" [URL="dbg.main/0x00003f62", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003f62      mov rdx, qword [var_18h]                               ; int64_t arg3\l0x00003f67      mov rsi, r13                                           ; int64_t arg2\l0x00003f6a      mov rdi, r14                                           ; int64_t arg1\l0x00003f6d      call dbg.do_stat\l0x00003f72      jmp 0x3f49\l"]
	"0x00003f74" [URL="dbg.main/0x00003f74", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3f0d\l0x00003f74      mov rsi, r14                                           ; int64_t arg2\l0x00003f77      mov edi, 4                                             ; int64_t arg1\l0x00003f7c      call sym.quotearg_style\l0x00003f81      mov edx, 5\l0x00003f86      lea rsi, str.using__s_to_denote_standard_input_does_not_work_in_file_system_mode ; 0x121d0 ; \"using %s to denote standard input does not work in file system mode\"\l0x00003f8d      xor edi, edi\l0x00003f8f      mov r14, rax\l0x00003f92      call sym.imp.dcgettext\l0x00003f97      mov rcx, r14\l0x00003f9a      xor esi, esi                                           ; int errname\l0x00003f9c      xor edi, edi                                           ; int status\l0x00003f9e      mov rdx, rax                                           ; char *format\l0x00003fa1      xor eax, eax\l0x00003fa3      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00003fa8      xor eax, eax\l0x00003faa      jmp 0x3f49\l"]
	"0x00003fac" [URL="dbg.main/0x00003fac", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3ec6\l0x00003fac      mov r12d, 1\l"]
	"0x00003fb2" [URL="dbg.main/0x00003fb2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3f58\l0x00003fb2      xor r12d, 1\l0x00003fb6      movzx eax, r12b\l0x00003fba      mov rdx, qword [var_98h]\l0x00003fc2      sub rdx, qword fs:[0x28]\l0x00003fcb      jne 0x40d7\l"]
	"0x00003fd1" [URL="dbg.main/0x00003fd1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00003fd1      add rsp, 0xa8\l0x00003fd8      pop rbx\l0x00003fd9      pop rbp\l0x00003fda      pop r12\l0x00003fdc      pop r13\l0x00003fde      pop r14\l0x00003fe0      pop r15\l0x00003fe2      ret\l"]
	"0x00003fe3" [URL="dbg.main/0x00003fe3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3f2b\l0x00003fe3      mov rsi, r14                                           ; int64_t arg2\l0x00003fe6      mov edi, 4                                             ; int64_t arg1\l0x00003feb      call sym.quotearg_style\l0x00003ff0      mov edx, 5\l0x00003ff5      lea rsi, str.cannot_read_file_system_information_for__s ; 0x12218 ; \"cannot read file system information for %s\"\l0x00003ffc      xor edi, edi\l0x00003ffe      mov qword [var_8h], rax\l0x00004003      call sym.imp.dcgettext\l0x00004008      mov r14, rax\l0x0000400b      call sym.imp.__errno_location\l0x00004010      mov rcx, qword [var_8h]\l0x00004015      mov rdx, r14                                           ; char *format\l0x00004018      xor edi, edi                                           ; int status\l0x0000401a      mov esi, dword [rax]                                   ; int errname\l0x0000401c      xor eax, eax\l0x0000401e      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00004023      xor eax, eax\l0x00004025      jmp 0x3f49\l"]
	"0x0000402a" [URL="dbg.main/0x0000402a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3eaa\l0x0000402a      mov esi, 4                                             ; int64_t arg2\l0x0000402f      xor edi, edi                                           ; int64_t arg1\l0x00004031      call dbg.set_quoting_style\l0x00004036      mov rdi, rbp                                           ; int64_t arg1\l0x00004039      call dbg.quote\l0x0000403e      xor edi, edi\l0x00004040      mov edx, 5\l0x00004045      lea rsi, str.ignoring_invalid_value_of_environment_variable_QUOTING_STYLE:__s ; 0x12188 ; \"ignoring invalid value of environment variable QUOTING_STYLE: %s\"\l0x0000404c      mov r15, rax\l0x0000404f      call sym.imp.dcgettext\l0x00004054      mov rcx, r15\l0x00004057      xor esi, esi                                           ; int errname\l0x00004059      xor edi, edi                                           ; int status\l0x0000405b      mov rdx, rax                                           ; char *format\l0x0000405e      xor eax, eax\l0x00004060      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00004065      jmp 0x3ebd\l"]
	"0x0000406a" [URL="dbg.main/0x0000406a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3e58\l0x0000406a      movzx ebp, byte [var_10h]\l0x0000406f      movzx r14d, bl\l0x00004073      xor edx, edx\l0x00004075      mov edi, r14d                                          ; int64_t arg3\l0x00004078      mov esi, ebp\l0x0000407a      call dbg.default_format\l0x0000407f      mov edi, r14d                                          ; int64_t arg3\l0x00004082      mov edx, 1\l0x00004087      mov esi, ebp\l0x00004089      mov qword [var_8h], rax\l0x0000408e      call dbg.default_format\l0x00004093      mov r14, rax\l0x00004096      jmp 0x3ebd\l"]
	"0x0000409b" [URL="dbg.main/0x0000409b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3e84\l0x0000409b      mov esi, 4                                             ; int64_t arg2\l0x000040a0      xor edi, edi                                           ; int64_t arg1\l0x000040a2      call dbg.set_quoting_style\l0x000040a7      jmp 0x3ebd\l"]
	"0x000040ac" [URL="dbg.main/0x000040ac", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3e4a\l0x000040ac      mov edx, 5\l0x000040b1      lea rsi, str.missing_operand                           ; 0x12752 ; \"missing operand\"\l0x000040b8      xor edi, edi\l0x000040ba      call sym.imp.dcgettext\l0x000040bf      xor esi, esi                                           ; int errname\l0x000040c1      xor edi, edi                                           ; int status\l0x000040c3      mov rdx, rax                                           ; char *format\l0x000040c6      xor eax, eax\l0x000040c8      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x000040cd" [URL="dbg.main/0x000040cd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x3ce5, 0x3d62, 0x3d77\l0x000040cd      mov edi, 1                                             ; int64_t arg1\l0x000040d2      call dbg.usage\l"]
	"0x000040d7" [URL="dbg.main/0x000040d7", fillcolor="white",color="#767676", fontname="Courier",label="; CODE XREF from dbg.main @ 0x3fcb\l0x000040d7      call sym.imp.__stack_chk_fail                          ; void __stack_chk_fail(void)\l"]
        "0x00003bf0" -> "0x00003cb0" [color="#3a96dd"];
        "0x00003cb0" -> "0x00003e43" [color="#13a10e"];
        "0x00003cb0" -> "0x00003ccd" [color="#c50f1f"];
        "0x00003ccd" -> "0x00003d98" [color="#13a10e"];
        "0x00003ccd" -> "0x00003cd6" [color="#c50f1f"];
        "0x00003cd6" -> "0x00003cf8" [color="#13a10e"];
        "0x00003cd6" -> "0x00003cd8" [color="#c50f1f"];
        "0x00003cd8" -> "0x00003dc0" [color="#13a10e"];
        "0x00003cd8" -> "0x00003ce0" [color="#c50f1f"];
        "0x00003ce0" -> "0x00003d24" [color="#13a10e"];
        "0x00003ce0" -> "0x00003ce2" [color="#c50f1f"];
        "0x00003ce2" -> "0x000040cd" [color="#13a10e"];
        "0x00003ce2" -> "0x00003ceb" [color="#c50f1f"];
        "0x00003ceb" -> "0x00003cb0" [color="#3a96dd"];
        "0x00003cf8" -> "0x00003d88" [color="#13a10e"];
        "0x00003cf8" -> "0x00003d01" [color="#c50f1f"];
        "0x00003d01" -> "0x00003d5f" [color="#13a10e"];
        "0x00003d01" -> "0x00003d08" [color="#c50f1f"];
        "0x00003d08" -> "0x00003cb0" [color="#3a96dd"];
        "0x00003d24" -> "0x00003d72" [color="#13a10e"];
        "0x00003d24" -> "0x00003d2b" [color="#c50f1f"];
        "0x00003d5f" -> "0x000040cd" [color="#13a10e"];
        "0x00003d5f" -> "0x00003d68" [color="#c50f1f"];
        "0x00003d68" -> "0x00003cb0" [color="#3a96dd"];
        "0x00003d72" -> "0x000040cd" [color="#13a10e"];
        "0x00003d72" -> "0x00003d7d" [color="#c50f1f"];
        "0x00003d88" -> "0x00003cb0" [color="#3a96dd"];
        "0x00003d98" -> "0x00003cb0" [color="#3a96dd"];
        "0x00003dc0" -> "0x00003e30" [color="#13a10e"];
        "0x00003dc0" -> "0x00003dfd" [color="#c50f1f"];
        "0x00003dfd" -> "0x00003e1d" [color="#13a10e"];
        "0x00003dfd" -> "0x00003e02" [color="#c50f1f"];
        "0x00003e02" -> "0x00003cb0" [color="#13a10e"];
        "0x00003e02" -> "0x00003e0a" [color="#c50f1f"];
        "0x00003e0a" -> "0x00003cb0" [color="#3a96dd"];
        "0x00003e1d" -> "0x00003cb0" [color="#3a96dd"];
        "0x00003e30" -> "0x00003cb0" [color="#3a96dd"];
        "0x00003e43" -> "0x000040ac" [color="#13a10e"];
        "0x00003e43" -> "0x00003e50" [color="#c50f1f"];
        "0x00003e50" -> "0x0000406a" [color="#13a10e"];
        "0x00003e50" -> "0x00003e5e" [color="#c50f1f"];
        "0x00003e5e" -> "0x00003ebd" [color="#13a10e"];
        "0x00003e5e" -> "0x00003e72" [color="#c50f1f"];
        "0x00003e72" -> "0x0000409b" [color="#13a10e"];
        "0x00003e72" -> "0x00003e8a" [color="#c50f1f"];
        "0x00003e8a" -> "0x0000402a" [color="#13a10e"];
        "0x00003e8a" -> "0x00003eb0" [color="#c50f1f"];
        "0x00003eb0" -> "0x00003ebd" [color="#3a96dd"];
        "0x00003ebd" -> "0x00003fac" [color="#13a10e"];
        "0x00003ebd" -> "0x00003ecc" [color="#c50f1f"];
        "0x00003ecc" -> "0x00003f5a" [color="#3a96dd"];
        "0x00003f00" -> "0x00003f74" [color="#13a10e"];
        "0x00003f00" -> "0x00003f0f" [color="#c50f1f"];
        "0x00003f0f" -> "0x00003fe3" [color="#13a10e"];
        "0x00003f0f" -> "0x00003f31" [color="#c50f1f"];
        "0x00003f31" -> "0x00003f49" [color="#3a96dd"];
        "0x00003f49" -> "0x00003fb2" [color="#13a10e"];
        "0x00003f49" -> "0x00003f5a" [color="#c50f1f"];
        "0x00003f5a" -> "0x00003f00" [color="#13a10e"];
        "0x00003f5a" -> "0x00003f62" [color="#c50f1f"];
        "0x00003f62" -> "0x00003f49" [color="#3a96dd"];
        "0x00003f74" -> "0x00003f49" [color="#3a96dd"];
        "0x00003fac" -> "0x00003fb2" [color="#3a96dd"];
        "0x00003fb2" -> "0x000040d7" [color="#13a10e"];
        "0x00003fb2" -> "0x00003fd1" [color="#c50f1f"];
        "0x00003fe3" -> "0x00003f49" [color="#3a96dd"];
        "0x0000402a" -> "0x00003ebd" [color="#3a96dd"];
        "0x0000406a" -> "0x00003ebd" [color="#3a96dd"];
        "0x0000409b" -> "0x00003ebd" [color="#3a96dd"];
        "0x000040ac" -> "0x000040cd" [color="#3a96dd"];
        "0x000040cd" -> "0x000040d7" [color="#3a96dd"];
}
