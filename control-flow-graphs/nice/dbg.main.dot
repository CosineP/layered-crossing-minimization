digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00002680" [URL="dbg.main/0x00002680", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x2a78\l981: int dbg.main (int argc, char **argv);\l; var long int tmp @ rbp-0x40\l; var int64_t var_8h @ rsp+0x8\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x00002680      endbr64                                                ; int main(int argc,char ** argv);\l; DATA XREF from dbg.version_etc_arn @ 0x54fd\l0x00002684      push r15\l0x00002686      push r14\l0x00002688      push r13\l0x0000268a      lea r13, [0x00007083]                                  ; \"coreutils\"\l0x00002691      push r12\l0x00002693      mov r12d, edi                                          ; argc\l0x00002696      push rbp\l0x00002697      mov rbp, rsi                                           ; argv\l0x0000269a      push rbx\l0x0000269b      mov ebx, 1\l0x000026a0      sub rsp, 0x18\l0x000026a4      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x000026a7      mov rax, qword fs:[0x28]\l0x000026b0      mov qword [var_8h], rax\l0x000026b5      xor eax, eax\l0x000026b7      call dbg.set_program_name\l0x000026bc      lea rsi, [0x00007981]                                  ; const char *locale\l0x000026c3      mov edi, 6                                             ; int category\l0x000026c8      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x000026cd      lea rsi, str._usr_local_share_locale                   ; 0x70ac ; \"/usr/local/share/locale\" ; char *dirname\l0x000026d4      mov rdi, r13                                           ; char *domainname\l0x000026d7      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x000026dc      mov rdi, r13                                           ; char *domainname\l0x000026df      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x000026e4      lea rdi, [dbg.close_stdout]                            ; 0x2f20 ; func function\l0x000026eb      mov dword [obj.exit_failure], 0x7d                     ; '}'\l                                                                       ; [0xb018:4]=125 ; \"}\"\l0x000026f5      call sym.atexit                                        ; int atexit(func function)\l0x000026fa      cmp r12d, 1\l0x000026fe      jle 0x297a\l"]
	"0x00002704" [URL="dbg.main/0x00002704", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002704      xor r13d, r13d\l0x00002707      lea r15, obj.longopts                                  ; 0xab60\l0x0000270e      lea r14, [0x000070c4]                                  ; \"+n:\"\l"]
	"0x00002715" [URL="dbg.main/0x00002715", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x275e\l0x00002715      movsxd rax, ebx\l0x00002718      lea rcx, [rax*8]\l0x00002720      mov rax, qword [rbp + rax*8]\l0x00002725      cmp byte [rax], 0x2d\l0x00002728      jne 0x2808\l"]
	"0x0000272e" [URL="dbg.main/0x0000272e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000272e      movzx esi, byte [rax + 1]\l0x00002732      lea edx, [rsi - 0x2b]\l0x00002735      and edx, 0xfffffffd                                    ; 4294967293\l0x00002738      cmp dl, 1\l0x0000273b      mov edx, 1\l0x00002740      adc rdx, 0\l0x00002744      movsx edx, byte [rax + rdx]\l0x00002748      sub edx, 0x30\l0x0000274b      cmp edx, 9\l0x0000274e      ja 0x2808\l"]
	"0x00002754" [URL="dbg.main/0x00002754", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002754      lea r13, [rax + 1]\l0x00002758      add ebx, 1\l"]
	"0x0000275b" [URL="dbg.main/0x0000275b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x28a0\l0x0000275b      cmp ebx, r12d\l0x0000275e      jl 0x2715\l"]
	"0x00002760" [URL="dbg.main/0x00002760", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2841\l0x00002760      test r13, r13\l0x00002763      je 0x297a\l"]
	"0x00002769" [URL="dbg.main/0x00002769", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002769      xor esi, esi                                           ; int64_t arg2\l0x0000276b      mov rcx, rsp                                           ; int64_t arg4\l0x0000276e      lea r8, [0x00007981]                                   ; int64_t arg5\l0x00002775      mov rdi, r13                                           ; int64_t arg1\l0x00002778      mov edx, 0xa                                           ; int64_t arg3\l0x0000277d      call dbg.xstrtol\l0x00002782      cmp eax, 1\l0x00002785      ja 0x2a22\l"]
	"0x0000278b" [URL="dbg.main/0x0000278b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000278b      mov r13, qword [rsp]\l0x0000278f      mov eax, 0x27                                          ; '''\l0x00002794      cmp r13, rax\l0x00002797      cmovg r13, rax\l0x0000279b      mov rax, 0xffffffffffffffd9\l0x000027a2      cmp r13, rax\l0x000027a5      cmovl r13, rax\l0x000027a9      cmp ebx, r12d\l0x000027ac      je 0x29f2\l"]
	"0x000027b2" [URL="dbg.main/0x000027b2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2a5a\l0x000027b2      call sym.imp.__errno_location\l0x000027b7      xor esi, esi\l0x000027b9      xor edi, edi\l0x000027bb      mov dword [rax], 0\l0x000027c1      mov r12, rax\l0x000027c4      call sym.imp.getpriority\l0x000027c9      cmp eax, 0xffffffff\l0x000027cc      jne 0x28b7\l"]
	"0x000027d2" [URL="dbg.main/0x000027d2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027d2      cmp dword [r12], 0\l0x000027d7      je 0x28b7\l"]
	"0x000027dd" [URL="dbg.main/0x000027dd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027dd      mov edx, 5\l0x000027e2      lea rsi, str.cannot_get_niceness                       ; 0x70ee ; \"cannot get niceness\"\l0x000027e9      xor edi, edi\l0x000027eb      call sym.imp.dcgettext\l0x000027f0      mov esi, dword [r12]                                   ; int errname\l0x000027f4      mov edi, 0x7d                                          ; '}' ; int status\l0x000027f9      mov rdx, rax                                           ; char *format\l0x000027fc      xor eax, eax\l0x000027fe      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00002803      nop dword [rax + rax]\l"]
	"0x00002808" [URL="dbg.main/0x00002808", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2728, 0x274e\l0x00002808      mov rax, qword [rbp]\l0x0000280c      lea rsi, [rbp + rcx - 8]\l0x00002811      mov edi, r12d\l0x00002814      mov rdx, r14\l0x00002817      xor r8d, r8d\l0x0000281a      mov rcx, r15\l0x0000281d      mov qword [rsi], rax\l0x00002820      lea eax, [rbx - 1]\l0x00002823      mov dword [obj.optind], 0                              ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=0\l0x0000282d      sub edi, eax\l0x0000282f      call sym.imp.getopt_long\l0x00002834      mov edx, dword [obj.optind]                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=0\l0x0000283a      lea ebx, [rbx + rdx - 1]\l0x0000283e      cmp eax, 0xffffffff\l0x00002841      je 0x2760\l"]
	"0x00002847" [URL="dbg.main/0x00002847", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002847      test eax, eax\l0x00002849      jns 0x2890\l"]
	"0x0000284b" [URL="dbg.main/0x0000284b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000284b      cmp eax, 0xffffff7d                                    ; 4294967165\l0x00002850      jne 0x28a5\l"]
	"0x00002852" [URL="dbg.main/0x00002852", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002852      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0xb088:8]=0 ; int64_t arg1\l0x00002859      mov rcx, qword [obj.Version]                           ; [0xb010:8]=0x74fb ; int64_t arg5\l0x00002860      xor eax, eax\l0x00002862      xor r9d, r9d                                           ; int64_t arg_c0h\l0x00002865      lea r8, str.David_MacKenzie                            ; 0x70c8 ; \"David MacKenzie\" ; int64_t arg6\l0x0000286c      lea rdx, str.GNU_coreutils                             ; 0x707f ; \"GNU coreutils\" ; int64_t arg3\l0x00002873      lea rsi, str.nice                                      ; 0x7004 ; \"nice\" ; int64_t arg2\l0x0000287a      call dbg.version_etc\l0x0000287f      xor edi, edi                                           ; int status\l0x00002881      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x00002890" [URL="dbg.main/0x00002890", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2849\l0x00002890      cmp eax, 0x6e\l0x00002893      jne 0x2a13\l"]
	"0x00002899" [URL="dbg.main/0x00002899", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002899      mov r13, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0xb0a0:8]=0\l0x000028a0      jmp 0x275b\l"]
	"0x000028a5" [URL="dbg.main/0x000028a5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2850\l0x000028a5      cmp eax, 0xffffff7e                                    ; 4294967166\l0x000028aa      jne 0x2a13\l"]
	"0x000028b0" [URL="dbg.main/0x000028b0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000028b0      xor edi, edi                                           ; int64_t arg1\l0x000028b2      call dbg.usage\l"]
	"0x000028b7" [URL="dbg.main/0x000028b7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x27cc, 0x27d7\l0x000028b7      xor esi, esi\l0x000028b9      xor edi, edi\l0x000028bb      lea edx, [rax + r13]\l0x000028bf      call sym.imp.setpriority\l0x000028c4      test eax, eax\l0x000028c6      je 0x2912\l"]
	"0x000028c8" [URL="dbg.main/0x000028c8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000028c8      mov edx, 5\l0x000028cd      lea rsi, str.cannot_set_niceness                       ; 0x7106 ; \"cannot set niceness\"\l0x000028d4      xor edi, edi\l0x000028d6      call sym.imp.dcgettext\l0x000028db      mov esi, dword [r12]\l0x000028df      mov rdx, rax\l0x000028e2      cmp esi, 0xd\l0x000028e5      je 0x29eb\l"]
	"0x000028eb" [URL="dbg.main/0x000028eb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000028eb      mov edi, 0x7d                                          ; '}'\l0x000028f0      cmp esi, 1\l0x000028f3      je 0x29eb\l"]
	"0x000028f9" [URL="dbg.main/0x000028f9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x29ed\l0x000028f9      xor eax, eax\l0x000028fb      mov r13d, 0x7d                                         ; '}'\l0x00002901      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00002906      mov rax, qword [obj.stderr]                            ; obj.stderr_GLIBC_2.2.5\l                                                                       ; [0xb0c0:8]=0\l0x0000290d      test byte [rax], 0x20\l0x00002910      jne 0x2954\l"]
	"0x00002912" [URL="dbg.main/0x00002912", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x28c6\l0x00002912      movsxd rbx, ebx\l0x00002915      xor r13d, r13d\l0x00002918      lea rbx, [rbp + rbx*8]\l0x0000291d      mov rdi, qword [rbx]\l0x00002920      mov rsi, rbx\l0x00002923      call sym.imp.execvp\l0x00002928      mov rdi, qword [rbx]                                   ; int64_t arg1\l0x0000292b      cmp dword [r12], 2\l0x00002930      sete r13b\l0x00002934      call dbg.quote\l0x00002939      mov esi, dword [r12]                                   ; int errname\l0x0000293d      xor edi, edi                                           ; int status\l0x0000293f      add r13d, 0x7e\l0x00002943      mov rcx, rax\l0x00002946      lea rdx, [0x0000750f]                                  ; \"%s\" ; char *format\l0x0000294d      xor eax, eax\l0x0000294f      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002954" [URL="dbg.main/0x00002954", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2910, 0x29e6\l0x00002954      mov rax, qword [var_8h]\l0x00002959      sub rax, qword fs:[0x28]\l0x00002962      jne 0x2a1d\l"]
	"0x00002968" [URL="dbg.main/0x00002968", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002968      add rsp, 0x18\l0x0000296c      mov eax, r13d\l0x0000296f      pop rbx\l0x00002970      pop rbp\l0x00002971      pop r12\l0x00002973      pop r13\l0x00002975      pop r14\l0x00002977      pop r15\l0x00002979      ret\l"]
	"0x0000297a" [URL="dbg.main/0x0000297a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x26fe, 0x2763\l0x0000297a      call sym.imp.__errno_location\l0x0000297f      mov r13, rax\l0x00002982      cmp r12d, ebx\l0x00002985      jne 0x2a54\l"]
	"0x0000298b" [URL="dbg.main/0x0000298b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000298b      mov dword [r13], 0\l0x00002993      xor esi, esi\l0x00002995      xor edi, edi\l0x00002997      call sym.imp.getpriority\l0x0000299c      mov edx, eax\l0x0000299e      cmp eax, 0xffffffff\l0x000029a1      jne 0x29d0\l"]
	"0x000029a3" [URL="dbg.main/0x000029a3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000029a3      cmp dword [r13], 0\l0x000029a8      je 0x29d0\l"]
	"0x000029aa" [URL="dbg.main/0x000029aa", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000029aa      mov edx, 5\l0x000029af      lea rsi, str.cannot_get_niceness                       ; 0x70ee ; \"cannot get niceness\"\l0x000029b6      xor edi, edi\l0x000029b8      call sym.imp.dcgettext\l0x000029bd      mov esi, dword [r13]                                   ; int errname\l0x000029c1      mov edi, 0x7d                                          ; '}' ; int status\l0x000029c6      mov rdx, rax                                           ; char *format\l0x000029c9      xor eax, eax\l0x000029cb      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x000029d0" [URL="dbg.main/0x000029d0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x29a1, 0x29a8\l0x000029d0      lea rsi, [0x00007102]                                  ; \"%d\\n\"\l0x000029d7      mov edi, 1\l0x000029dc      xor eax, eax\l0x000029de      xor r13d, r13d\l0x000029e1      call sym.imp.__printf_chk\l0x000029e6      jmp 0x2954\l"]
	"0x000029eb" [URL="dbg.main/0x000029eb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x28e5, 0x28f3\l0x000029eb      xor edi, edi\l0x000029ed      jmp 0x28f9\l"]
	"0x000029f2" [URL="dbg.main/0x000029f2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27ac\l0x000029f2      mov edx, 5\l0x000029f7      lea rsi, str.a_command_must_be_given_with_an_adjustment ; 0x74d0 ; \"a command must be given with an adjustment\"\l0x000029fe      xor edi, edi\l0x00002a00      call sym.imp.dcgettext\l0x00002a05      xor esi, esi                                           ; int errname\l0x00002a07      xor edi, edi                                           ; int status\l0x00002a09      mov rdx, rax                                           ; char *format\l0x00002a0c      xor eax, eax\l0x00002a0e      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002a13" [URL="dbg.main/0x00002a13", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2893, 0x28aa\l0x00002a13      mov edi, 0x7d                                          ; '}' ; int64_t arg1\l0x00002a18      call dbg.usage\l"]
	"0x00002a1d" [URL="dbg.main/0x00002a1d", fillcolor="white",color="#767676", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2962\l0x00002a1d      call sym.imp.__stack_chk_fail                          ; void __stack_chk_fail(void)\l"]
	"0x00002a22" [URL="dbg.main/0x00002a22", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2785\l0x00002a22      mov rdi, r13                                           ; int64_t arg1\l0x00002a25      call dbg.quote\l0x00002a2a      mov edx, 5\l0x00002a2f      lea rsi, str.invalid_adjustment__s                     ; 0x70d8 ; \"invalid adjustment %s\"\l0x00002a36      xor edi, edi\l0x00002a38      mov r12, rax\l0x00002a3b      call sym.imp.dcgettext\l0x00002a40      mov rcx, r12\l0x00002a43      xor esi, esi                                           ; int errname\l0x00002a45      mov edi, 0x7d                                          ; '}' ; int status\l0x00002a4a      mov rdx, rax                                           ; char *format\l0x00002a4d      xor eax, eax\l0x00002a4f      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002a54" [URL="dbg.main/0x00002a54", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2985\l0x00002a54      mov r13d, 0xa\l0x00002a5a      jmp 0x27b2\l"]
        "0x00002680" -> "0x0000297a" [color="#13a10e"];
        "0x00002680" -> "0x00002704" [color="#c50f1f"];
        "0x00002704" -> "0x00002715" [color="#3a96dd"];
        "0x00002715" -> "0x00002808" [color="#13a10e"];
        "0x00002715" -> "0x0000272e" [color="#c50f1f"];
        "0x0000272e" -> "0x00002808" [color="#13a10e"];
        "0x0000272e" -> "0x00002754" [color="#c50f1f"];
        "0x00002754" -> "0x0000275b" [color="#3a96dd"];
        "0x0000275b" -> "0x00002715" [color="#13a10e"];
        "0x0000275b" -> "0x00002760" [color="#c50f1f"];
        "0x00002760" -> "0x0000297a" [color="#13a10e"];
        "0x00002760" -> "0x00002769" [color="#c50f1f"];
        "0x00002769" -> "0x00002a22" [color="#13a10e"];
        "0x00002769" -> "0x0000278b" [color="#c50f1f"];
        "0x0000278b" -> "0x000029f2" [color="#13a10e"];
        "0x0000278b" -> "0x000027b2" [color="#c50f1f"];
        "0x000027b2" -> "0x000028b7" [color="#13a10e"];
        "0x000027b2" -> "0x000027d2" [color="#c50f1f"];
        "0x000027d2" -> "0x000028b7" [color="#13a10e"];
        "0x000027d2" -> "0x000027dd" [color="#c50f1f"];
        "0x000027dd" -> "0x00002808" [color="#3a96dd"];
        "0x00002808" -> "0x00002760" [color="#13a10e"];
        "0x00002808" -> "0x00002847" [color="#c50f1f"];
        "0x00002847" -> "0x00002890" [color="#13a10e"];
        "0x00002847" -> "0x0000284b" [color="#c50f1f"];
        "0x0000284b" -> "0x000028a5" [color="#13a10e"];
        "0x0000284b" -> "0x00002852" [color="#c50f1f"];
        "0x00002890" -> "0x00002a13" [color="#13a10e"];
        "0x00002890" -> "0x00002899" [color="#c50f1f"];
        "0x00002899" -> "0x0000275b" [color="#3a96dd"];
        "0x000028a5" -> "0x00002a13" [color="#13a10e"];
        "0x000028a5" -> "0x000028b0" [color="#c50f1f"];
        "0x000028b0" -> "0x000028b7" [color="#3a96dd"];
        "0x000028b7" -> "0x00002912" [color="#13a10e"];
        "0x000028b7" -> "0x000028c8" [color="#c50f1f"];
        "0x000028c8" -> "0x000029eb" [color="#13a10e"];
        "0x000028c8" -> "0x000028eb" [color="#c50f1f"];
        "0x000028eb" -> "0x000029eb" [color="#13a10e"];
        "0x000028eb" -> "0x000028f9" [color="#c50f1f"];
        "0x000028f9" -> "0x00002954" [color="#13a10e"];
        "0x000028f9" -> "0x00002912" [color="#c50f1f"];
        "0x00002912" -> "0x00002954" [color="#3a96dd"];
        "0x00002954" -> "0x00002a1d" [color="#13a10e"];
        "0x00002954" -> "0x00002968" [color="#c50f1f"];
        "0x0000297a" -> "0x00002a54" [color="#13a10e"];
        "0x0000297a" -> "0x0000298b" [color="#c50f1f"];
        "0x0000298b" -> "0x000029d0" [color="#13a10e"];
        "0x0000298b" -> "0x000029a3" [color="#c50f1f"];
        "0x000029a3" -> "0x000029d0" [color="#13a10e"];
        "0x000029a3" -> "0x000029aa" [color="#c50f1f"];
        "0x000029aa" -> "0x000029d0" [color="#3a96dd"];
        "0x000029d0" -> "0x00002954" [color="#3a96dd"];
        "0x000029eb" -> "0x000028f9" [color="#3a96dd"];
        "0x000029f2" -> "0x00002a13" [color="#3a96dd"];
        "0x00002a13" -> "0x00002a1d" [color="#3a96dd"];
        "0x00002a22" -> "0x00002a54" [color="#3a96dd"];
        "0x00002a54" -> "0x000027b2" [color="#3a96dd"];
}
