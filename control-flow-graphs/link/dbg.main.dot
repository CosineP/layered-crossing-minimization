digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x000025e0" [URL="dbg.main/0x000025e0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x27c8\l451: int dbg.main (int argc, char **argv);\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x000025e0      endbr64                                                ; int main(int argc,char ** argv);\l0x000025e4      push r13\l0x000025e6      push r12\l0x000025e8      lea r12, [0x00007083]                                  ; \"coreutils\"\l0x000025ef      push rbp\l0x000025f0      mov ebp, edi                                           ; argc\l0x000025f2      push rbx\l0x000025f3      mov rbx, rsi                                           ; argv\l0x000025f6      sub rsp, 8\l0x000025fa      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x000025fd      call dbg.set_program_name\l0x00002602      lea rsi, [0x00007781]                                  ; const char *locale\l0x00002609      mov edi, 6                                             ; int category\l0x0000260e      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x00002613      lea rsi, str._usr_local_share_locale                   ; 0x70ac ; \"/usr/local/share/locale\" ; char *dirname\l0x0000261a      mov rdi, r12                                           ; char *domainname\l0x0000261d      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x00002622      mov rdi, r12                                           ; char *domainname\l0x00002625      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x0000262a      lea rdi, [dbg.close_stdout]                            ; 0x2c00 ; func function\l0x00002631      call sym.atexit                                        ; int atexit(func function)\l0x00002636      sub rsp, 8\l0x0000263a      mov rsi, rbx                                           ; int argc\l0x0000263d      mov edi, ebp                                           ; func main\l0x0000263f      lea rax, str.Michael_Stone                             ; 0x70c4 ; \"Michael Stone\"\l0x00002646      push 0\l0x00002648      mov r8, qword [obj.Version]                            ; [0xb010:8]=0x72d3\l0x0000264f      lea rdx, str.link                                      ; 0x7004 ; \"link\" ; int64_t arg5\l0x00002656      push rax\l0x00002657      lea rax, [dbg.usage]                                   ; 0x28a0\l0x0000265e      mov r9d, 1\l0x00002664      lea rcx, str.GNU_coreutils                             ; 0x707f ; \"GNU coreutils\"\l0x0000266b      push rax\l0x0000266c      xor eax, eax\l0x0000266e      call dbg.parse_gnu_standard_options_only\l0x00002673      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=0\l0x0000267a      add rsp, 0x20\l0x0000267e      lea edx, [rax + 1]\l0x00002681      cmp edx, ebp\l0x00002683      jge 0x26b6\l"]
	"0x00002685" [URL="dbg.main/0x00002685", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002685      movsxd rdx, eax\l0x00002688      add eax, 2\l0x0000268b      cmp eax, ebp\l0x0000268d      jl 0x2753\l"]
	"0x00002693" [URL="dbg.main/0x00002693", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002693      lea rax, [rdx + 1]\l0x00002697      mov rsi, qword [rbx + rax*8]\l0x0000269b      mov rdi, qword [rbx + rax*8 - 8]\l0x000026a0      call sym.imp.link\l0x000026a5      test eax, eax\l0x000026a7      jne 0x26e9\l"]
	"0x000026a9" [URL="dbg.main/0x000026a9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000026a9      add rsp, 8\l0x000026ad      xor eax, eax\l0x000026af      pop rbx\l0x000026b0      pop rbp\l0x000026b1      pop r12\l0x000026b3      pop r13\l0x000026b5      ret\l"]
	"0x000026b6" [URL="dbg.main/0x000026b6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2683\l0x000026b6      cmp eax, ebp\l0x000026b8      jl 0x2789\l"]
	"0x000026be" [URL="dbg.main/0x000026be", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000026be      mov edx, 5\l0x000026c3      lea rsi, str.missing_operand                           ; 0x70d2 ; \"missing operand\"\l0x000026ca      xor edi, edi\l0x000026cc      call sym.imp.dcgettext\l0x000026d1      xor esi, esi                                           ; int errname\l0x000026d3      xor edi, edi                                           ; int status\l0x000026d5      mov rdx, rax                                           ; char *format\l0x000026d8      xor eax, eax\l0x000026da      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x000026df" [URL="dbg.main/0x000026df", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2784\l0x000026df      mov edi, 1                                             ; int64_t arg1\l0x000026e4      call dbg.usage\l"]
	"0x000026e9" [URL="dbg.main/0x000026e9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x26a7\l0x000026e9      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=0\l0x000026f0      mov esi, 4                                             ; int64_t arg2\l0x000026f5      mov edi, 1                                             ; int64_t arg1\l0x000026fa      mov rdx, qword [rbx + rax*8]                           ; int64_t arg3\l0x000026fe      call sym.quotearg_n_style\l0x00002703      mov esi, 4                                             ; int64_t arg2\l0x00002708      xor edi, edi                                           ; int64_t arg1\l0x0000270a      mov rbp, rax\l0x0000270d      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=0\l0x00002714      mov rdx, qword [rbx + rax*8 + 8]                       ; int64_t arg3\l0x00002719      call sym.quotearg_n_style\l0x0000271e      mov edx, 5\l0x00002723      lea rsi, str.cannot_create_link__s_to__s               ; 0x710c ; \"cannot create link %s to %s\"\l0x0000272a      xor edi, edi\l0x0000272c      mov r13, rax\l0x0000272f      call sym.imp.dcgettext\l0x00002734      mov r12, rax\l0x00002737      call sym.imp.__errno_location\l0x0000273c      mov r8, rbp\l0x0000273f      mov rcx, r13\l0x00002742      mov rdx, r12                                           ; char *format\l0x00002745      mov esi, dword [rax]                                   ; int errname\l0x00002747      mov edi, 1                                             ; int status\l0x0000274c      xor eax, eax\l0x0000274e      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002753" [URL="dbg.main/0x00002753", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x268d\l0x00002753      mov rdi, qword [rbx + rdx*8 + 0x10]                    ; int64_t arg1\l0x00002758      call dbg.quote\l0x0000275d      mov edx, 5\l0x00002762      lea rsi, str.extra_operand__s                          ; 0x70fb ; \"extra operand %s\"\l0x00002769      mov r12, rax\l"]
	"0x0000276c" [URL="dbg.main/0x0000276c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27a1\l0x0000276c      xor edi, edi\l0x0000276e      call sym.imp.dcgettext\l0x00002773      mov rcx, r12\l0x00002776      xor esi, esi                                           ; int errname\l0x00002778      xor edi, edi                                           ; int status\l0x0000277a      mov rdx, rax                                           ; char *format\l0x0000277d      xor eax, eax\l0x0000277f      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00002784      jmp 0x26df\l"]
	"0x00002789" [URL="dbg.main/0x00002789", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x26b8\l0x00002789      mov rdi, qword [rbx + rax*8]                           ; int64_t arg1\l0x0000278d      call dbg.quote\l0x00002792      mov edx, 5\l0x00002797      lea rsi, str.missing_operand_after__s                  ; 0x70e2 ; \"missing operand after %s\"\l0x0000279e      mov r12, rax\l0x000027a1      jmp 0x276c\l"]
        "0x000025e0" -> "0x000026b6" [color="#13a10e"];
        "0x000025e0" -> "0x00002685" [color="#c50f1f"];
        "0x00002685" -> "0x00002753" [color="#13a10e"];
        "0x00002685" -> "0x00002693" [color="#c50f1f"];
        "0x00002693" -> "0x000026e9" [color="#13a10e"];
        "0x00002693" -> "0x000026a9" [color="#c50f1f"];
        "0x000026b6" -> "0x00002789" [color="#13a10e"];
        "0x000026b6" -> "0x000026be" [color="#c50f1f"];
        "0x000026be" -> "0x000026df" [color="#3a96dd"];
        "0x000026df" -> "0x000026e9" [color="#3a96dd"];
        "0x000026e9" -> "0x00002753" [color="#3a96dd"];
        "0x00002753" -> "0x0000276c" [color="#3a96dd"];
        "0x0000276c" -> "0x000026df" [color="#3a96dd"];
        "0x00002789" -> "0x0000276c" [color="#3a96dd"];
}
