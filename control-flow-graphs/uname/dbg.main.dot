digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00002600" [URL="dbg.main/0x00002600", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x29f8\l944: int dbg.main (int argc, char **argv);\l; var utsname name @ rbp-0x1c0\l; var char const[8] const unknown @ rbp+0x0\l; var int64_t var_8h @ rsp+0x18\l; var int64_t var_10h @ rsp+0x20\l; var int64_t var_51h @ rsp+0x61\l; var int64_t var_92h @ rsp+0xa2\l; var int64_t var_d3h @ rsp+0xe3\l; var int64_t var_114h @ rsp+0x124\l; var int64_t var_198h @ rsp+0x1a8\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x00002600      endbr64                                                ; int main(int argc,char ** argv);\l0x00002604      push r15\l0x00002606      push r14\l0x00002608      lea r14, [0x00007045]\l0x0000260f      push r13\l0x00002611      lea r13, [0x000070be]                                  ; \"coreutils\"\l0x00002618      push r12\l0x0000261a      mov r12d, edi                                          ; argc\l0x0000261d      push rbp\l0x0000261e      mov rbp, rsi                                           ; argv\l0x00002621      push rbx\l0x00002622      sub rsp, 0x1a8\l0x00002629      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x0000262c      mov rax, qword fs:[0x28]\l0x00002635      mov qword [var_198h], rax\l0x0000263d      xor eax, eax\l0x0000263f      call dbg.set_program_name\l0x00002644      mov rsi, r14                                           ; const char *locale\l0x00002647      mov edi, 6                                             ; int category\l0x0000264c      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x00002651      lea rsi, str._usr_local_share_locale                   ; 0x70e7 ; \"/usr/local/share/locale\" ; char *dirname\l0x00002658      mov rdi, r13                                           ; char *domainname\l0x0000265b      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x00002660      mov rdi, r13                                           ; char *domainname\l0x00002663      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x00002668      lea rdi, [dbg.close_stdout]                            ; 0x2ed0 ; func function\l0x0000266f      call sym.atexit                                        ; int atexit(func function)\l0x00002674      cmp dword [obj.uname_mode], 2                          ; [0xb010:4]=1\l0x0000267b      je 0x2777\l"]
	"0x00002681" [URL="dbg.main/0x00002681", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002681      xor ebx, ebx\l0x00002683      lea r15, obj.uname_long_options                        ; 0xaa40 ; \"Zq\"\l0x0000268a      lea r14, str.asnrvmpio                                 ; 0x7119 ; \"asnrvmpio\"\l0x00002691      lea r13, [0x000075a8]\l0x00002698      nop dword [rax + rax]\l"]
	"0x000026a0" [URL="dbg.main/0x000026a0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; XREFS: CODE 0x000026e5  CODE 0x000026ea  CODE 0x000026ef  \l; XREFS: CODE 0x000026f4  CODE 0x000026f9  CODE 0x000026fe  \l; XREFS: CODE 0x00002703  CODE 0x00002708  CODE 0x00002772  \l0x000026a0      xor r8d, r8d\l0x000026a3      mov rcx, r15\l0x000026a6      mov rdx, r14\l0x000026a9      mov rsi, rbp\l0x000026ac      mov edi, r12d\l0x000026af      call sym.imp.getopt_long\l0x000026b4      cmp eax, 0xffffffff\l0x000026b7      je 0x28ba\l"]
	"0x000026bd" [URL="dbg.main/0x000026bd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000026bd      cmp eax, 0x76\l0x000026c0      jg 0x2970\l"]
	"0x000026c6" [URL="dbg.main/0x000026c6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000026c6      cmp eax, 0x60\l0x000026c9      jle 0x2710\l"]
	"0x000026cb" [URL="dbg.main/0x000026cb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000026cb      sub eax, 0x61\l0x000026ce      cmp eax, 0x15\l0x000026d1      ja 0x2970\l"]
	"0x000026d7" [URL="dbg.main/0x000026d7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000026d7      movsxd rax, dword [r13 + rax*4]\l0x000026dc      add rax, r13\l0x000026df      jmp rax\l"]
	"0x00002710" [URL="dbg.main/0x00002710", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x26c9\l0x00002710      cmp eax, 0xffffff7d                                    ; 4294967165\l0x00002715      jne 0x275d\l"]
	"0x00002717" [URL="dbg.main/0x00002717", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002717      cmp dword [obj.uname_mode], 1                          ; [0xb010:4]=1\l0x0000271e      lea rax, str.arch                                      ; 0x700a ; \"arch\"\l0x00002725      lea rsi, str.uname                                     ; 0x7004 ; \"uname\" ; int64_t arg2\l0x0000272c      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0xb0a8:8]=0 ; int64_t arg1\l0x00002733      cmovne rsi, rax\l0x00002737      mov rcx, qword [obj.Version]                           ; [0xb018:8]=0x7608 ; int64_t arg5\l0x0000273e      xor r9d, r9d                                           ; int64_t arg_c0h\l0x00002741      xor eax, eax\l0x00002743      lea r8, str.David_MacKenzie                            ; 0x7109 ; \"David MacKenzie\" ; int64_t arg6\l0x0000274a      lea rdx, str.GNU_coreutils                             ; 0x70ba ; \"GNU coreutils\" ; int64_t arg3\l0x00002751      call dbg.version_etc\l0x00002756      xor edi, edi                                           ; int status\l0x00002758      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x0000275d" [URL="dbg.main/0x0000275d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2715, 0x2799\l0x0000275d      cmp eax, 0xffffff7e                                    ; 4294967166\l0x00002762      jne 0x2970\l"]
	"0x00002768" [URL="dbg.main/0x00002768", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002768      xor edi, edi                                           ; int64_t arg1\l0x0000276a      call dbg.usage\l0x0000276f      or ebx, 0xffffffff                                     ; -1\l0x00002772      jmp 0x26a0\l"]
	"0x00002777" [URL="dbg.main/0x00002777", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x267b\l0x00002777      xor r8d, r8d\l0x0000277a      lea rcx, obj.arch_long_options                         ; 0xa9e0 ; \"Uq\"\l0x00002781      mov rdx, r14\l0x00002784      mov rsi, rbp\l0x00002787      mov edi, r12d\l0x0000278a      call sym.imp.getopt_long\l0x0000278f      cmp eax, 0xffffffff\l0x00002792      je 0x27e8\l"]
	"0x00002794" [URL="dbg.main/0x00002794", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002794      cmp eax, 0xffffff7d                                    ; 4294967165\l0x00002799      jne 0x275d\l"]
	"0x0000279b" [URL="dbg.main/0x0000279b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000279b      cmp dword [obj.uname_mode], 1                          ; [0xb010:4]=1\l0x000027a2      lea rax, str.arch                                      ; 0x700a ; \"arch\"\l0x000027a9      lea rsi, str.uname                                     ; 0x7004 ; \"uname\" ; int argc\l0x000027b0      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0xb0a8:8]=0 ; func main\l0x000027b7      cmovne rsi, rax\l0x000027bb      push rax\l0x000027bc      xor eax, eax\l0x000027be      mov rcx, qword [obj.Version]                           ; [0xb018:8]=0x7608 \"9.0\" ; func init\l0x000027c5      push 0\l0x000027c7      lea r9, str.Karel_Zak                                  ; 0x70ff ; \"Karel Zak\" ; int64_t arg_c0h\l0x000027ce      lea r8, str.David_MacKenzie                            ; 0x7109 ; \"David MacKenzie\" ; int64_t arg6\l0x000027d5      lea rdx, str.GNU_coreutils                             ; 0x70ba ; \"GNU coreutils\" ; int64_t arg3\l0x000027dc      call dbg.version_etc\l0x000027e1      xor edi, edi                                           ; int status\l0x000027e3      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x000027e8" [URL="dbg.main/0x000027e8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2792\l0x000027e8      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb0b0:4]=0\l0x000027ef      cmp r12d, eax\l0x000027f2      jne 0x293f\l"]
	"0x000027f8" [URL="dbg.main/0x000027f8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027f8      lea rdi, [var_10h]\l0x000027fd      call sym.imp.uname\l0x00002802      add eax, 1\l0x00002805      je 0x29ad\l"]
	"0x0000280b" [URL="dbg.main/0x0000280b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000280b      mov ebp, 0x10\l0x00002810      mov ebx, 0x10\l"]
	"0x00002815" [URL="dbg.main/0x00002815", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2916, 0x2929\l0x00002815      test bpl, 8\l0x00002819      jne 0x298c\l"]
	"0x0000281f" [URL="dbg.main/0x0000281f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2999\l0x0000281f      test bpl, 0x10\l0x00002823      jne 0x297a\l"]
	"0x00002829" [URL="dbg.main/0x00002829", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x28d4, 0x2987\l0x00002829      test bpl, 0x20                                         ; \"@\"\l0x0000282d      je 0x289e\l"]
	"0x0000282f" [URL="dbg.main/0x0000282f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000282f      add ebx, 1\l0x00002832      je 0x2849\l"]
	"0x00002834" [URL="dbg.main/0x00002834", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002834      lea r12, obj.unknown.1                                 ; 0x7600 ; \"unknown\"\l0x0000283b      mov rdi, r12                                           ; int64_t arg1\l0x0000283e      call dbg.print_element\l0x00002843      test bpl, 0x40                                         ; elf_phdr\l0x00002847      jne 0x28b0\l"]
	"0x00002849" [URL="dbg.main/0x00002849", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2832, 0x28a2, 0x28ae, 0x28b8\l0x00002849      and bpl, 0x80\l0x0000284d      jne 0x292e\l"]
	"0x00002853" [URL="dbg.main/0x00002853", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x293a\l0x00002853      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0xb0a8:8]=0\l0x0000285a      mov rax, qword [rdi + 0x28]\l0x0000285e      cmp rax, qword [rdi + 0x30]\l0x00002862      jae 0x299e\l"]
	"0x00002868" [URL="dbg.main/0x00002868", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002868      lea rdx, [rax + 1]\l0x0000286c      mov qword [rdi + 0x28], rdx\l0x00002870      mov byte [rax], 0xa\l"]
	"0x00002873" [URL="dbg.main/0x00002873", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x29a8\l0x00002873      mov rax, qword [var_198h]\l0x0000287b      sub rax, qword fs:[0x28]\l0x00002884      jne 0x29d9\l"]
	"0x0000288a" [URL="dbg.main/0x0000288a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000288a      add rsp, 0x1a8\l0x00002891      xor eax, eax\l0x00002893      pop rbx\l0x00002894      pop rbp\l0x00002895      pop r12\l0x00002897      pop r13\l0x00002899      pop r14\l0x0000289b      pop r15\l0x0000289d      ret\l"]
	"0x0000289e" [URL="dbg.main/0x0000289e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x282d\l0x0000289e      test bpl, 0x40                                         ; elf_phdr\l0x000028a2      je 0x2849\l"]
	"0x000028a4" [URL="dbg.main/0x000028a4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000028a4      add ebx, 1\l0x000028a7      lea r12, obj.unknown.1                                 ; 0x7600 ; \"unknown\"\l0x000028ae      je 0x2849\l"]
	"0x000028b0" [URL="dbg.main/0x000028b0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2847\l0x000028b0      mov rdi, r12                                           ; int64_t arg1\l0x000028b3      call dbg.print_element\l0x000028b8      jmp 0x2849\l"]
	"0x000028ba" [URL="dbg.main/0x000028ba", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x26b7\l0x000028ba      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb0b0:4]=0\l0x000028c1      cmp r12d, eax\l0x000028c4      jne 0x293f\l"]
	"0x000028c6" [URL="dbg.main/0x000028c6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000028c6      test ebx, ebx\l0x000028c8      mov ebp, 1\l0x000028cd      cmovne ebp, ebx\l0x000028d0      test bpl, 0x1f\l0x000028d4      je 0x2829\l"]
	"0x000028da" [URL="dbg.main/0x000028da", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000028da      lea rdi, [var_10h]\l0x000028df      mov qword [var_8h], rdi\l0x000028e4      call sym.imp.uname\l0x000028e9      mov rdi, qword [var_8h]\l0x000028ee      add eax, 1\l0x000028f1      je 0x29ad\l"]
	"0x000028f7" [URL="dbg.main/0x000028f7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000028f7      test bpl, 1\l0x000028fb      je 0x2902\l"]
	"0x000028fd" [URL="dbg.main/0x000028fd", fillcolor="white",color="#767676", fontname="Courier",label="0x000028fd      call dbg.print_element\l"]
	"0x00002902" [URL="dbg.main/0x00002902", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x28fb\l0x00002902      test bpl, 2\l0x00002906      je 0x2912\l"]
	"0x00002908" [URL="dbg.main/0x00002908", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002908      lea rdi, [var_51h]                                     ; int64_t arg1\l0x0000290d      call dbg.print_element\l"]
	"0x00002912" [URL="dbg.main/0x00002912", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2906\l0x00002912      test bpl, 4\l0x00002916      je 0x2815\l"]
	"0x0000291c" [URL="dbg.main/0x0000291c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000291c      lea rdi, [var_92h]                                     ; int64_t arg1\l0x00002924      call dbg.print_element\l0x00002929      jmp 0x2815\l"]
	"0x0000292e" [URL="dbg.main/0x0000292e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x284d\l0x0000292e      lea rdi, str.GNU_Linux                                 ; 0x714b ; \"GNU/Linux\" ; int64_t arg1\l0x00002935      call dbg.print_element\l0x0000293a      jmp 0x2853\l"]
	"0x0000293f" [URL="dbg.main/0x0000293f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x27f2, 0x28c4\l0x0000293f      mov rdi, qword [rbp + rax*8]                           ; int64_t arg1\l0x00002944      call dbg.quote\l0x00002949      mov edx, 5\l0x0000294e      lea rsi, str.extra_operand__s                          ; 0x7123 ; \"extra operand %s\"\l0x00002955      xor edi, edi\l0x00002957      mov r12, rax\l0x0000295a      call sym.imp.dcgettext\l0x0000295f      mov rcx, r12\l0x00002962      xor esi, esi                                           ; int errname\l0x00002964      xor edi, edi                                           ; int status\l0x00002966      mov rdx, rax                                           ; char *format\l0x00002969      xor eax, eax\l0x0000296b      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002970" [URL="dbg.main/0x00002970", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x26c0, 0x26d1, 0x2762\l0x00002970      mov edi, 1                                             ; int64_t arg1\l0x00002975      call dbg.usage\l"]
	"0x0000297a" [URL="dbg.main/0x0000297a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2823\l0x0000297a      lea rdi, [var_114h]                                    ; int64_t arg1\l0x00002982      call dbg.print_element\l0x00002987      jmp 0x2829\l"]
	"0x0000298c" [URL="dbg.main/0x0000298c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2819\l0x0000298c      lea rdi, [var_d3h]                                     ; int64_t arg1\l0x00002994      call dbg.print_element\l0x00002999      jmp 0x281f\l"]
	"0x0000299e" [URL="dbg.main/0x0000299e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2862\l0x0000299e      mov esi, 0xa\l0x000029a3      call sym.imp.__overflow\l0x000029a8      jmp 0x2873\l"]
	"0x000029ad" [URL="dbg.main/0x000029ad", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2805, 0x28f1\l0x000029ad      mov edx, 5\l0x000029b2      lea rsi, str.cannot_get_system_name                    ; 0x7134 ; \"cannot get system name\"\l0x000029b9      xor edi, edi\l0x000029bb      call sym.imp.dcgettext\l0x000029c0      mov r12, rax\l0x000029c3      call sym.imp.__errno_location\l0x000029c8      mov rdx, r12                                           ; char *format\l0x000029cb      mov edi, 1                                             ; int status\l0x000029d0      mov esi, dword [rax]                                   ; int errname\l0x000029d2      xor eax, eax\l0x000029d4      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x000029d9" [URL="dbg.main/0x000029d9", fillcolor="white",color="#767676", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2884\l0x000029d9      call sym.imp.__stack_chk_fail                          ; void __stack_chk_fail(void)\l"]
        "0x00002600" -> "0x00002777" [color="#13a10e"];
        "0x00002600" -> "0x00002681" [color="#c50f1f"];
        "0x00002681" -> "0x000026a0" [color="#3a96dd"];
        "0x000026a0" -> "0x000028ba" [color="#13a10e"];
        "0x000026a0" -> "0x000026bd" [color="#c50f1f"];
        "0x000026bd" -> "0x00002970" [color="#13a10e"];
        "0x000026bd" -> "0x000026c6" [color="#c50f1f"];
        "0x000026c6" -> "0x00002710" [color="#13a10e"];
        "0x000026c6" -> "0x000026cb" [color="#c50f1f"];
        "0x000026cb" -> "0x00002970" [color="#13a10e"];
        "0x000026cb" -> "0x000026d7" [color="#c50f1f"];
        "0x00002710" -> "0x0000275d" [color="#13a10e"];
        "0x00002710" -> "0x00002717" [color="#c50f1f"];
        "0x0000275d" -> "0x00002970" [color="#13a10e"];
        "0x0000275d" -> "0x00002768" [color="#c50f1f"];
        "0x00002768" -> "0x000026a0" [color="#3a96dd"];
        "0x00002777" -> "0x000027e8" [color="#13a10e"];
        "0x00002777" -> "0x00002794" [color="#c50f1f"];
        "0x00002794" -> "0x0000275d" [color="#13a10e"];
        "0x00002794" -> "0x0000279b" [color="#c50f1f"];
        "0x000027e8" -> "0x0000293f" [color="#13a10e"];
        "0x000027e8" -> "0x000027f8" [color="#c50f1f"];
        "0x000027f8" -> "0x000029ad" [color="#13a10e"];
        "0x000027f8" -> "0x0000280b" [color="#c50f1f"];
        "0x0000280b" -> "0x00002815" [color="#3a96dd"];
        "0x00002815" -> "0x0000298c" [color="#13a10e"];
        "0x00002815" -> "0x0000281f" [color="#c50f1f"];
        "0x0000281f" -> "0x0000297a" [color="#13a10e"];
        "0x0000281f" -> "0x00002829" [color="#c50f1f"];
        "0x00002829" -> "0x0000289e" [color="#13a10e"];
        "0x00002829" -> "0x0000282f" [color="#c50f1f"];
        "0x0000282f" -> "0x00002849" [color="#13a10e"];
        "0x0000282f" -> "0x00002834" [color="#c50f1f"];
        "0x00002834" -> "0x000028b0" [color="#13a10e"];
        "0x00002834" -> "0x00002849" [color="#c50f1f"];
        "0x00002849" -> "0x0000292e" [color="#13a10e"];
        "0x00002849" -> "0x00002853" [color="#c50f1f"];
        "0x00002853" -> "0x0000299e" [color="#13a10e"];
        "0x00002853" -> "0x00002868" [color="#c50f1f"];
        "0x00002868" -> "0x00002873" [color="#3a96dd"];
        "0x00002873" -> "0x000029d9" [color="#13a10e"];
        "0x00002873" -> "0x0000288a" [color="#c50f1f"];
        "0x0000289e" -> "0x00002849" [color="#13a10e"];
        "0x0000289e" -> "0x000028a4" [color="#c50f1f"];
        "0x000028a4" -> "0x00002849" [color="#13a10e"];
        "0x000028a4" -> "0x000028b0" [color="#c50f1f"];
        "0x000028b0" -> "0x00002849" [color="#3a96dd"];
        "0x000028ba" -> "0x0000293f" [color="#13a10e"];
        "0x000028ba" -> "0x000028c6" [color="#c50f1f"];
        "0x000028c6" -> "0x00002829" [color="#13a10e"];
        "0x000028c6" -> "0x000028da" [color="#c50f1f"];
        "0x000028da" -> "0x000029ad" [color="#13a10e"];
        "0x000028da" -> "0x000028f7" [color="#c50f1f"];
        "0x000028f7" -> "0x00002902" [color="#13a10e"];
        "0x000028f7" -> "0x000028fd" [color="#c50f1f"];
        "0x000028fd" -> "0x00002902" [color="#3a96dd"];
        "0x00002902" -> "0x00002912" [color="#13a10e"];
        "0x00002902" -> "0x00002908" [color="#c50f1f"];
        "0x00002908" -> "0x00002912" [color="#3a96dd"];
        "0x00002912" -> "0x00002815" [color="#13a10e"];
        "0x00002912" -> "0x0000291c" [color="#c50f1f"];
        "0x0000291c" -> "0x00002815" [color="#3a96dd"];
        "0x0000292e" -> "0x00002853" [color="#3a96dd"];
        "0x0000293f" -> "0x00002970" [color="#3a96dd"];
        "0x00002970" -> "0x0000297a" [color="#3a96dd"];
        "0x0000297a" -> "0x00002829" [color="#3a96dd"];
        "0x0000298c" -> "0x0000281f" [color="#3a96dd"];
        "0x0000299e" -> "0x00002873" [color="#3a96dd"];
        "0x000029ad" -> "0x000029d9" [color="#3a96dd"];
}
