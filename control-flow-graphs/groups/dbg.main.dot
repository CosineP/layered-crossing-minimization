digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x000026e0" [URL="dbg.main/0x000026e0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x2a18\l790: int dbg.main (int argc, char **argv);\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x000026e0      endbr64                                                ; int main(int argc,char ** argv);\l0x000026e4      push r15\l0x000026e6      push r14\l0x000026e8      push r13\l0x000026ea      lea r13, [0x00007085]                                  ; \"coreutils\"\l0x000026f1      push r12\l0x000026f3      lea r12, [0x00007861]\l0x000026fa      push rbp\l0x000026fb      mov ebp, edi                                           ; argc\l0x000026fd      push rbx\l0x000026fe      mov rbx, rsi                                           ; argv\l0x00002701      sub rsp, 8\l0x00002705      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x00002708      call dbg.set_program_name\l0x0000270d      mov rsi, r12                                           ; const char *locale\l0x00002710      mov edi, 6                                             ; int category\l0x00002715      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x0000271a      lea rsi, str._usr_local_share_locale                   ; 0x70ae ; \"/usr/local/share/locale\" ; char *dirname\l0x00002721      mov rdi, r13                                           ; char *domainname\l0x00002724      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x00002729      mov rdi, r13                                           ; char *domainname\l0x0000272c      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x00002731      lea rdi, [dbg.close_stdout]                            ; 0x3100 ; func function\l0x00002738      call sym.atexit                                        ; int atexit(func function)\l0x0000273d      xor r8d, r8d\l0x00002740      mov rdx, r12\l0x00002743      mov rsi, rbx\l0x00002746      lea rcx, obj.longopts                                  ; 0xab80 ; \"=q\"\l0x0000274d      mov edi, ebp\l0x0000274f      call sym.imp.getopt_long\l0x00002754      cmp eax, 0xffffffff\l0x00002757      je 0x27b0\l"]
	"0x00002759" [URL="dbg.main/0x00002759", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002759      cmp eax, 0xffffff7d                                    ; 4294967165\l0x0000275e      jne 0x279b\l"]
	"0x00002760" [URL="dbg.main/0x00002760", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002760      push rcx\l0x00002761      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0xb088:8]=0 ; func main\l0x00002768      xor eax, eax\l0x0000276a      lea r9, str.James_Youngman                             ; 0x70c6 ; \"James Youngman\" ; func rtld_fini\l0x00002771      push 0\l0x00002773      mov rcx, qword [obj.Version]                           ; [0xb010:8]=0x73cd ; int64_t arg5\l0x0000277a      lea r8, str.David_MacKenzie                            ; 0x70d5 ; \"David MacKenzie\" ; int64_t arg6\l0x00002781      lea rdx, str.GNU_coreutils                             ; 0x7081 ; \"GNU coreutils\" ; int64_t arg3\l0x00002788      lea rsi, str.groups                                    ; 0x7004 ; \"groups\" ; int64_t arg2\l0x0000278f      call dbg.version_etc\l0x00002794      xor edi, edi                                           ; int status\l0x00002796      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x0000279b" [URL="dbg.main/0x0000279b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x275e\l0x0000279b      cmp eax, 0xffffff7e                                    ; 4294967166\l0x000027a0      je 0x2963\l"]
	"0x000027a6" [URL="dbg.main/0x000027a6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027a6      mov edi, 1                                             ; int64_t arg1\l0x000027ab      call dbg.usage\l"]
	"0x000027b0" [URL="dbg.main/0x000027b0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2757\l0x000027b0      mov edx, dword [obj.optind]                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=1\l0x000027b6      cmp edx, ebp\l0x000027b8      je 0x28ba\l"]
	"0x000027be" [URL="dbg.main/0x000027be", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027be      mov r12d, 1\l0x000027c4      lea r13, str._s_:_                                     ; 0x7137 ; \"%s : \"\l0x000027cb      jl 0x2869\l"]
	"0x000027d1" [URL="dbg.main/0x000027d1", fillcolor="white",color="#767676", fontname="Courier",label="0x000027d1      jmp 0x2940\l"]
	"0x000027e0" [URL="dbg.main/0x000027e0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2878\l0x000027e0      mov r15d, dword [rax + 0x14]\l0x000027e4      mov r14d, dword [rax + 0x10]\l0x000027e8      mov rsi, r13\l0x000027eb      mov edi, 1\l0x000027f0      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=1\l0x000027f7      mov rdx, qword [rbx + rax*8]\l0x000027fb      xor eax, eax\l0x000027fd      call sym.imp.__printf_chk\l0x00002802      mov ecx, r15d                                          ; int64_t arg4\l0x00002805      mov edx, r15d                                          ; int64_t arg3\l0x00002808      mov esi, r14d                                          ; int64_t arg2\l0x0000280b      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=1\l0x00002812      mov r9d, 0x20                                          ; \"@\" ; int64_t arg6\l0x00002818      mov r8d, 1                                             ; int64_t arg5\l0x0000281e      mov rdi, qword [rbx + rax*8]                           ; int64_t arg1\l0x00002822      call dbg.print_group_list\l0x00002827      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0xb088:8]=0\l0x0000282e      test al, al\l0x00002830      mov eax, 0\l0x00002835      cmove r12d, eax\l0x00002839      mov rax, qword [rdi + 0x28]\l0x0000283d      cmp rax, qword [rdi + 0x30]\l0x00002841      jae 0x2954\l"]
	"0x00002847" [URL="dbg.main/0x00002847", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002847      lea rdx, [rax + 1]\l0x0000284b      mov qword [rdi + 0x28], rdx\l0x0000284f      mov byte [rax], 0xa\l"]
	"0x00002852" [URL="dbg.main/0x00002852", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x28b8, 0x295e\l0x00002852      mov eax, dword [obj.optind]                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=1\l0x00002858      lea edx, [rax + 1]\l0x0000285b      mov dword [obj.optind], edx                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=1\l0x00002861      cmp edx, ebp\l0x00002863      jge 0x2940\l"]
	"0x00002869" [URL="dbg.main/0x00002869", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27cb\l0x00002869      movsxd rdx, edx\l0x0000286c      mov rdi, qword [rbx + rdx*8]\l0x00002870      call sym.imp.getpwnam\l0x00002875      test rax, rax\l0x00002878      jne 0x27e0\l"]
	"0x0000287e" [URL="dbg.main/0x0000287e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000287e      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=1\l0x00002885      mov rdi, qword [rbx + rax*8]                           ; int64_t arg1\l0x00002889      call dbg.quote\l0x0000288e      mov edx, 5\l0x00002893      lea rsi, str._s:_no_such_user                          ; 0x7126 ; \"%s: no such user\"\l0x0000289a      xor edi, edi\l0x0000289c      mov r12, rax\l0x0000289f      call sym.imp.dcgettext\l0x000028a4      mov rcx, r12\l0x000028a7      xor esi, esi                                           ; int errname\l0x000028a9      xor edi, edi                                           ; int status\l0x000028ab      mov rdx, rax                                           ; char *format\l0x000028ae      xor eax, eax\l0x000028b0      xor r12d, r12d\l0x000028b3      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x000028b8      jmp 0x2852\l"]
	"0x000028ba" [URL="dbg.main/0x000028ba", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27b8\l0x000028ba      call sym.imp.__errno_location\l0x000028bf      mov dword [rax], 0\l0x000028c5      mov rbx, rax\l0x000028c8      call sym.imp.getuid                                    ; uid_t getuid(void)\l0x000028cd      mov ebp, eax\l0x000028cf      cmp eax, 0xffffffff\l0x000028d2      je 0x296a\l"]
	"0x000028d8" [URL="dbg.main/0x000028d8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x296d\l0x000028d8      mov dword [rbx], 0\l0x000028de      call sym.imp.getegid\l0x000028e3      mov r12d, eax\l0x000028e6      cmp eax, 0xffffffff\l0x000028e9      je 0x29c4\l"]
	"0x000028ef" [URL="dbg.main/0x000028ef", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x29c7\l0x000028ef      mov dword [rbx], 0\l0x000028f5      call sym.imp.getgid\l0x000028fa      mov edx, eax\l0x000028fc      cmp eax, 0xffffffff\l0x000028ff      je 0x2997\l"]
	"0x00002905" [URL="dbg.main/0x00002905", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x299a\l0x00002905      mov ecx, r12d                                          ; int64_t arg4\l0x00002908      xor edi, edi                                           ; int64_t arg1\l0x0000290a      mov r9d, 0x20                                          ; \"@\" ; int64_t arg6\l0x00002910      mov esi, ebp                                           ; int64_t arg2\l0x00002912      mov r8d, 1                                             ; int64_t arg5\l0x00002918      call dbg.print_group_list\l0x0000291d      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0xb088:8]=0\l0x00002924      mov r12d, eax\l0x00002927      mov rax, qword [rdi + 0x28]\l0x0000292b      cmp rax, qword [rdi + 0x30]\l0x0000292f      jae 0x29f1\l"]
	"0x00002935" [URL="dbg.main/0x00002935", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002935      lea rdx, [rax + 1]\l0x00002939      mov qword [rdi + 0x28], rdx\l0x0000293d      mov byte [rax], 0xa\l"]
	"0x00002940" [URL="dbg.main/0x00002940", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x27d1, 0x2863, 0x29fb\l0x00002940      xor r12d, 1\l0x00002944      pop rdx\l0x00002945      pop rbx\l0x00002946      movzx eax, r12b\l0x0000294a      pop rbp\l0x0000294b      pop r12\l0x0000294d      pop r13\l0x0000294f      pop r14\l0x00002951      pop r15\l0x00002953      ret\l"]
	"0x00002954" [URL="dbg.main/0x00002954", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2841\l0x00002954      mov esi, 0xa\l0x00002959      call sym.imp.__overflow\l0x0000295e      jmp 0x2852\l"]
	"0x00002963" [URL="dbg.main/0x00002963", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27a0\l0x00002963      xor edi, edi                                           ; int64_t arg1\l0x00002965      call dbg.usage\l"]
	"0x0000296a" [URL="dbg.main/0x0000296a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x28d2\l0x0000296a      cmp dword [rbx], 0\l0x0000296d      je 0x28d8\l"]
	"0x00002973" [URL="dbg.main/0x00002973", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002973      mov edx, 5\l0x00002978      lea rsi, str.cannot_get_real_UID                       ; 0x70e5 ; \"cannot get real UID\"\l0x0000297f      xor edi, edi\l0x00002981      call sym.imp.dcgettext\l0x00002986      mov esi, dword [rbx]                                   ; int errname\l0x00002988      mov edi, 1                                             ; int status\l0x0000298d      mov rdx, rax                                           ; char *format\l0x00002990      xor eax, eax\l0x00002992      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002997" [URL="dbg.main/0x00002997", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x28ff\l0x00002997      cmp dword [rbx], 0\l0x0000299a      je 0x2905\l"]
	"0x000029a0" [URL="dbg.main/0x000029a0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000029a0      mov edx, 5\l0x000029a5      lea rsi, str.cannot_get_real_GID                       ; 0x7112 ; \"cannot get real GID\"\l0x000029ac      xor edi, edi\l0x000029ae      call sym.imp.dcgettext\l0x000029b3      mov esi, dword [rbx]                                   ; int errname\l0x000029b5      mov edi, 1                                             ; int status\l0x000029ba      mov rdx, rax                                           ; char *format\l0x000029bd      xor eax, eax\l0x000029bf      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x000029c4" [URL="dbg.main/0x000029c4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x28e9\l0x000029c4      cmp dword [rbx], 0\l0x000029c7      je 0x28ef\l"]
	"0x000029cd" [URL="dbg.main/0x000029cd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000029cd      mov edx, 5\l0x000029d2      lea rsi, str.cannot_get_effective_GID                  ; 0x70f9 ; \"cannot get effective GID\"\l0x000029d9      xor edi, edi\l0x000029db      call sym.imp.dcgettext\l0x000029e0      mov esi, dword [rbx]                                   ; int errname\l0x000029e2      mov edi, 1                                             ; int status\l0x000029e7      mov rdx, rax                                           ; char *format\l0x000029ea      xor eax, eax\l0x000029ec      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x000029f1" [URL="dbg.main/0x000029f1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x292f\l0x000029f1      mov esi, 0xa\l0x000029f6      call sym.imp.__overflow\l0x000029fb      jmp 0x2940\l"]
        "0x000026e0" -> "0x000027b0" [color="#13a10e"];
        "0x000026e0" -> "0x00002759" [color="#c50f1f"];
        "0x00002759" -> "0x0000279b" [color="#13a10e"];
        "0x00002759" -> "0x00002760" [color="#c50f1f"];
        "0x0000279b" -> "0x00002963" [color="#13a10e"];
        "0x0000279b" -> "0x000027a6" [color="#c50f1f"];
        "0x000027a6" -> "0x000027b0" [color="#3a96dd"];
        "0x000027b0" -> "0x000028ba" [color="#13a10e"];
        "0x000027b0" -> "0x000027be" [color="#c50f1f"];
        "0x000027be" -> "0x00002869" [color="#13a10e"];
        "0x000027be" -> "0x000027d1" [color="#c50f1f"];
        "0x000027d1" -> "0x00002940" [color="#3a96dd"];
        "0x000027e0" -> "0x00002954" [color="#13a10e"];
        "0x000027e0" -> "0x00002847" [color="#c50f1f"];
        "0x00002847" -> "0x00002852" [color="#3a96dd"];
        "0x00002852" -> "0x00002940" [color="#13a10e"];
        "0x00002852" -> "0x00002869" [color="#c50f1f"];
        "0x00002869" -> "0x000027e0" [color="#13a10e"];
        "0x00002869" -> "0x0000287e" [color="#c50f1f"];
        "0x0000287e" -> "0x00002852" [color="#3a96dd"];
        "0x000028ba" -> "0x0000296a" [color="#13a10e"];
        "0x000028ba" -> "0x000028d8" [color="#c50f1f"];
        "0x000028d8" -> "0x000029c4" [color="#13a10e"];
        "0x000028d8" -> "0x000028ef" [color="#c50f1f"];
        "0x000028ef" -> "0x00002997" [color="#13a10e"];
        "0x000028ef" -> "0x00002905" [color="#c50f1f"];
        "0x00002905" -> "0x000029f1" [color="#13a10e"];
        "0x00002905" -> "0x00002935" [color="#c50f1f"];
        "0x00002935" -> "0x00002940" [color="#3a96dd"];
        "0x00002954" -> "0x00002852" [color="#3a96dd"];
        "0x00002963" -> "0x0000296a" [color="#3a96dd"];
        "0x0000296a" -> "0x000028d8" [color="#13a10e"];
        "0x0000296a" -> "0x00002973" [color="#c50f1f"];
        "0x00002973" -> "0x00002997" [color="#3a96dd"];
        "0x00002997" -> "0x00002905" [color="#13a10e"];
        "0x00002997" -> "0x000029a0" [color="#c50f1f"];
        "0x000029a0" -> "0x000029c4" [color="#3a96dd"];
        "0x000029c4" -> "0x000028ef" [color="#13a10e"];
        "0x000029c4" -> "0x000029cd" [color="#c50f1f"];
        "0x000029cd" -> "0x000029f1" [color="#3a96dd"];
        "0x000029f1" -> "0x00002940" [color="#3a96dd"];
}
