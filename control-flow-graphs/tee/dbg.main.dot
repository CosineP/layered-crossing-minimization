digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00002720" [URL="dbg.main/0x00002720", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x2968\l547: int dbg.main (int argc, char **argv);\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x00002720      endbr64                                                ; int main(int argc,char ** argv);\l0x00002724      push r15\l0x00002726      lea r15, obj.output_error_args                         ; 0xaac0 ; \"4q\"\l0x0000272d      push r14\l0x0000272f      lea r14, obj.output_error_types                        ; 0x7630\l0x00002736      push r13\l0x00002738      lea r13, obj.long_options                              ; 0xab00 ; \"Vq\"\l0x0000273f      push r12\l0x00002741      lea r12, [0x000070a1]                                  ; \"coreutils\"\l0x00002748      push rbp\l0x00002749      mov ebp, edi                                           ; argc\l0x0000274b      push rbx\l0x0000274c      mov rbx, rsi                                           ; argv\l0x0000274f      sub rsp, 8\l0x00002753      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x00002756      call dbg.set_program_name\l0x0000275b      lea rsi, [0x00007b21]                                  ; const char *locale\l0x00002762      mov edi, 6                                             ; int category\l0x00002767      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x0000276c      lea rsi, str._usr_local_share_locale                   ; 0x70ca ; \"/usr/local/share/locale\" ; char *dirname\l0x00002773      mov rdi, r12                                           ; char *domainname\l0x00002776      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x0000277b      mov rdi, r12                                           ; char *domainname\l0x0000277e      lea r12, [0x00007121]                                  ; \"aip\"\l0x00002785      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x0000278a      lea rdi, [dbg.close_stdout]                            ; 0x3560 ; func function\l0x00002791      call sym.atexit                                        ; int atexit(func function)\l0x00002796      mov byte [obj.append], 0                               ; [0xb0f1:1]=1\l0x0000279d      mov byte [obj.ignore_interrupts], 0                    ; [0xb0f0:1]=1\l"]
	"0x000027a4" [URL="dbg.main/0x000027a4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x27d7, 0x286e, 0x288f, 0x289e\l0x000027a4      xor r8d, r8d\l0x000027a7      mov rcx, r13\l0x000027aa      mov rdx, r12\l0x000027ad      mov rsi, rbx\l0x000027b0      mov edi, ebp\l0x000027b2      call sym.imp.getopt_long\l0x000027b7      cmp eax, 0xffffffff\l0x000027ba      je 0x28a3\l"]
	"0x000027c0" [URL="dbg.main/0x000027c0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027c0      cmp eax, 0x61\l0x000027c3      je 0x2888\l"]
	"0x000027c9" [URL="dbg.main/0x000027c9", fillcolor="white",color="#767676", fontname="Courier",label="0x000027c9      jle 0x27e0\l"]
	"0x000027cb" [URL="dbg.main/0x000027cb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027cb      cmp eax, 0x69\l0x000027ce      jne 0x2830\l"]
	"0x000027d0" [URL="dbg.main/0x000027d0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027d0      mov byte [obj.ignore_interrupts], 1                    ; [0xb0f0:1]=1\l0x000027d7      jmp 0x27a4\l"]
	"0x000027e0" [URL="dbg.main/0x000027e0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27c9\l0x000027e0      cmp eax, 0xffffff7d                                    ; 4294967165\l0x000027e5      jne 0x2873\l"]
	"0x000027eb" [URL="dbg.main/0x000027eb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000027eb      lea rax, str.David_MacKenzie                           ; 0x7111 ; \"David MacKenzie\"\l0x000027f2      push 0\l0x000027f4      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0xb0a8:8]=0 ; int64_t arg1\l0x000027fb      lea r9, str.Richard_M._Stallman                        ; 0x70f1 ; \"Richard M. Stallman\" ; int64_t arg_c0h\l0x00002802      push rax\l0x00002803      mov rcx, qword [obj.Version]                           ; [0xb010:8]=0x7640 \"9.0\" ; \"@v\" ; int64_t arg5\l0x0000280a      xor eax, eax\l0x0000280c      lea r8, str.Mike_Parker                                ; 0x7105 ; \"Mike Parker\" ; int64_t arg6\l0x00002813      lea rdx, str.GNU_coreutils                             ; 0x709d ; \"GNU coreutils\" ; int64_t arg3\l0x0000281a      lea rsi, [0x00007023]                                  ; \"tee\" ; int64_t arg2\l0x00002821      call dbg.version_etc\l0x00002826      xor edi, edi                                           ; int status\l0x00002828      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x00002830" [URL="dbg.main/0x00002830", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27ce\l0x00002830      cmp eax, 0x70\l0x00002833      jne 0x290a\l"]
	"0x00002839" [URL="dbg.main/0x00002839", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002839      mov rsi, qword [obj.optarg]                            ; obj.optarg_GLIBC_2.2.5\l                                                                       ; [0xb0c0:8]=0\l0x00002840      test rsi, rsi\l0x00002843      je 0x2894\l"]
	"0x00002845" [URL="dbg.main/0x00002845", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002845      mov r9, qword [obj.argmatch_die]                       ; [0xb018:8]=0x3180 dbg.__argmatch_die ; int64_t arg6\l0x0000284c      mov r8d, 4                                             ; int64_t arg5\l0x00002852      mov rcx, r14                                           ; int64_t arg4\l0x00002855      mov rdx, r15                                           ; int64_t arg3\l0x00002858      lea rdi, str.__output_error                            ; 0x70e2 ; \"--output-error\" ; int64_t arg1\l0x0000285f      call dbg.__xargmatch_internal\l0x00002864      mov eax, dword [r14 + rax*4]\l0x00002868      mov dword [obj.output_error], eax                      ; [0xb0ec:4]=2\l0x0000286e      jmp 0x27a4\l"]
	"0x00002873" [URL="dbg.main/0x00002873", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27e5\l0x00002873      cmp eax, 0xffffff7e                                    ; 4294967166\l0x00002878      jne 0x290a\l"]
	"0x0000287e" [URL="dbg.main/0x0000287e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000287e      xor edi, edi                                           ; int64_t arg1\l0x00002880      call dbg.usage\l"]
	"0x00002888" [URL="dbg.main/0x00002888", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27c3\l0x00002888      mov byte [obj.append], 1                               ; [0xb0f1:1]=1\l0x0000288f      jmp 0x27a4\l"]
	"0x00002894" [URL="dbg.main/0x00002894", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2843\l0x00002894      mov dword [obj.output_error], 2                        ; [0xb0ec:4]=2\l0x0000289e      jmp 0x27a4\l"]
	"0x000028a3" [URL="dbg.main/0x000028a3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27ba\l0x000028a3      cmp byte [obj.ignore_interrupts], 0                    ; [0xb0f0:1]=1\l0x000028aa      jne 0x28e8\l"]
	"0x000028ac" [URL="dbg.main/0x000028ac", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x28f7\l0x000028ac      cmp dword [obj.output_error], 0                        ; [0xb0ec:4]=2\l0x000028b3      jne 0x28f9\l"]
	"0x000028b5" [URL="dbg.main/0x000028b5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2908\l0x000028b5      movsxd rdx, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb0b8:4]=0\l0x000028bc      mov edi, ebp                                           ; int64_t arg1\l0x000028be      sub edi, edx\l0x000028c0      lea rsi, [rbx + rdx*8]                                 ; int64_t arg2\l0x000028c4      call dbg.tee_files\l0x000028c9      xor edi, edi                                           ; int fildes\l0x000028cb      mov ebx, eax\l0x000028cd      call sym.imp.close                                     ; int close(int fildes)\l0x000028d2      test eax, eax\l0x000028d4      jne 0x2914\l"]
	"0x000028d6" [URL="dbg.main/0x000028d6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000028d6      xor ebx, 1\l0x000028d9      pop rdx\l0x000028da      movzx eax, bl\l0x000028dd      pop rbx\l0x000028de      pop rbp\l0x000028df      pop r12\l0x000028e1      pop r13\l0x000028e3      pop r14\l0x000028e5      pop r15\l0x000028e7      ret\l"]
	"0x000028e8" [URL="dbg.main/0x000028e8", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x28aa\l0x000028e8      mov esi, 1                                             ; void *func\l0x000028ed      mov edi, 2                                             ; int sig\l0x000028f2      call sym.imp.signal                                    ; void signal(int sig, void *func)\l0x000028f7      jmp 0x28ac\l"]
	"0x000028f9" [URL="dbg.main/0x000028f9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x28b3\l0x000028f9      mov esi, 1                                             ; void *func\l0x000028fe      mov edi, 0xd                                           ; int sig\l0x00002903      call sym.imp.signal                                    ; void signal(int sig, void *func)\l0x00002908      jmp 0x28b5\l"]
	"0x0000290a" [URL="dbg.main/0x0000290a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2833, 0x2878\l0x0000290a      mov edi, 1                                             ; int64_t arg1\l0x0000290f      call dbg.usage\l"]
	"0x00002914" [URL="dbg.main/0x00002914", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x28d4\l0x00002914      mov edx, 5\l0x00002919      lea rsi, str.standard_input                            ; 0x7125 ; \"standard input\"\l0x00002920      xor edi, edi\l0x00002922      call sym.imp.dcgettext\l0x00002927      mov r12, rax\l0x0000292a      call sym.imp.__errno_location\l0x0000292f      mov rcx, r12\l0x00002932      mov edi, 1                                             ; int status\l0x00002937      lea rdx, [0x0000769b]                                  ; \"%s\" ; char *format\l0x0000293e      mov esi, dword [rax]                                   ; int errname\l0x00002940      xor eax, eax\l0x00002942      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00002947      nop word [rax + rax]\l"]
        "0x00002720" -> "0x000027a4" [color="#3a96dd"];
        "0x000027a4" -> "0x000028a3" [color="#13a10e"];
        "0x000027a4" -> "0x000027c0" [color="#c50f1f"];
        "0x000027c0" -> "0x00002888" [color="#13a10e"];
        "0x000027c0" -> "0x000027c9" [color="#c50f1f"];
        "0x000027c9" -> "0x000027e0" [color="#13a10e"];
        "0x000027c9" -> "0x000027cb" [color="#c50f1f"];
        "0x000027cb" -> "0x00002830" [color="#13a10e"];
        "0x000027cb" -> "0x000027d0" [color="#c50f1f"];
        "0x000027d0" -> "0x000027a4" [color="#3a96dd"];
        "0x000027e0" -> "0x00002873" [color="#13a10e"];
        "0x000027e0" -> "0x000027eb" [color="#c50f1f"];
        "0x00002830" -> "0x0000290a" [color="#13a10e"];
        "0x00002830" -> "0x00002839" [color="#c50f1f"];
        "0x00002839" -> "0x00002894" [color="#13a10e"];
        "0x00002839" -> "0x00002845" [color="#c50f1f"];
        "0x00002845" -> "0x000027a4" [color="#3a96dd"];
        "0x00002873" -> "0x0000290a" [color="#13a10e"];
        "0x00002873" -> "0x0000287e" [color="#c50f1f"];
        "0x00002888" -> "0x000027a4" [color="#3a96dd"];
        "0x00002894" -> "0x000027a4" [color="#3a96dd"];
        "0x000028a3" -> "0x000028e8" [color="#13a10e"];
        "0x000028a3" -> "0x000028ac" [color="#c50f1f"];
        "0x000028ac" -> "0x000028f9" [color="#13a10e"];
        "0x000028ac" -> "0x000028b5" [color="#c50f1f"];
        "0x000028b5" -> "0x00002914" [color="#13a10e"];
        "0x000028b5" -> "0x000028d6" [color="#c50f1f"];
        "0x000028e8" -> "0x000028ac" [color="#3a96dd"];
        "0x000028f9" -> "0x000028b5" [color="#3a96dd"];
        "0x0000290a" -> "0x00002914" [color="#3a96dd"];
        "0x00002914" -> "0x00002950" [color="#3a96dd"];
}
