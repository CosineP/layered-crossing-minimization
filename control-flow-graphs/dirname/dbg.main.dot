digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00002600" [URL="dbg.main/0x00002600", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x27d8\l439: int dbg.main (int argc, char **argv);\l; arg char const dot @ rbx\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x00002600      endbr64                                                ; int main(int argc,char ** argv);\l0x00002604      push r15\l0x00002606      push r14\l0x00002608      lea r14, obj.longopts                                  ; 0xab80\l0x0000260f      push r13\l0x00002611      lea r13, [0x000070e3]                                  ; \"z\"\l0x00002618      push r12\l0x0000261a      lea r12, [0x000070a2]                                  ; \"coreutils\"\l0x00002621      push rbp\l0x00002622      mov ebp, edi                                           ; argc\l0x00002624      push rbx\l0x00002625      mov rbx, rsi                                           ; argv\l0x00002628      sub rsp, 8\l0x0000262c      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x0000262f      call dbg.set_program_name\l0x00002634      lea rsi, [0x00007027]                                  ; const char *locale\l0x0000263b      mov edi, 6                                             ; int category\l0x00002640      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x00002645      lea rsi, str._usr_local_share_locale                   ; 0x70cb ; \"/usr/local/share/locale\" ; char *dirname\l0x0000264c      mov rdi, r12                                           ; char *domainname\l0x0000264f      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x00002654      mov rdi, r12                                           ; char *domainname\l0x00002657      xor r12d, r12d\l0x0000265a      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x0000265f      lea rdi, [dbg.close_stdout]                            ; 0x2c70 ; func function\l0x00002666      call sym.atexit                                        ; int atexit(func function)\l"]
	"0x0000266b" [URL="dbg.main/0x0000266b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2697\l0x0000266b      xor r8d, r8d\l0x0000266e      mov rcx, r14\l0x00002671      mov rdx, r13\l0x00002674      mov rsi, rbx\l0x00002677      mov edi, ebp\l0x00002679      call sym.imp.getopt_long\l0x0000267e      cmp eax, 0xffffffff\l0x00002681      je 0x26ee\l"]
	"0x00002683" [URL="dbg.main/0x00002683", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002683      cmp eax, 0xffffff7e                                    ; 4294967166\l0x00002688      je 0x278a\l"]
	"0x0000268e" [URL="dbg.main/0x0000268e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000268e      mov r12d, 1\l0x00002694      cmp eax, 0x7a\l0x00002697      je 0x266b\l"]
	"0x00002699" [URL="dbg.main/0x00002699", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002699      cmp eax, 0xffffff7d                                    ; 4294967165\l0x0000269e      je 0x26b0\l"]
	"0x000026a0" [URL="dbg.main/0x000026a0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x27b2\l0x000026a0      mov edi, 1                                             ; int64_t arg1\l0x000026a5      call dbg.usage\l0x000026aa      nop word [rax + rax]\l"]
	"0x000026b0" [URL="dbg.main/0x000026b0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x269e\l0x000026b0      sub rsp, 8\l0x000026b4      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0xb088:8]=0 ; func main\l0x000026bb      xor eax, eax\l0x000026bd      mov rcx, qword [obj.Version]                           ; [0xb010:8]=0x73bc ; func init\l0x000026c4      push 0\l0x000026c6      lea r9, str.Jim_Meyering                               ; 0x70e5 ; \"Jim Meyering\" ; int64_t arg_c0h\l0x000026cd      lea r8, str.David_MacKenzie                            ; 0x70f2 ; \"David MacKenzie\" ; int64_t arg6\l0x000026d4      lea rdx, str.GNU_coreutils                             ; 0x709e ; \"GNU coreutils\" ; int64_t arg3\l0x000026db      lea rsi, str.dirname                                   ; 0x7004 ; \"dirname\" ; int64_t arg2\l0x000026e2      call dbg.version_etc\l0x000026e7      xor edi, edi                                           ; int status\l0x000026e9      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x000026ee" [URL="dbg.main/0x000026ee", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2681\l0x000026ee      mov eax, dword [obj.optind]                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=1\l; DATA XREF from dbg.version_etc_arn @ 0x534d\l0x000026f4      cmp eax, ebp\l0x000026f6      jge 0x2791\l"]
	"0x000026fc" [URL="dbg.main/0x000026fc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000026fc      cmp r12b, 1\l0x00002700      lea r13, obj.dot.0                                     ; 0x73bb ; \".9.0\"\l0x00002707      sbb r14d, r14d\l0x0000270a      and r14d, 0xa\l0x0000270e      mov r12d, r14d\l"]
	"0x00002711" [URL="dbg.main/0x00002711", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2770\l0x00002711      cdqe\l0x00002713      mov r15, qword [rbx + rax*8]\l0x00002717      mov rdi, r15                                           ; int64_t arg1\l0x0000271a      call sym.dir_len\l0x0000271f      mov rdx, rax\l0x00002722      test rax, rax\l0x00002725      jne 0x272f\l"]
	"0x00002727" [URL="dbg.main/0x00002727", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002727      mov edx, 1\l0x0000272c      mov r15, r13\l"]
	"0x0000272f" [URL="dbg.main/0x0000272f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2725\l0x0000272f      mov rcx, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0xb088:8]=0\l0x00002736      mov rdi, r15\l0x00002739      mov esi, 1\l0x0000273e      call sym.imp.fwrite_unlocked\l0x00002743      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0xb088:8]=0\l0x0000274a      mov rax, qword [rdi + 0x28]\l0x0000274e      cmp rax, qword [rdi + 0x30]\l0x00002752      jae 0x2780\l"]
	"0x00002754" [URL="dbg.main/0x00002754", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002754      lea rdx, [rax + 1]\l0x00002758      mov qword [rdi + 0x28], rdx\l0x0000275c      mov byte [rax], r12b\l"]
	"0x0000275f" [URL="dbg.main/0x0000275f", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2788\l0x0000275f      mov eax, dword [obj.optind]                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=1\l0x00002765      add eax, 1\l0x00002768      mov dword [obj.optind], eax                            ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=1\l0x0000276e      cmp eax, ebp\l0x00002770      jl 0x2711\l"]
	"0x00002772" [URL="dbg.main/0x00002772", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; DATA XREF from dbg.version_etc_arn @ 0x529f\l0x00002772      pop rdx\l0x00002773      xor eax, eax\l0x00002775      pop rbx\l0x00002776      pop rbp\l0x00002777      pop r12\l0x00002779      pop r13\l0x0000277b      pop r14\l0x0000277d      pop r15\l0x0000277f      ret\l"]
	"0x00002780" [URL="dbg.main/0x00002780", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2752\l0x00002780      mov esi, r14d\l0x00002783      call sym.imp.__overflow\l0x00002788      jmp 0x275f\l"]
	"0x0000278a" [URL="dbg.main/0x0000278a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2688\l0x0000278a      xor edi, edi                                           ; int64_t arg1\l0x0000278c      call dbg.usage\l"]
	"0x00002791" [URL="dbg.main/0x00002791", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x26f6\l0x00002791      xor edi, edi\l0x00002793      mov edx, 5\l0x00002798      lea rsi, str.missing_operand                           ; 0x7102 ; \"missing operand\"\l0x0000279f      call sym.imp.dcgettext\l0x000027a4      xor esi, esi                                           ; int errname\l0x000027a6      xor edi, edi                                           ; int status\l0x000027a8      mov rdx, rax                                           ; char *format\l0x000027ab      xor eax, eax\l0x000027ad      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x000027b2      jmp 0x26a0\l"]
        "0x00002600" -> "0x0000266b" [color="#3a96dd"];
        "0x0000266b" -> "0x000026ee" [color="#13a10e"];
        "0x0000266b" -> "0x00002683" [color="#c50f1f"];
        "0x00002683" -> "0x0000278a" [color="#13a10e"];
        "0x00002683" -> "0x0000268e" [color="#c50f1f"];
        "0x0000268e" -> "0x0000266b" [color="#13a10e"];
        "0x0000268e" -> "0x00002699" [color="#c50f1f"];
        "0x00002699" -> "0x000026b0" [color="#13a10e"];
        "0x00002699" -> "0x000026a0" [color="#c50f1f"];
        "0x000026a0" -> "0x000026b0" [color="#3a96dd"];
        "0x000026ee" -> "0x00002791" [color="#13a10e"];
        "0x000026ee" -> "0x000026fc" [color="#c50f1f"];
        "0x000026fc" -> "0x00002711" [color="#3a96dd"];
        "0x00002711" -> "0x0000272f" [color="#13a10e"];
        "0x00002711" -> "0x00002727" [color="#c50f1f"];
        "0x00002727" -> "0x0000272f" [color="#3a96dd"];
        "0x0000272f" -> "0x00002780" [color="#13a10e"];
        "0x0000272f" -> "0x00002754" [color="#c50f1f"];
        "0x00002754" -> "0x0000275f" [color="#3a96dd"];
        "0x0000275f" -> "0x00002711" [color="#13a10e"];
        "0x0000275f" -> "0x00002772" [color="#c50f1f"];
        "0x00002780" -> "0x0000275f" [color="#3a96dd"];
        "0x0000278a" -> "0x00002791" [color="#3a96dd"];
        "0x00002791" -> "0x000026a0" [color="#3a96dd"];
}
