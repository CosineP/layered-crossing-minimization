digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00002920" [URL="dbg.main/0x00002920", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x2a58\l288: int dbg.main (int argc, char **argv);\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x00002920      endbr64                                                ; int main(int argc,char ** argv);\l0x00002924      push r12\l0x00002926      lea r12, [0x0000a178]                                  ; \"coreutils\"\l0x0000292d      push rbp\l0x0000292e      mov rbp, rsi                                           ; argv\l0x00002931      push rbx\l0x00002932      mov ebx, edi                                           ; argc\l0x00002934      mov rdi, qword [rsi]                                   ; int64_t arg1\l0x00002937      call dbg.set_program_name\l0x0000293c      lea rsi, [0x0000ad41]                                  ; const char *locale\l0x00002943      mov edi, 6                                             ; int category\l0x00002948      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x0000294d      lea rsi, str._usr_local_share_locale                   ; 0xa1a1 ; \"/usr/local/share/locale\" ; char *dirname\l0x00002954      mov rdi, r12                                           ; char *domainname\l0x00002957      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x0000295c      mov rdi, r12                                           ; char *domainname\l0x0000295f      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x00002964      lea rdi, [dbg.close_stdout]                            ; 0x34a0 ; func function\l0x0000296b      call sym.atexit                                        ; int atexit(func function)\l0x00002970      mov r9d, 1                                             ; func rtld_fini\l0x00002976      mov rsi, rbp                                           ; int argc\l0x00002979      mov edi, ebx                                           ; func main\l0x0000297b      sub rsp, 8\l0x0000297f      lea rax, str.Kaveh_Ghazi                               ; 0xa1b9 ; \"Kaveh Ghazi\"\l0x00002986      mov r8, qword [obj.Version]                            ; [0xe010:8]=0xa498 ; func fini\l0x0000298d      lea rcx, str.GNU_coreutils                             ; 0xa174 ; \"GNU coreutils\" ; func init\l0x00002994      push 0\l0x00002996      lea rdx, [global_program]                              ; 0xa00a ; \"uptime\" ; int64_t arg5\l0x0000299d      push rax\l0x0000299e      lea rax, str.David_MacKenzie                           ; 0xa1c5 ; \"David MacKenzie\"\l0x000029a5      push rax\l0x000029a6      lea rax, str.Joseph_Arceneaux                          ; 0xa1d5 ; \"Joseph Arceneaux\"\l0x000029ad      push rax\l0x000029ae      lea rax, [dbg.usage]                                   ; 0x3070\l0x000029b5      push rax                                               ; 0x3070\l                                                                       ; dbg.usage\l0x000029b6      xor eax, eax\l0x000029b8      call dbg.parse_gnu_standard_options_only\l0x000029bd      movsxd rax, dword [obj.optind]                         ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xe090:4]=0\l0x000029c4      add rsp, 0x30\l0x000029c8      sub ebx, eax\l0x000029ca      je 0x29e4\l"]
	"0x000029cc" [URL="dbg.main/0x000029cc", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000029cc      cmp ebx, 1\l0x000029cf      jne 0x29f7\l"]
	"0x000029d1" [URL="dbg.main/0x000029d1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000029d1      mov rdi, qword [rbp + rax*8]                           ; int64_t arg1\l0x000029d6      xor esi, esi                                           ; int64_t arg2\l0x000029d8      call sym.uptime\l"]
	"0x000029dd" [URL="dbg.main/0x000029dd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x29f5\l0x000029dd      pop rbx\l0x000029de      xor eax, eax\l0x000029e0      pop rbp\l0x000029e1      pop r12\l0x000029e3      ret\l"]
	"0x000029e4" [URL="dbg.main/0x000029e4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x29ca\l0x000029e4      mov esi, 1                                             ; int64_t arg2\l0x000029e9      lea rdi, str._var_run_utmp                             ; 0xa0f0 ; \"/var/run/utmp\" ; int64_t arg1\l0x000029f0      call sym.uptime\l0x000029f5      jmp 0x29dd\l"]
	"0x000029f7" [URL="dbg.main/0x000029f7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x29cf\l0x000029f7      mov rdi, qword [rbp + rax*8 + 8]                       ; int64_t arg1\l0x000029fc      call dbg.quote\l0x00002a01      mov edx, 5\l0x00002a06      lea rsi, str.extra_operand__s                          ; 0xa1e6 ; \"extra operand %s\"\l0x00002a0d      xor edi, edi\l0x00002a0f      mov r12, rax\l0x00002a12      call sym.imp.dcgettext\l0x00002a17      xor edi, edi                                           ; int status\l0x00002a19      mov rcx, r12\l0x00002a1c      xor esi, esi                                           ; int errname\l0x00002a1e      mov rdx, rax                                           ; char *format\l0x00002a21      xor eax, eax\l0x00002a23      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00002a28      mov edi, 1                                             ; int64_t arg1\l0x00002a2d      call dbg.usage\l0x00002a32      nop word cs:[rax + rax]\l0x00002a3c      nop dword [rax]\l"]
        "0x00002920" -> "0x000029e4" [color="#13a10e"];
        "0x00002920" -> "0x000029cc" [color="#c50f1f"];
        "0x000029cc" -> "0x000029f7" [color="#13a10e"];
        "0x000029cc" -> "0x000029d1" [color="#c50f1f"];
        "0x000029d1" -> "0x000029dd" [color="#3a96dd"];
        "0x000029e4" -> "0x000029dd" [color="#3a96dd"];
}
