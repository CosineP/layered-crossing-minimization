digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x00002760" [URL="dbg.main/0x00002760", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="  ;-- main:\l  ; DATA XREF from entry0 @ 0x2d78\l1527: int dbg.main (int argc, char **argv);\l; var dev_ino dev_ino_buf @ rbp-0x200\l; var stat dot_sb @ rbp-0x1f0\l; var stat parent_sb @ rbp-0x160\l; var stat ent_sb @ rbp-0xd0\l; var int64_t var_8h @ rsp+0x8\l; var int64_t var_10h @ rsp+0x10\l; var int64_t var_18h @ rsp+0x18\l; var uint32_t var_20h @ rsp+0x20\l; var uint32_t var_2fh @ rsp+0x2f\l; var int64_t var_30h @ rsp+0x30\l; var void *buf @ rsp+0x38\l; var int64_t var_40h @ rsp+0x40\l; var uint32_t var_50h @ rsp+0x50\l; var uint32_t var_58h @ rsp+0x58\l; var int64_t var_e0h @ rsp+0xe0\l; var uint32_t var_170h @ rsp+0x170\l; var uint32_t var_178h @ rsp+0x178\l; var int64_t var_208h @ rsp+0x208\l; arg int argc @ rdi\l; arg char **argv @ rsi\l0x00002760      endbr64                                                ; int main(int argc,char ** argv);\l0x00002764      push r15\l0x00002766      lea r15, obj.longopts                                  ; 0xab20 ; \"xq\"\l0x0000276d      push r14\l0x0000276f      lea r14, [0x000070a0]                                  ; \"coreutils\"\l0x00002776      push r13\l0x00002778      push r12\l0x0000277a      mov r12d, edi                                          ; argc\l0x0000277d      lea rdi, str.POSIXLY_CORRECT                           ; 0x70c9 ; \"POSIXLY_CORRECT\" ; const char *name\l0x00002784      push rbp\l0x00002785      lea rbp, [0x00007025]\l0x0000278c      push rbx\l0x0000278d      mov rbx, rsi                                           ; argv\l0x00002790      sub rsp, 0x218\l0x00002797      mov rax, qword fs:[0x28]\l0x000027a0      mov qword [var_208h], rax\l0x000027a8      xor eax, eax\l0x000027aa      call sym.imp.getenv                                    ; char *getenv(const char *name)\l0x000027af      mov rdi, qword [rbx]                                   ; int64_t arg1\l0x000027b2      test rax, rax\l0x000027b5      setne r13b\l0x000027b9      call dbg.set_program_name\l0x000027be      mov rsi, rbp                                           ; const char *locale\l0x000027c1      mov edi, 6                                             ; int category\l0x000027c6      call sym.imp.setlocale                                 ; char *setlocale(int category, const char *locale)\l0x000027cb      lea rsi, str._usr_local_share_locale                   ; 0x70d9 ; \"/usr/local/share/locale\" ; char *dirname\l0x000027d2      mov rdi, r14                                           ; char *domainname\l0x000027d5      call sym.imp.bindtextdomain                            ; char *bindtextdomain(char *domainname, char *dirname)\l0x000027da      mov rdi, r14                                           ; char *domainname\l0x000027dd      lea r14, [0x000070f1]                                  ; \"LP\"\l0x000027e4      call sym.imp.textdomain                                ; char *textdomain(char *domainname)\l0x000027e9      lea rdi, [dbg.close_stdout]                            ; 0x3420 ; func function\l0x000027f0      call sym.atexit                                        ; int atexit(func function)\l"]
	"0x000027f5" [URL="dbg.main/0x000027f5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x285c, 0x2876\l0x000027f5      xor r8d, r8d\l0x000027f8      mov rcx, r15\l0x000027fb      mov rdx, r14\l0x000027fe      mov rsi, rbx\l0x00002801      mov edi, r12d\l0x00002804      call sym.imp.getopt_long\l0x00002809      cmp eax, 0xffffffff\l0x0000280c      je 0x287b\l"]
	"0x0000280e" [URL="dbg.main/0x0000280e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000280e      cmp eax, 0x4c\l0x00002811      je 0x2870\l"]
	"0x00002813" [URL="dbg.main/0x00002813", fillcolor="white",color="#767676", fontname="Courier",label="0x00002813      jg 0x2850\l"]
	"0x00002815" [URL="dbg.main/0x00002815", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002815      cmp eax, 0xffffff7d                                    ; 4294967165\l0x0000281a      jne 0x285e\l"]
	"0x0000281c" [URL="dbg.main/0x0000281c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x0000281c      mov rdi, qword [obj.stdout]                            ; obj.stdout_GLIBC_2.2.5\l                                                                       ; [0xb088:8]=0 ; int64_t arg1\l0x00002823      mov rcx, qword [obj.Version]                           ; [0xb010:8]=0x74c9 \"9.0\" ; int64_t arg5\l0x0000282a      xor eax, eax\l0x0000282c      xor r9d, r9d                                           ; int64_t arg_c0h\l0x0000282f      lea r8, str.Jim_Meyering                               ; 0x70f4 ; \"Jim Meyering\" ; int64_t arg6\l0x00002836      lea rdx, str.GNU_coreutils                             ; 0x709c ; \"GNU coreutils\" ; int64_t arg3\l0x0000283d      lea rsi, [0x0000700b]                                  ; \"pwd\" ; int64_t arg2\l0x00002844      call dbg.version_etc\l0x00002849      xor edi, edi                                           ; int status\l0x0000284b      call sym.imp.exit                                      ; void exit(int status)\l"]
	"0x00002850" [URL="dbg.main/0x00002850", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2813\l0x00002850      cmp eax, 0x50\l0x00002853      jne 0x2904\l"]
	"0x00002859" [URL="dbg.main/0x00002859", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002859      xor r13d, r13d\l0x0000285c      jmp 0x27f5\l"]
	"0x0000285e" [URL="dbg.main/0x0000285e", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x281a\l0x0000285e      cmp eax, 0xffffff7e                                    ; 4294967166\l0x00002863      jne 0x2904\l"]
	"0x00002869" [URL="dbg.main/0x00002869", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002869      xor edi, edi                                           ; int64_t arg1\l0x0000286b      call dbg.usage\l"]
	"0x00002870" [URL="dbg.main/0x00002870", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2811\l0x00002870      mov r13d, 1\l0x00002876      jmp 0x27f5\l"]
	"0x0000287b" [URL="dbg.main/0x0000287b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x280c\l0x0000287b      cmp dword [obj.optind], r12d                           ; obj.optind_GLIBC_2.2.5\l                                                                       ; [0xb090:4]=0\l0x00002882      jl 0x28e1\l"]
	"0x00002884" [URL="dbg.main/0x00002884", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2902\l0x00002884      test r13b, r13b\l0x00002887      jne 0x28cd\l"]
	"0x00002889" [URL="dbg.main/0x00002889", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x28d5\l0x00002889      call dbg.xgetcwd\l0x0000288e      mov r12, rax\l0x00002891      test rax, rax\l0x00002894      je 0x2913\l"]
	"0x00002896" [URL="dbg.main/0x00002896", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002896      mov rdi, rax                                           ; const char *s\l0x00002899      call sym.imp.puts                                      ; int puts(const char *s)\l0x0000289e      mov rdi, r12                                           ; void *ptr\l0x000028a1      call sym.imp.free                                      ; void free(void *ptr)\l"]
	"0x000028a6" [URL="dbg.main/0x000028a6", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x28df, 0x2d3f\l0x000028a6      mov rax, qword [var_208h]\l0x000028ae      sub rax, qword fs:[0x28]\l0x000028b7      jne 0x290e\l"]
	"0x000028b9" [URL="dbg.main/0x000028b9", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000028b9      add rsp, 0x218\l0x000028c0      xor eax, eax\l0x000028c2      pop rbx\l0x000028c3      pop rbp\l0x000028c4      pop r12\l0x000028c6      pop r13\l0x000028c8      pop r14\l0x000028ca      pop r15\l0x000028cc      ret\l"]
	"0x000028cd" [URL="dbg.main/0x000028cd", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2887\l0x000028cd      call dbg.logical_getcwd\l0x000028d2      test rax, rax\l0x000028d5      je 0x2889\l"]
	"0x000028d7" [URL="dbg.main/0x000028d7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000028d7      mov rdi, rax                                           ; const char *s\l0x000028da      call sym.imp.puts                                      ; int puts(const char *s)\l0x000028df      jmp 0x28a6\l"]
	"0x000028e1" [URL="dbg.main/0x000028e1", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2882\l0x000028e1      xor edi, edi\l0x000028e3      mov edx, 5\l0x000028e8      lea rsi, str.ignoring_non_option_arguments             ; 0x7101 ; \"ignoring non-option arguments\"\l0x000028ef      call sym.imp.dcgettext\l0x000028f4      xor esi, esi                                           ; int errname\l0x000028f6      xor edi, edi                                           ; int status\l0x000028f8      mov rdx, rax                                           ; char *format\l0x000028fb      xor eax, eax\l0x000028fd      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l0x00002902      jmp 0x2884\l"]
	"0x00002904" [URL="dbg.main/0x00002904", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2853, 0x2863\l0x00002904      mov edi, 1                                             ; int64_t arg1\l0x00002909      call dbg.usage\l"]
	"0x0000290e" [URL="dbg.main/0x0000290e", fillcolor="white",color="#767676", fontname="Courier",label="; CODE XREF from dbg.main @ 0x28b7\l0x0000290e      call sym.imp.__stack_chk_fail                          ; void __stack_chk_fail(void)\l"]
	"0x00002913" [URL="dbg.main/0x00002913", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2894\l0x00002913      mov edi, 0x18                                          ; size_t size\l0x00002918      call sym.xmalloc                                       ;  void *xmalloc(size_t size)\l0x0000291d      mov edi, sym._init                                     ; 0x2000 ; size_t size\l0x00002922      mov qword [rax + 8], sym._init                         ; [0x2000:8]=0x8ec8348fa1e0ff3\l0x0000292a      mov r13, rax\l0x0000292d      call sym.xmalloc                                       ;  void *xmalloc(size_t size)\l0x00002932      lea rdi, [var_40h]                                     ; int64_t arg1\l0x00002937      lea rdx, [rax + 0x1fff]\l0x0000293e      mov qword [r13], rax\l0x00002942      mov qword [r13 + 0x10], rdx\l0x00002946      mov byte [rax + 0x1fff], 0\l0x0000294d      call dbg.get_root_dev_ino\l0x00002952      mov qword [var_10h], rax\l0x00002957      test rax, rax\l0x0000295a      je 0x2c9d\l"]
	"0x00002960" [URL="dbg.main/0x00002960", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002960      lea rax, [var_50h]\l0x00002965      lea rdi, [0x00007132]                                  ; \".\"\l0x0000296c      mov r14d, 1\l0x00002972      mov rsi, rax\l0x00002975      mov qword [var_30h], rax\l0x0000297a      call sym.imp.stat\l0x0000297f      test eax, eax\l0x00002981      js 0x2c5a\l"]
	"0x00002987" [URL="dbg.main/0x00002987", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002987      lea rax, [var_e0h]\l0x0000298f      mov qword [var_8h], r13\l0x00002994      mov qword [rsp], rax\l0x00002998      lea rax, [var_170h]\l0x000029a0      mov qword [buf], rax\l"]
	"0x000029a5" [URL="dbg.main/0x000029a5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2b07\l0x000029a5      mov rax, qword [var_10h]\l0x000029aa      mov rcx, qword [rax]\l0x000029ad      cmp qword [var_58h], rcx\l0x000029b2      jne 0x29c3\l"]
	"0x000029b4" [URL="dbg.main/0x000029b4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000029b4      mov rax, qword [rax + 8]\l0x000029b8      cmp qword [var_50h], rax\l0x000029bd      je 0x2d1b\l"]
	"0x000029c3" [URL="dbg.main/0x000029c3", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x29b2\l0x000029c3      lea rax, [r14 + 1]\l0x000029c7      lea rdi, [0x00007131]                                  ; \"..\"\l0x000029ce      mov qword [var_18h], rax\l0x000029d3      call sym.imp.opendir\l0x000029d8      mov r12, rax\l0x000029db      test rax, rax\l0x000029de      je 0x2c18\l"]
	"0x000029e4" [URL="dbg.main/0x000029e4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000029e4      mov rdi, rax\l0x000029e7      call sym.imp.dirfd\l0x000029ec      mov r13d, eax\l0x000029ef      test eax, eax\l0x000029f1      js 0x2b62\l"]
	"0x000029f7" [URL="dbg.main/0x000029f7", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x000029f7      mov edi, eax\l0x000029f9      call sym.imp.fchdir\l0x000029fe      test eax, eax\l0x00002a00      js 0x2b8c\l"]
	"0x00002a06" [URL="dbg.main/0x00002a06", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002a06      mov rsi, qword [rsp]                                   ; void *buf\l0x00002a0a      mov edi, r13d                                          ; int fildes\l0x00002a0d      call sym.imp.fstat                                     ; int fstat(int fildes, void *buf)\l0x00002a12      shr eax, 0x1f\l0x00002a15      mov ebx, eax\l"]
	"0x00002a17" [URL="dbg.main/0x00002a17", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2b87\l0x00002a17      call sym.imp.__errno_location\l0x00002a1c      mov r15, rax\l0x00002a1f      test bl, bl\l0x00002a21      jne 0x2ce0\l"]
	"0x00002a27" [URL="dbg.main/0x00002a27", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002a27      mov rax, qword [var_e0h]\l0x00002a2f      mov rbx, qword [var_50h]\l0x00002a34      mov qword [var_20h], rax\l0x00002a39      cmp rax, rbx\l0x00002a3c      setne byte [var_2fh]\l"]
	"0x00002a41" [URL="dbg.main/0x00002a41", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2a77, 0x2aa3, 0x2ab2, 0x2ac8\l0x00002a41      mov dword [r15], 0\l"]
	"0x00002a48" [URL="dbg.main/0x00002a48", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2a8b, 0x2a90\l0x00002a48      mov rdi, r12\l0x00002a4b      call sym.imp.readdir\l0x00002a50      test rax, rax\l0x00002a53      je 0x2b0c\l"]
	"0x00002a59" [URL="dbg.main/0x00002a59", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002a59      cmp byte [rax + 0x13], 0x2e\l0x00002a5d      lea r13, [rax + 0x13]\l0x00002a61      je 0x2a7b\l"]
	"0x00002a63" [URL="dbg.main/0x00002a63", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2a92\l0x00002a63      mov rax, qword [rax]\l0x00002a66      test rax, rax\l0x00002a69      je 0x2a94\l"]
	"0x00002a6b" [URL="dbg.main/0x00002a6b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002a6b      cmp byte [var_2fh], 0\l0x00002a70      jne 0x2a94\l"]
	"0x00002a72" [URL="dbg.main/0x00002a72", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002a72      cmp rax, qword [var_58h]\l0x00002a77      jne 0x2a41\l"]
	"0x00002a79" [URL="dbg.main/0x00002a79", fillcolor="white",color="#767676", fontname="Courier",label="0x00002a79      jmp 0x2ace\l"]
	"0x00002a7b" [URL="dbg.main/0x00002a7b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2a61\l0x00002a7b      xor edx, edx\l0x00002a7d      cmp byte [rax + 0x14], 0x2e\l0x00002a81      sete dl\l0x00002a84      movzx edx, byte [rax + rdx + 0x14]\l0x00002a89      test dl, dl\l0x00002a8b      je 0x2a48\l"]
	"0x00002a8d" [URL="dbg.main/0x00002a8d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002a8d      cmp dl, 0x2f\l0x00002a90      je 0x2a48\l"]
	"0x00002a92" [URL="dbg.main/0x00002a92", fillcolor="white",color="#767676", fontname="Courier",label="0x00002a92      jmp 0x2a63\l"]
	"0x00002a94" [URL="dbg.main/0x00002a94", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2a69, 0x2a70\l0x00002a94      mov rsi, qword [buf]                                   ; void *buf\l0x00002a99      mov rdi, r13                                           ; const char *path\l0x00002a9c      call sym.imp.lstat                                     ; void lstat(const char *path, void *buf)\l0x00002aa1      test eax, eax\l0x00002aa3      js 0x2a41\l"]
	"0x00002aa5" [URL="dbg.main/0x00002aa5", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002aa5      mov rax, qword [var_58h]\l0x00002aaa      cmp qword [var_178h], rax\l0x00002ab2      jne 0x2a41\l"]
	"0x00002ab4" [URL="dbg.main/0x00002ab4", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002ab4      cmp qword [var_20h], rbx\l0x00002ab9      je 0x2ace\l"]
	"0x00002abb" [URL="dbg.main/0x00002abb", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002abb      mov rax, qword [var_50h]\l0x00002ac0      cmp qword [var_170h], rax\l0x00002ac8      jne 0x2a41\l"]
	"0x00002ace" [URL="dbg.main/0x00002ace", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2a79, 0x2ab9\l0x00002ace      mov rdi, r13                                           ; const char *s\l0x00002ad1      call sym.imp.strlen                                    ; size_t strlen(const char *s)\l0x00002ad6      mov rdi, qword [var_8h]                                ; int64_t arg1\l0x00002adb      mov rsi, r13                                           ; int64_t arg2\l0x00002ade      mov rdx, rax                                           ; int64_t arg3\l0x00002ae1      call dbg.file_name_prepend\l0x00002ae6      mov rdi, r12\l0x00002ae9      call sym.imp.closedir\l0x00002aee      test eax, eax\l0x00002af0      jne 0x2b27\l"]
	"0x00002af2" [URL="dbg.main/0x00002af2", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002af2      mov rdi, qword [var_30h]\l0x00002af7      mov rsi, qword [rsp]\l0x00002afb      mov ecx, 0x24                                          ; '$'\l0x00002b00      rep movsd dword [rdi], dword ptr [rsi]\l0x00002b02      mov r14, qword [var_18h]\l0x00002b07      jmp 0x29a5\l"]
	"0x00002b0c" [URL="dbg.main/0x00002b0c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2a53\l0x00002b0c      mov ebx, dword [r15]\l0x00002b0f      test ebx, ebx\l0x00002b11      jne 0x2c08\l"]
	"0x00002b17" [URL="dbg.main/0x00002b17", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002b17      mov rdi, r12\l0x00002b1a      call sym.imp.closedir\l0x00002b1f      test eax, eax\l0x00002b21      je 0x2bce\l"]
	"0x00002b27" [URL="dbg.main/0x00002b27", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2af0, 0x2c13\l0x00002b27      mov rdi, r14                                           ; int64_t arg1\l0x00002b2a      call dbg.nth_parent\l0x00002b2f      mov rdi, rax                                           ; int64_t arg1\l0x00002b32      call dbg.quote\l0x00002b37      mov edx, 5\l0x00002b3c      lea rsi, str.reading_directory__s                      ; 0x7163 ; \"reading directory %s\"\l0x00002b43      xor edi, edi\l0x00002b45      mov r12, rax\l0x00002b48      call sym.imp.dcgettext\l0x00002b4d      mov esi, dword [r15]                                   ; int errname\l0x00002b50      mov rcx, r12\l0x00002b53      mov edi, 1                                             ; int status\l0x00002b58      mov rdx, rax                                           ; char *format\l0x00002b5b      xor eax, eax\l0x00002b5d      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002b62" [URL="dbg.main/0x00002b62", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x29f1\l0x00002b62      lea rdi, [0x00007131]                                  ; \"..\"\l0x00002b69      call sym.imp.chdir\l0x00002b6e      test eax, eax\l0x00002b70      js 0x2b8c\l"]
	"0x00002b72" [URL="dbg.main/0x00002b72", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="0x00002b72      mov rsi, qword [rsp]\l0x00002b76      lea rdi, [0x00007132]                                  ; \".\"\l0x00002b7d      call sym.imp.stat\l0x00002b82      shr eax, 0x1f\l0x00002b85      mov ebx, eax\l0x00002b87      jmp 0x2a17\l"]
	"0x00002b8c" [URL="dbg.main/0x00002b8c", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREFS from dbg.main @ 0x2a00, 0x2b70\l0x00002b8c      mov rdi, r14                                           ; int64_t arg1\l0x00002b8f      call dbg.nth_parent\l0x00002b94      mov rdi, rax                                           ; int64_t arg1\l0x00002b97      call dbg.quote\l0x00002b9c      mov edx, 5\l0x00002ba1      lea rsi, str.failed_to_chdir_to__s                     ; 0x714d ; \"failed to chdir to %s\"\l0x00002ba8      xor edi, edi\l0x00002baa      mov r13, rax\l0x00002bad      call sym.imp.dcgettext\l0x00002bb2      mov r12, rax\l0x00002bb5      call sym.imp.__errno_location\l0x00002bba      mov rcx, r13\l0x00002bbd      mov rdx, r12                                           ; char *format\l0x00002bc0      mov edi, 1                                             ; int status\l0x00002bc5      mov esi, dword [rax]                                   ; int errname\l0x00002bc7      xor eax, eax\l0x00002bc9      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002bce" [URL="dbg.main/0x00002bce", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2b21\l0x00002bce      mov rdi, r14                                           ; int64_t arg1\l0x00002bd1      call dbg.nth_parent\l0x00002bd6      mov rdi, rax                                           ; int64_t arg1\l0x00002bd9      call dbg.quote\l0x00002bde      mov edx, 5\l0x00002be3      lea rsi, str.couldnt_find_directory_entry_in__s_with_matching_i_node ; 0x7490 ; \"couldn't find directory entry in %s with matching i-node\"\l0x00002bea      xor edi, edi\l0x00002bec      mov r12, rax\l0x00002bef      call sym.imp.dcgettext\l0x00002bf4      mov rcx, r12\l0x00002bf7      xor esi, esi                                           ; int errname\l0x00002bf9      mov edi, 1                                             ; int status\l0x00002bfe      mov rdx, rax                                           ; char *format\l0x00002c01      xor eax, eax\l0x00002c03      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002c08" [URL="dbg.main/0x00002c08", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2b11\l0x00002c08      mov rdi, r12\l0x00002c0b      call sym.imp.closedir\l0x00002c10      mov dword [r15], ebx\l0x00002c13      jmp 0x2b27\l"]
	"0x00002c18" [URL="dbg.main/0x00002c18", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x29de\l0x00002c18      mov rdi, r14                                           ; int64_t arg1\l0x00002c1b      call dbg.nth_parent\l0x00002c20      mov rdi, rax                                           ; int64_t arg1\l0x00002c23      call dbg.quote\l0x00002c28      mov edx, 5\l0x00002c2d      lea rsi, str.cannot_open_directory__s                  ; 0x7134 ; \"cannot open directory %s\"\l0x00002c34      xor edi, edi\l0x00002c36      mov r13, rax\l0x00002c39      call sym.imp.dcgettext\l0x00002c3e      mov r12, rax\l0x00002c41      call sym.imp.__errno_location\l0x00002c46      mov rcx, r13\l0x00002c49      mov rdx, r12                                           ; char *format\l0x00002c4c      mov edi, 1                                             ; int status\l0x00002c51      mov esi, dword [rax]                                   ; int errname\l0x00002c53      xor eax, eax\l0x00002c55      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002c5a" [URL="dbg.main/0x00002c5a", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2981\l0x00002c5a      lea rsi, [0x00007132]                                  ; \".\" ; int64_t arg2\l0x00002c61      mov edi, 4                                             ; int64_t arg1\l0x00002c66      call sym.quotearg_style\l0x00002c6b      mov edx, 5\l0x00002c70      lea rsi, str.failed_to_stat__s                         ; 0x711f ; \"failed to stat %s\"\l0x00002c77      xor edi, edi\l0x00002c79      mov r13, rax\l0x00002c7c      call sym.imp.dcgettext\l0x00002c81      mov r12, rax\l0x00002c84      call sym.imp.__errno_location\l0x00002c89      mov rcx, r13\l0x00002c8c      mov rdx, r12                                           ; char *format\l0x00002c8f      mov edi, 1                                             ; int status\l0x00002c94      mov esi, dword [rax]                                   ; int errname\l0x00002c96      xor eax, eax\l0x00002c98      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002c9d" [URL="dbg.main/0x00002c9d", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x295a\l0x00002c9d      lea rsi, [0x000079bb]                                  ; \"/\" ; int64_t arg2\l0x00002ca4      mov edi, 4                                             ; int64_t arg1\l0x00002ca9      call sym.quotearg_style\l0x00002cae      mov edx, 5\l0x00002cb3      lea rsi, str.failed_to_get_attributes_of__s            ; 0x7470 ; \"failed to get attributes of %s\"\l0x00002cba      xor edi, edi\l0x00002cbc      mov r13, rax\l0x00002cbf      call sym.imp.dcgettext\l0x00002cc4      mov r12, rax\l0x00002cc7      call sym.imp.__errno_location\l0x00002ccc      mov rcx, r13\l0x00002ccf      mov rdx, r12                                           ; char *format\l0x00002cd2      mov edi, 1                                             ; int status\l0x00002cd7      mov esi, dword [rax]                                   ; int errname\l0x00002cd9      xor eax, eax\l0x00002cdb      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002ce0" [URL="dbg.main/0x00002ce0", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2a21\l0x00002ce0      mov rdi, r14                                           ; int64_t arg1\l0x00002ce3      call dbg.nth_parent\l0x00002ce8      mov rdi, rax                                           ; int64_t arg1\l0x00002ceb      call dbg.quote\l0x00002cf0      mov edx, 5\l0x00002cf5      lea rsi, str.failed_to_stat__s                         ; 0x711f ; \"failed to stat %s\"\l0x00002cfc      xor edi, edi\l0x00002cfe      mov r12, rax\l0x00002d01      call sym.imp.dcgettext\l0x00002d06      mov esi, dword [r15]                                   ; int errname\l0x00002d09      mov rcx, r12\l0x00002d0c      mov edi, 1                                             ; int status\l0x00002d11      mov rdx, rax                                           ; char *format\l0x00002d14      xor eax, eax\l; DATA XREF from sym.quotearg_buffer_restyled @ 0x480a\l0x00002d16      call sym.imp.error                                     ; void error(int status, int errname, char *format)\l"]
	"0x00002d1b" [URL="dbg.main/0x00002d1b", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x29bd\l0x00002d1b      mov r13, qword [var_8h]\l0x00002d20      mov rdi, qword [r13 + 0x10]\l0x00002d24      cmp byte [rdi], 0\l0x00002d27      je 0x2d44\l"]
	"0x00002d29" [URL="dbg.main/0x00002d29", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2d55\l0x00002d29      call sym.imp.puts                                      ; int puts(const char *s)\l0x00002d2e      mov rdi, qword [r13]                                   ; void *ptr\l0x00002d32      call sym.imp.free                                      ; void free(void *ptr)\l0x00002d37      mov rdi, r13                                           ; void *ptr\l0x00002d3a      call sym.imp.free                                      ; void free(void *ptr)\l0x00002d3f      jmp 0x28a6\l"]
	"0x00002d44" [URL="dbg.main/0x00002d44", fillcolor="#c19c00",color="#c19c00", fontname="Courier",label="; CODE XREF from dbg.main @ 0x2d27\l0x00002d44      mov rdi, r13                                           ; int64_t arg1\l0x00002d47      xor edx, edx                                           ; int64_t arg3\l0x00002d49      mov rsi, rbp                                           ; int64_t arg2\l0x00002d4c      call dbg.file_name_prepend\l0x00002d51      mov rdi, qword [r13 + 0x10]\l0x00002d55      jmp 0x2d29\l"]
        "0x00002760" -> "0x000027f5" [color="#3a96dd"];
        "0x000027f5" -> "0x0000287b" [color="#13a10e"];
        "0x000027f5" -> "0x0000280e" [color="#c50f1f"];
        "0x0000280e" -> "0x00002870" [color="#13a10e"];
        "0x0000280e" -> "0x00002813" [color="#c50f1f"];
        "0x00002813" -> "0x00002850" [color="#13a10e"];
        "0x00002813" -> "0x00002815" [color="#c50f1f"];
        "0x00002815" -> "0x0000285e" [color="#13a10e"];
        "0x00002815" -> "0x0000281c" [color="#c50f1f"];
        "0x00002850" -> "0x00002904" [color="#13a10e"];
        "0x00002850" -> "0x00002859" [color="#c50f1f"];
        "0x00002859" -> "0x000027f5" [color="#3a96dd"];
        "0x0000285e" -> "0x00002904" [color="#13a10e"];
        "0x0000285e" -> "0x00002869" [color="#c50f1f"];
        "0x00002869" -> "0x00002870" [color="#3a96dd"];
        "0x00002870" -> "0x000027f5" [color="#3a96dd"];
        "0x0000287b" -> "0x000028e1" [color="#13a10e"];
        "0x0000287b" -> "0x00002884" [color="#c50f1f"];
        "0x00002884" -> "0x000028cd" [color="#13a10e"];
        "0x00002884" -> "0x00002889" [color="#c50f1f"];
        "0x00002889" -> "0x00002913" [color="#13a10e"];
        "0x00002889" -> "0x00002896" [color="#c50f1f"];
        "0x00002896" -> "0x000028a6" [color="#3a96dd"];
        "0x000028a6" -> "0x0000290e" [color="#13a10e"];
        "0x000028a6" -> "0x000028b9" [color="#c50f1f"];
        "0x000028cd" -> "0x00002889" [color="#13a10e"];
        "0x000028cd" -> "0x000028d7" [color="#c50f1f"];
        "0x000028d7" -> "0x000028a6" [color="#3a96dd"];
        "0x000028e1" -> "0x00002884" [color="#3a96dd"];
        "0x00002904" -> "0x0000290e" [color="#3a96dd"];
        "0x00002913" -> "0x00002c9d" [color="#13a10e"];
        "0x00002913" -> "0x00002960" [color="#c50f1f"];
        "0x00002960" -> "0x00002c5a" [color="#13a10e"];
        "0x00002960" -> "0x00002987" [color="#c50f1f"];
        "0x00002987" -> "0x000029a5" [color="#3a96dd"];
        "0x000029a5" -> "0x000029c3" [color="#13a10e"];
        "0x000029a5" -> "0x000029b4" [color="#c50f1f"];
        "0x000029b4" -> "0x00002d1b" [color="#13a10e"];
        "0x000029b4" -> "0x000029c3" [color="#c50f1f"];
        "0x000029c3" -> "0x00002c18" [color="#13a10e"];
        "0x000029c3" -> "0x000029e4" [color="#c50f1f"];
        "0x000029e4" -> "0x00002b62" [color="#13a10e"];
        "0x000029e4" -> "0x000029f7" [color="#c50f1f"];
        "0x000029f7" -> "0x00002b8c" [color="#13a10e"];
        "0x000029f7" -> "0x00002a06" [color="#c50f1f"];
        "0x00002a06" -> "0x00002a17" [color="#3a96dd"];
        "0x00002a17" -> "0x00002ce0" [color="#13a10e"];
        "0x00002a17" -> "0x00002a27" [color="#c50f1f"];
        "0x00002a27" -> "0x00002a41" [color="#3a96dd"];
        "0x00002a41" -> "0x00002a48" [color="#3a96dd"];
        "0x00002a48" -> "0x00002b0c" [color="#13a10e"];
        "0x00002a48" -> "0x00002a59" [color="#c50f1f"];
        "0x00002a59" -> "0x00002a7b" [color="#13a10e"];
        "0x00002a59" -> "0x00002a63" [color="#c50f1f"];
        "0x00002a63" -> "0x00002a94" [color="#13a10e"];
        "0x00002a63" -> "0x00002a6b" [color="#c50f1f"];
        "0x00002a6b" -> "0x00002a94" [color="#13a10e"];
        "0x00002a6b" -> "0x00002a72" [color="#c50f1f"];
        "0x00002a72" -> "0x00002a41" [color="#13a10e"];
        "0x00002a72" -> "0x00002a79" [color="#c50f1f"];
        "0x00002a79" -> "0x00002ace" [color="#3a96dd"];
        "0x00002a7b" -> "0x00002a48" [color="#13a10e"];
        "0x00002a7b" -> "0x00002a8d" [color="#c50f1f"];
        "0x00002a8d" -> "0x00002a48" [color="#13a10e"];
        "0x00002a8d" -> "0x00002a92" [color="#c50f1f"];
        "0x00002a92" -> "0x00002a63" [color="#3a96dd"];
        "0x00002a94" -> "0x00002a41" [color="#13a10e"];
        "0x00002a94" -> "0x00002aa5" [color="#c50f1f"];
        "0x00002aa5" -> "0x00002a41" [color="#13a10e"];
        "0x00002aa5" -> "0x00002ab4" [color="#c50f1f"];
        "0x00002ab4" -> "0x00002ace" [color="#13a10e"];
        "0x00002ab4" -> "0x00002abb" [color="#c50f1f"];
        "0x00002abb" -> "0x00002a41" [color="#13a10e"];
        "0x00002abb" -> "0x00002ace" [color="#c50f1f"];
        "0x00002ace" -> "0x00002b27" [color="#13a10e"];
        "0x00002ace" -> "0x00002af2" [color="#c50f1f"];
        "0x00002af2" -> "0x000029a5" [color="#3a96dd"];
        "0x00002b0c" -> "0x00002c08" [color="#13a10e"];
        "0x00002b0c" -> "0x00002b17" [color="#c50f1f"];
        "0x00002b17" -> "0x00002bce" [color="#13a10e"];
        "0x00002b17" -> "0x00002b27" [color="#c50f1f"];
        "0x00002b27" -> "0x00002b62" [color="#3a96dd"];
        "0x00002b62" -> "0x00002b8c" [color="#13a10e"];
        "0x00002b62" -> "0x00002b72" [color="#c50f1f"];
        "0x00002b72" -> "0x00002a17" [color="#3a96dd"];
        "0x00002b8c" -> "0x00002bce" [color="#3a96dd"];
        "0x00002bce" -> "0x00002c08" [color="#3a96dd"];
        "0x00002c08" -> "0x00002b27" [color="#3a96dd"];
        "0x00002c18" -> "0x00002c5a" [color="#3a96dd"];
        "0x00002c5a" -> "0x00002c9d" [color="#3a96dd"];
        "0x00002c9d" -> "0x00002ce0" [color="#3a96dd"];
        "0x00002ce0" -> "0x00002d1b" [color="#3a96dd"];
        "0x00002d1b" -> "0x00002d44" [color="#13a10e"];
        "0x00002d1b" -> "0x00002d29" [color="#c50f1f"];
        "0x00002d29" -> "0x000028a6" [color="#3a96dd"];
        "0x00002d44" -> "0x00002d29" [color="#3a96dd"];
}
